{"mappings":"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","sources":["<anon>","src/index.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/dom.js","node_modules/dom7/dom7.esm.js","node_modules/@swc/helpers/esm/_assert_this_initialized.js","node_modules/@swc/helpers/esm/_inherits.js","node_modules/@swc/helpers/esm/_set_prototype_of.js","node_modules/@swc/helpers/esm/_possible_constructor_return.js","node_modules/@swc/helpers/esm/_type_of.js","node_modules/@swc/helpers/esm/_wrap_native_super.js","node_modules/@swc/helpers/esm/_construct.js","node_modules/@swc/helpers/esm/_is_native_reflect_construct.js","node_modules/@swc/helpers/esm/_get_prototype_of.js","node_modules/@swc/helpers/esm/_is_native_function.js","node_modules/@swc/helpers/esm/_create_super.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/images/index.js","node_modules/swiper/core/images/loadImage.js","node_modules/swiper/core/images/preloadImages.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/lazy/lazy.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/content.js","src/js/menu.js","src/js/modalBose.js","src/js/modalOrder.js"],"sourcesContent":["(function () {\n/**\n * Swiper 8.4.7\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: January 30, 2023\n */ /* eslint no-param-reassign: \"off\" */ function $e3055412a69a0bec$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $89767be5ae191d10$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $89767be5ae191d10$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $89767be5ae191d10$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $89767be5ae191d10$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $e70cad04b84cd1c0$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $db996d728bd6bdbf$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $21be0414e7551937$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c35227b66bb73462$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $7a656066cb9fb4bf$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c35227b66bb73462$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c35227b66bb73462$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $b6c37a1b08cb752d$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $e70cad04b84cd1c0$export$e6256bf45c68d561)(arr) || (0, $db996d728bd6bdbf$export$2fd15edff6687200)(arr, i) || (0, $7a656066cb9fb4bf$export$a5be06335b3a083c)(arr, i) || (0, $21be0414e7551937$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $64ef3ecb073cf3d1$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c35227b66bb73462$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $e7a1e1249a38f823$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $5063040d55f66da2$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $7fed984c591c61d1$export$1b5e630bc3aea29f(arr) {\n    return (0, $64ef3ecb073cf3d1$export$7e0947b5ad3404e2)(arr) || (0, $e7a1e1249a38f823$export$1eb58a6e75231000)(arr) || (0, $7a656066cb9fb4bf$export$a5be06335b3a083c)(arr) || (0, $5063040d55f66da2$export$e6f3c4780d19eb2b)();\n}\n\n\n/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */ /* eslint-disable no-param-reassign */ function $3bd3f193ccd5630c$var$isObject(obj) {\n    return obj !== null && typeof obj === \"object\" && \"constructor\" in obj && obj.constructor === Object;\n}\nfunction $3bd3f193ccd5630c$export$8b58be045bf06082() {\n    var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    Object.keys(src).forEach(function(key) {\n        if (typeof target[key] === \"undefined\") target[key] = src[key];\n        else if ($3bd3f193ccd5630c$var$isObject(src[key]) && $3bd3f193ccd5630c$var$isObject(target[key]) && Object.keys(src[key]).length > 0) $3bd3f193ccd5630c$export$8b58be045bf06082(target[key], src[key]);\n    });\n}\nvar $3bd3f193ccd5630c$export$3fdcb9b4d81368d8 = {\n    body: {},\n    addEventListener: function() {},\n    removeEventListener: function() {},\n    activeElement: {\n        blur: function() {},\n        nodeName: \"\"\n    },\n    querySelector: function() {\n        return null;\n    },\n    querySelectorAll: function() {\n        return [];\n    },\n    getElementById: function() {\n        return null;\n    },\n    createEvent: function() {\n        return {\n            initEvent: function() {}\n        };\n    },\n    createElement: function() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute: function() {},\n            getElementsByTagName: function() {\n                return [];\n            }\n        };\n    },\n    createElementNS: function() {\n        return {};\n    },\n    importNode: function() {\n        return null;\n    },\n    location: {\n        hash: \"\",\n        host: \"\",\n        hostname: \"\",\n        href: \"\",\n        origin: \"\",\n        pathname: \"\",\n        protocol: \"\",\n        search: \"\"\n    }\n};\nfunction $3bd3f193ccd5630c$export$f65ca476c09acec0() {\n    var doc = typeof document !== \"undefined\" ? document : {};\n    $3bd3f193ccd5630c$export$8b58be045bf06082(doc, $3bd3f193ccd5630c$export$3fdcb9b4d81368d8);\n    return doc;\n}\nvar $3bd3f193ccd5630c$export$8582633f185c62bb = {\n    document: $3bd3f193ccd5630c$export$3fdcb9b4d81368d8,\n    navigator: {\n        userAgent: \"\"\n    },\n    location: {\n        hash: \"\",\n        host: \"\",\n        hostname: \"\",\n        href: \"\",\n        origin: \"\",\n        pathname: \"\",\n        protocol: \"\",\n        search: \"\"\n    },\n    history: {\n        replaceState: function() {},\n        pushState: function() {},\n        go: function() {},\n        back: function() {}\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener: function() {},\n    removeEventListener: function() {},\n    getComputedStyle: function() {\n        return {\n            getPropertyValue: function() {\n                return \"\";\n            }\n        };\n    },\n    Image: function() {},\n    Date: function() {},\n    screen: {},\n    setTimeout: function() {},\n    clearTimeout: function() {},\n    matchMedia: function() {\n        return {};\n    },\n    requestAnimationFrame: function(callback) {\n        if (typeof setTimeout === \"undefined\") {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame: function(id) {\n        if (typeof setTimeout === \"undefined\") return;\n        clearTimeout(id);\n    }\n};\nfunction $3bd3f193ccd5630c$export$38b2d434cce3ea22() {\n    var win = typeof window !== \"undefined\" ? window : {};\n    $3bd3f193ccd5630c$export$8b58be045bf06082(win, $3bd3f193ccd5630c$export$8582633f185c62bb);\n    return win;\n}\n\n\n/**\n * Dom7 4.0.4\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2022, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: January 11, 2022\n */ function $90bf9ee1e0f0ea97$export$f3b8ed2e4a5d10b8(self) {\n    if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    return self;\n}\n\n\n\nfunction $29ba11907b394831$export$c2c98ac76e997b63(o, p) {\n    $29ba11907b394831$export$c2c98ac76e997b63 = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n    };\n    return $29ba11907b394831$export$c2c98ac76e997b63(o, p);\n}\n\n\nfunction $e23c82ff3e4e415d$export$7e4530ad35d3bb8(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) throw new TypeError(\"Super expression must either be null or a function\");\n    subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n            value: subClass,\n            writable: true,\n            configurable: true\n        }\n    });\n    if (superClass) (0, $29ba11907b394831$export$c2c98ac76e997b63)(subClass, superClass);\n}\n\n\n\nfunction $47e0aa82139bfe16$export$5f0017c582d45a2d(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n\n\nfunction $3feb72aea5525294$export$ef97c660ca164e52(self, call) {\n    if (call && ((0, $47e0aa82139bfe16$export$5f0017c582d45a2d)(call) === \"object\" || typeof call === \"function\")) return call;\n    return (0, $90bf9ee1e0f0ea97$export$f3b8ed2e4a5d10b8)(self);\n}\n\n\n\n\nfunction $68d2f7aa73fd860f$export$685354647fba1516() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n\n\nfunction $2537243cab6b0016$export$2d841144c5f8c4ab(Parent, args, Class) {\n    if ((0, $68d2f7aa73fd860f$export$685354647fba1516)()) $2537243cab6b0016$export$2d841144c5f8c4ab = Reflect.construct;\n    else $2537243cab6b0016$export$2d841144c5f8c4ab = function construct(Parent, args, Class) {\n        var a = [\n            null\n        ];\n        a.push.apply(a, args);\n        var Constructor = Function.bind.apply(Parent, a);\n        var instance = new Constructor();\n        if (Class) (0, $29ba11907b394831$export$c2c98ac76e997b63)(instance, Class.prototype);\n        return instance;\n    };\n    return $2537243cab6b0016$export$2d841144c5f8c4ab.apply(null, arguments);\n}\n\n\nfunction $40cae3b32ee7ab1c$export$f09211a7d3c496a1(o) {\n    $40cae3b32ee7ab1c$export$f09211a7d3c496a1 = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n    return $40cae3b32ee7ab1c$export$f09211a7d3c496a1(o);\n}\n\n\nfunction $e28541d141bc916c$export$514eda94019f4334(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\n\n\nfunction $c96ca6cb05cc1798$export$2466d533fda16e33(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    $c96ca6cb05cc1798$export$2466d533fda16e33 = function(Class) {\n        if (Class === null || !(0, $e28541d141bc916c$export$514eda94019f4334)(Class)) return Class;\n        if (typeof Class !== \"function\") throw new TypeError(\"Super expression must either be null or a function\");\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n        function Wrapper() {\n            return (0, $2537243cab6b0016$export$2d841144c5f8c4ab)(Class, arguments, (0, $40cae3b32ee7ab1c$export$f09211a7d3c496a1)(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, {\n            constructor: {\n                value: Wrapper,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        return (0, $29ba11907b394831$export$c2c98ac76e997b63)(Wrapper, Class);\n    };\n    return $c96ca6cb05cc1798$export$2466d533fda16e33(Class);\n}\n\n\n\n\n\nfunction $3a5851a3803a7a32$export$8dd05c13f5255580(Derived) {\n    var hasNativeReflectConstruct = (0, $68d2f7aa73fd860f$export$685354647fba1516)();\n    return function _createSuperInternal() {\n        var Super = (0, $40cae3b32ee7ab1c$export$f09211a7d3c496a1)(Derived), result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = (0, $40cae3b32ee7ab1c$export$f09211a7d3c496a1)(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else result = Super.apply(this, arguments);\n        return (0, $3feb72aea5525294$export$ef97c660ca164e52)(this, result);\n    };\n}\n\n\n\n/* eslint-disable no-proto */ function $be50936c4ecb1713$var$makeReactive(obj) {\n    var proto = obj.__proto__;\n    Object.defineProperty(obj, \"__proto__\", {\n        get: function() {\n            return proto;\n        },\n        set: function(value) {\n            proto.__proto__ = value;\n        }\n    });\n}\nvar $be50936c4ecb1713$var$Dom7 = /*#__PURE__*/ function(Array1) {\n    \"use strict\";\n    (0, $e23c82ff3e4e415d$export$7e4530ad35d3bb8)(Dom7, Array1);\n    var _super = (0, $3a5851a3803a7a32$export$8dd05c13f5255580)(Dom7);\n    function Dom7(items) {\n        (0, $e3055412a69a0bec$export$2996f80ef42b8419)(this, Dom7);\n        var _this;\n        if (typeof items === \"number\") _this = _super.call(this, items);\n        else {\n            _this = _super.call.apply(_super, [\n                this\n            ].concat((0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(items || [])));\n            $be50936c4ecb1713$var$makeReactive((0, $90bf9ee1e0f0ea97$export$f3b8ed2e4a5d10b8)(_this));\n        }\n        return (0, $3feb72aea5525294$export$ef97c660ca164e52)(_this);\n    }\n    return Dom7;\n}((0, $c96ca6cb05cc1798$export$2466d533fda16e33)(Array));\nfunction $be50936c4ecb1713$var$arrayFlat() {\n    var arr = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [];\n    var res = [];\n    arr.forEach(function(el) {\n        var _res;\n        if (Array.isArray(el)) (_res = res).push.apply(_res, (0, $7fed984c591c61d1$export$1b5e630bc3aea29f)($be50936c4ecb1713$var$arrayFlat(el)));\n        else res.push(el);\n    });\n    return res;\n}\nfunction $be50936c4ecb1713$var$arrayFilter(arr, callback) {\n    return Array.prototype.filter.call(arr, callback);\n}\nfunction $be50936c4ecb1713$var$arrayUnique(arr) {\n    var uniqueArray = [];\n    for(var i = 0; i < arr.length; i += 1)if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n    return uniqueArray;\n}\nfunction $be50936c4ecb1713$var$toCamelCase(string) {\n    return string.toLowerCase().replace(/-(.)/g, function(match, group) {\n        return group.toUpperCase();\n    });\n}\n// eslint-disable-next-line\nfunction $be50936c4ecb1713$var$qsa(selector, context) {\n    if (typeof selector !== \"string\") return [\n        selector\n    ];\n    var a = [];\n    var res = context.querySelectorAll(selector);\n    for(var i = 0; i < res.length; i += 1)a.push(res[i]);\n    return a;\n}\nfunction $be50936c4ecb1713$export$3d8c2f653ac9d0b9(selector, context) {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var arr = [];\n    if (!context && selector instanceof $be50936c4ecb1713$var$Dom7) return selector;\n    if (!selector) return new $be50936c4ecb1713$var$Dom7(arr);\n    if (typeof selector === \"string\") {\n        var html = selector.trim();\n        if (html.indexOf(\"<\") >= 0 && html.indexOf(\">\") >= 0) {\n            var toCreate = \"div\";\n            if (html.indexOf(\"<li\") === 0) toCreate = \"ul\";\n            if (html.indexOf(\"<tr\") === 0) toCreate = \"tbody\";\n            if (html.indexOf(\"<td\") === 0 || html.indexOf(\"<th\") === 0) toCreate = \"tr\";\n            if (html.indexOf(\"<tbody\") === 0) toCreate = \"table\";\n            if (html.indexOf(\"<option\") === 0) toCreate = \"select\";\n            var tempParent = document.createElement(toCreate);\n            tempParent.innerHTML = html;\n            for(var i = 0; i < tempParent.childNodes.length; i += 1)arr.push(tempParent.childNodes[i]);\n        } else arr = $be50936c4ecb1713$var$qsa(selector.trim(), context || document);\n         // arr = qsa(selector, document);\n    } else if (selector.nodeType || selector === window || selector === document) arr.push(selector);\n    else if (Array.isArray(selector)) {\n        if (selector instanceof $be50936c4ecb1713$var$Dom7) return selector;\n        arr = selector;\n    }\n    return new $be50936c4ecb1713$var$Dom7($be50936c4ecb1713$var$arrayUnique(arr));\n}\n$be50936c4ecb1713$export$3d8c2f653ac9d0b9.fn = $be50936c4ecb1713$var$Dom7.prototype;\n// eslint-disable-next-line\nfunction $be50936c4ecb1713$export$d2cf6cd1dc7067d3() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    var classNames = $be50936c4ecb1713$var$arrayFlat(classes.map(function(c) {\n        return c.split(\" \");\n    }));\n    this.forEach(function(el) {\n        var _el_classList;\n        (_el_classList = el.classList).add.apply(_el_classList, (0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(classNames));\n    });\n    return this;\n}\nfunction $be50936c4ecb1713$export$c2255604a80b4506() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    var classNames = $be50936c4ecb1713$var$arrayFlat(classes.map(function(c) {\n        return c.split(\" \");\n    }));\n    this.forEach(function(el) {\n        var _el_classList;\n        (_el_classList = el.classList).remove.apply(_el_classList, (0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(classNames));\n    });\n    return this;\n}\nfunction $be50936c4ecb1713$export$4a80062ca50b57c7() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    var classNames = $be50936c4ecb1713$var$arrayFlat(classes.map(function(c) {\n        return c.split(\" \");\n    }));\n    this.forEach(function(el) {\n        classNames.forEach(function(className) {\n            el.classList.toggle(className);\n        });\n    });\n}\nfunction $be50936c4ecb1713$export$4ea3d958472af68f() {\n    for(var _len = arguments.length, classes = new Array(_len), _key = 0; _key < _len; _key++){\n        classes[_key] = arguments[_key];\n    }\n    var classNames = $be50936c4ecb1713$var$arrayFlat(classes.map(function(c) {\n        return c.split(\" \");\n    }));\n    return $be50936c4ecb1713$var$arrayFilter(this, function(el) {\n        return classNames.filter(function(className) {\n            return el.classList.contains(className);\n        }).length > 0;\n    }).length > 0;\n}\nfunction $be50936c4ecb1713$export$7aabe8b3a840d2fd(attrs, value) {\n    if (arguments.length === 1 && typeof attrs === \"string\") {\n        // Get attr\n        if (this[0]) return this[0].getAttribute(attrs);\n        return undefined;\n    } // Set attrs\n    for(var i = 0; i < this.length; i += 1){\n        if (arguments.length === 2) // String\n        this[i].setAttribute(attrs, value);\n        else // Object\n        for(var attrName in attrs){\n            this[i][attrName] = attrs[attrName];\n            this[i].setAttribute(attrName, attrs[attrName]);\n        }\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$842f2b51efdcb631(attr) {\n    for(var i = 0; i < this.length; i += 1)this[i].removeAttribute(attr);\n    return this;\n}\nfunction $be50936c4ecb1713$export$977f3f6a9323c0f6(props, value) {\n    if (arguments.length === 1 && typeof props === \"string\") {\n        // Get prop\n        if (this[0]) return this[0][props];\n    } else {\n        // Set props\n        for(var i = 0; i < this.length; i += 1){\n            if (arguments.length === 2) // String\n            this[i][props] = value;\n            else // Object\n            for(var propName in props)this[i][propName] = props[propName];\n        }\n        return this;\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$4051a07651545597(key, value) {\n    var el;\n    if (typeof value === \"undefined\") {\n        el = this[0];\n        if (!el) return undefined; // Get value\n        if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) return el.dom7ElementDataStorage[key];\n        var dataKey = el.getAttribute(\"data-\".concat(key));\n        if (dataKey) return dataKey;\n        return undefined;\n    } // Set value\n    for(var i = 0; i < this.length; i += 1){\n        el = this[i];\n        if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n        el.dom7ElementDataStorage[key] = value;\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$33f1b464f736cf21(key) {\n    for(var i = 0; i < this.length; i += 1){\n        var el = this[i];\n        if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n            el.dom7ElementDataStorage[key] = null;\n            delete el.dom7ElementDataStorage[key];\n        }\n    }\n}\nfunction $be50936c4ecb1713$export$ff416b0d33795a06() {\n    var el = this[0];\n    if (!el) return undefined;\n    var dataset = {}; // eslint-disable-line\n    if (el.dataset) for(var dataKey in el.dataset)dataset[dataKey] = el.dataset[dataKey];\n    else for(var i = 0; i < el.attributes.length; i += 1){\n        var attr = el.attributes[i];\n        if (attr.name.indexOf(\"data-\") >= 0) dataset[$be50936c4ecb1713$var$toCamelCase(attr.name.split(\"data-\")[1])] = attr.value;\n    }\n    for(var key in dataset){\n        if (dataset[key] === \"false\") dataset[key] = false;\n        else if (dataset[key] === \"true\") dataset[key] = true;\n        else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n    }\n    return dataset;\n}\nfunction $be50936c4ecb1713$export$b02c28252f48c6ac(value) {\n    if (typeof value === \"undefined\") {\n        // get value\n        var el = this[0];\n        if (!el) return undefined;\n        if (el.multiple && el.nodeName.toLowerCase() === \"select\") {\n            var values = [];\n            for(var i = 0; i < el.selectedOptions.length; i += 1)values.push(el.selectedOptions[i].value);\n            return values;\n        }\n        return el.value;\n    } // set value\n    for(var i1 = 0; i1 < this.length; i1 += 1){\n        var el1 = this[i1];\n        if (Array.isArray(value) && el1.multiple && el1.nodeName.toLowerCase() === \"select\") for(var j = 0; j < el1.options.length; j += 1)el1.options[j].selected = value.indexOf(el1.options[j].value) >= 0;\n        else el1.value = value;\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$2ab9a8f9f1186f14(value) {\n    return this.val(value);\n}\nfunction $be50936c4ecb1713$export$51186ad6e864892a(transform) {\n    for(var i = 0; i < this.length; i += 1)this[i].style.transform = transform;\n    return this;\n}\nfunction $be50936c4ecb1713$export$66bb15e2994e6a26(duration) {\n    for(var i = 0; i < this.length; i += 1)this[i].style.transitionDuration = typeof duration !== \"string\" ? \"\".concat(duration, \"ms\") : duration;\n    return this;\n}\nfunction $be50936c4ecb1713$export$af631764ddc44097() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var _args = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 4), eventType = _args[0], targetSelector = _args[1], listener = _args[2], capture = _args[3];\n    if (typeof args[1] === \"function\") {\n        var ref;\n        ref = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 3), eventType = ref[0], listener = ref[1], capture = ref[2], ref;\n        targetSelector = undefined;\n    }\n    if (!capture) capture = false;\n    function handleLiveEvent(e) {\n        var target = e.target;\n        if (!target) return;\n        var eventData = e.target.dom7EventData || [];\n        if (eventData.indexOf(e) < 0) eventData.unshift(e);\n        if ($be50936c4ecb1713$export$3d8c2f653ac9d0b9(target).is(targetSelector)) listener.apply(target, eventData);\n        else {\n            var parents = $be50936c4ecb1713$export$3d8c2f653ac9d0b9(target).parents(); // eslint-disable-line\n            for(var k = 0; k < parents.length; k += 1)if ($be50936c4ecb1713$export$3d8c2f653ac9d0b9(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n        }\n    }\n    function handleEvent(e) {\n        var eventData = e && e.target ? e.target.dom7EventData || [] : [];\n        if (eventData.indexOf(e) < 0) eventData.unshift(e);\n        listener.apply(this, eventData);\n    }\n    var events = eventType.split(\" \");\n    var j;\n    for(var i = 0; i < this.length; i += 1){\n        var el = this[i];\n        if (!targetSelector) for(j = 0; j < events.length; j += 1){\n            var event = events[j];\n            if (!el.dom7Listeners) el.dom7Listeners = {};\n            if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n            el.dom7Listeners[event].push({\n                listener: listener,\n                proxyListener: handleEvent\n            });\n            el.addEventListener(event, handleEvent, capture);\n        }\n        else // Live events\n        for(j = 0; j < events.length; j += 1){\n            var event1 = events[j];\n            if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n            if (!el.dom7LiveListeners[event1]) el.dom7LiveListeners[event1] = [];\n            el.dom7LiveListeners[event1].push({\n                listener: listener,\n                proxyListener: handleLiveEvent\n            });\n            el.addEventListener(event1, handleLiveEvent, capture);\n        }\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$8c8705df4a2dcec9() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var _args = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 4), eventType = _args[0], targetSelector = _args[1], listener = _args[2], capture = _args[3];\n    if (typeof args[1] === \"function\") {\n        var ref;\n        ref = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 3), eventType = ref[0], listener = ref[1], capture = ref[2], ref;\n        targetSelector = undefined;\n    }\n    if (!capture) capture = false;\n    var events = eventType.split(\" \");\n    for(var i = 0; i < events.length; i += 1){\n        var event = events[i];\n        for(var j = 0; j < this.length; j += 1){\n            var el = this[j];\n            var handlers = void 0;\n            if (!targetSelector && el.dom7Listeners) handlers = el.dom7Listeners[event];\n            else if (targetSelector && el.dom7LiveListeners) handlers = el.dom7LiveListeners[event];\n            if (handlers && handlers.length) for(var k = handlers.length - 1; k >= 0; k -= 1){\n                var handler = handlers[k];\n                if (listener && handler.listener === listener) {\n                    el.removeEventListener(event, handler.proxyListener, capture);\n                    handlers.splice(k, 1);\n                } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n                    el.removeEventListener(event, handler.proxyListener, capture);\n                    handlers.splice(k, 1);\n                } else if (!listener) {\n                    el.removeEventListener(event, handler.proxyListener, capture);\n                    handlers.splice(k, 1);\n                }\n            }\n        }\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$d2de3aaeafa91619() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var dom = this;\n    var _args = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 4), eventName = _args[0], targetSelector = _args[1], listener = _args[2], capture = _args[3];\n    if (typeof args[1] === \"function\") {\n        var ref;\n        ref = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 3), eventName = ref[0], listener = ref[1], capture = ref[2], ref;\n        targetSelector = undefined;\n    }\n    function onceHandler() {\n        for(var _len = arguments.length, eventArgs = new Array(_len), _key = 0; _key < _len; _key++){\n            eventArgs[_key] = arguments[_key];\n        }\n        listener.apply(this, eventArgs);\n        dom.off(eventName, targetSelector, onceHandler, capture);\n        if (onceHandler.dom7proxy) delete onceHandler.dom7proxy;\n    }\n    onceHandler.dom7proxy = listener;\n    return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction $be50936c4ecb1713$export$e614dc9140f7ae71() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var events = args[0].split(\" \");\n    var eventData = args[1];\n    for(var i = 0; i < events.length; i += 1){\n        var event = events[i];\n        for(var j = 0; j < this.length; j += 1){\n            var el = this[j];\n            if (window.CustomEvent) {\n                var evt = new window.CustomEvent(event, {\n                    detail: eventData,\n                    bubbles: true,\n                    cancelable: true\n                });\n                el.dom7EventData = args.filter(function(data, dataIndex) {\n                    return dataIndex > 0;\n                });\n                el.dispatchEvent(evt);\n                el.dom7EventData = [];\n                delete el.dom7EventData;\n            }\n        }\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$358dc01d65cad417(callback) {\n    var dom = this;\n    function fireCallBack(e) {\n        if (e.target !== this) return;\n        callback.call(this, e);\n        dom.off(\"transitionend\", fireCallBack);\n    }\n    if (callback) dom.on(\"transitionend\", fireCallBack);\n    return this;\n}\nfunction $be50936c4ecb1713$export$70f051812b89bf32(callback) {\n    var dom = this;\n    function fireCallBack(e) {\n        if (e.target !== this) return;\n        callback.call(this, e);\n        dom.off(\"animationend\", fireCallBack);\n    }\n    if (callback) dom.on(\"animationend\", fireCallBack);\n    return this;\n}\nfunction $be50936c4ecb1713$export$7e3df82ee760448c() {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    if (this[0] === window) return window.innerWidth;\n    if (this.length > 0) return parseFloat(this.css(\"width\"));\n    return null;\n}\nfunction $be50936c4ecb1713$export$e823f88e4111159a(includeMargins) {\n    if (this.length > 0) {\n        if (includeMargins) {\n            var styles = this.styles();\n            return this[0].offsetWidth + parseFloat(styles.getPropertyValue(\"margin-right\")) + parseFloat(styles.getPropertyValue(\"margin-left\"));\n        }\n        return this[0].offsetWidth;\n    }\n    return null;\n}\nfunction $be50936c4ecb1713$export$ac607276a8fe9f0a() {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    if (this[0] === window) return window.innerHeight;\n    if (this.length > 0) return parseFloat(this.css(\"height\"));\n    return null;\n}\nfunction $be50936c4ecb1713$export$fc5b8aac72846d1e(includeMargins) {\n    if (this.length > 0) {\n        if (includeMargins) {\n            var styles = this.styles();\n            return this[0].offsetHeight + parseFloat(styles.getPropertyValue(\"margin-top\")) + parseFloat(styles.getPropertyValue(\"margin-bottom\"));\n        }\n        return this[0].offsetHeight;\n    }\n    return null;\n}\nfunction $be50936c4ecb1713$export$cc800923e997bb8() {\n    if (this.length > 0) {\n        var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n        var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n        var el = this[0];\n        var box = el.getBoundingClientRect();\n        var body = document.body;\n        var clientTop = el.clientTop || body.clientTop || 0;\n        var clientLeft = el.clientLeft || body.clientLeft || 0;\n        var scrollTop = el === window ? window.scrollY : el.scrollTop;\n        var scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n        return {\n            top: box.top + scrollTop - clientTop,\n            left: box.left + scrollLeft - clientLeft\n        };\n    }\n    return null;\n}\nfunction $be50936c4ecb1713$export$fe8985bb6374093c() {\n    for(var i = 0; i < this.length; i += 1)this[i].style.display = \"none\";\n    return this;\n}\nfunction $be50936c4ecb1713$export$57bf213be019eeb0() {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    for(var i = 0; i < this.length; i += 1){\n        var el = this[i];\n        if (el.style.display === \"none\") el.style.display = \"\";\n        if (window.getComputedStyle(el, null).getPropertyValue(\"display\") === \"none\") // Still not visible\n        el.style.display = \"block\";\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$9dd6ff9ea0189349() {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    if (this[0]) return window.getComputedStyle(this[0], null);\n    return {};\n}\nfunction $be50936c4ecb1713$export$dbf350e5966cf602(props, value) {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var i;\n    if (arguments.length === 1) {\n        if (typeof props === \"string\") {\n            // .css('width')\n            if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n        } else {\n            // .css({ width: '100px' })\n            for(i = 0; i < this.length; i += 1)for(var prop in props)this[i].style[prop] = props[prop];\n            return this;\n        }\n    }\n    if (arguments.length === 2 && typeof props === \"string\") {\n        // .css('width', '100px')\n        for(i = 0; i < this.length; i += 1)this[i].style[props] = value;\n        return this;\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$79b2f7037acddd43(callback) {\n    if (!callback) return this;\n    this.forEach(function(el, index) {\n        callback.apply(el, [\n            el,\n            index\n        ]);\n    });\n    return this;\n}\nfunction $be50936c4ecb1713$export$3dea766d36a8935f(callback) {\n    var result = $be50936c4ecb1713$var$arrayFilter(this, callback);\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9(result);\n}\nfunction $be50936c4ecb1713$export$c0bb0b647f701bb5(html) {\n    if (typeof html === \"undefined\") return this[0] ? this[0].innerHTML : null;\n    for(var i = 0; i < this.length; i += 1)this[i].innerHTML = html;\n    return this;\n}\nfunction $be50936c4ecb1713$export$6f093cfa640b7166(text) {\n    if (typeof text === \"undefined\") return this[0] ? this[0].textContent.trim() : null;\n    for(var i = 0; i < this.length; i += 1)this[i].textContent = text;\n    return this;\n}\nfunction $be50936c4ecb1713$export$226b3eccf92c9ed9(selector) {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var el = this[0];\n    var compareWith;\n    var i;\n    if (!el || typeof selector === \"undefined\") return false;\n    if (typeof selector === \"string\") {\n        if (el.matches) return el.matches(selector);\n        if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n        if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n        compareWith = $be50936c4ecb1713$export$3d8c2f653ac9d0b9(selector);\n        for(i = 0; i < compareWith.length; i += 1){\n            if (compareWith[i] === el) return true;\n        }\n        return false;\n    }\n    if (selector === document) return el === document;\n    if (selector === window) return el === window;\n    if (selector.nodeType || selector instanceof $be50936c4ecb1713$var$Dom7) {\n        compareWith = selector.nodeType ? [\n            selector\n        ] : selector;\n        for(i = 0; i < compareWith.length; i += 1){\n            if (compareWith[i] === el) return true;\n        }\n        return false;\n    }\n    return false;\n}\nfunction $be50936c4ecb1713$export$b610b8812bbcded9() {\n    var child = this[0];\n    var i;\n    if (child) {\n        i = 0; // eslint-disable-next-line\n        while((child = child.previousSibling) !== null)if (child.nodeType === 1) i += 1;\n        return i;\n    }\n    return undefined;\n}\nfunction $be50936c4ecb1713$export$9663ddc1cf085b32(index) {\n    if (typeof index === \"undefined\") return this;\n    var length = this.length;\n    if (index > length - 1) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n    if (index < 0) {\n        var returnIndex = length + index;\n        if (returnIndex < 0) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n        return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([\n            this[returnIndex]\n        ]);\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([\n        this[index]\n    ]);\n}\nfunction $be50936c4ecb1713$export$10d8903dec122b9d() {\n    for(var _len = arguments.length, els = new Array(_len), _key = 0; _key < _len; _key++){\n        els[_key] = arguments[_key];\n    }\n    var newChild;\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    for(var k = 0; k < els.length; k += 1){\n        newChild = els[k];\n        for(var i = 0; i < this.length; i += 1){\n            if (typeof newChild === \"string\") {\n                var tempDiv = document.createElement(\"div\");\n                tempDiv.innerHTML = newChild;\n                while(tempDiv.firstChild)this[i].appendChild(tempDiv.firstChild);\n            } else if (newChild instanceof $be50936c4ecb1713$var$Dom7) for(var j = 0; j < newChild.length; j += 1)this[i].appendChild(newChild[j]);\n            else this[i].appendChild(newChild);\n        }\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$9ceefe31f12a3778(parent) {\n    $be50936c4ecb1713$export$3d8c2f653ac9d0b9(parent).append(this);\n    return this;\n}\nfunction $be50936c4ecb1713$export$68159836694e22c1(newChild) {\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var i;\n    var j;\n    for(i = 0; i < this.length; i += 1){\n        if (typeof newChild === \"string\") {\n            var tempDiv = document.createElement(\"div\");\n            tempDiv.innerHTML = newChild;\n            for(j = tempDiv.childNodes.length - 1; j >= 0; j -= 1)this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n        } else if (newChild instanceof $be50936c4ecb1713$var$Dom7) for(j = 0; j < newChild.length; j += 1)this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n        else this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n    return this;\n}\nfunction $be50936c4ecb1713$export$44da2b52169043ea(parent) {\n    $be50936c4ecb1713$export$3d8c2f653ac9d0b9(parent).prepend(this);\n    return this;\n}\nfunction $be50936c4ecb1713$export$86b68c7dbeb53c22(selector) {\n    var before = $be50936c4ecb1713$export$3d8c2f653ac9d0b9(selector);\n    for(var i = 0; i < this.length; i += 1){\n        if (before.length === 1) before[0].parentNode.insertBefore(this[i], before[0]);\n        else if (before.length > 1) for(var j = 0; j < before.length; j += 1)before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n    }\n}\nfunction $be50936c4ecb1713$export$c4f94c8b3850a5a9(selector) {\n    var after = $be50936c4ecb1713$export$3d8c2f653ac9d0b9(selector);\n    for(var i = 0; i < this.length; i += 1){\n        if (after.length === 1) after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n        else if (after.length > 1) for(var j = 0; j < after.length; j += 1)after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n    }\n}\nfunction $be50936c4ecb1713$export$48cfd1e771a65c4f(selector) {\n    if (this.length > 0) {\n        if (selector) {\n            if (this[0].nextElementSibling && $be50936c4ecb1713$export$3d8c2f653ac9d0b9(this[0].nextElementSibling).is(selector)) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([\n                this[0].nextElementSibling\n            ]);\n            return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n        }\n        if (this[0].nextElementSibling) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([\n            this[0].nextElementSibling\n        ]);\n        return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n}\nfunction $be50936c4ecb1713$export$3cd99760d81ede63(selector) {\n    var nextEls = [];\n    var el = this[0];\n    if (!el) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n    while(el.nextElementSibling){\n        var next = el.nextElementSibling; // eslint-disable-line\n        if (selector) {\n            if ($be50936c4ecb1713$export$3d8c2f653ac9d0b9(next).is(selector)) nextEls.push(next);\n        } else nextEls.push(next);\n        el = next;\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9(nextEls);\n}\nfunction $be50936c4ecb1713$export$232faf9add678146(selector) {\n    if (this.length > 0) {\n        var el = this[0];\n        if (selector) {\n            if (el.previousElementSibling && $be50936c4ecb1713$export$3d8c2f653ac9d0b9(el.previousElementSibling).is(selector)) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([\n                el.previousElementSibling\n            ]);\n            return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n        }\n        if (el.previousElementSibling) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([\n            el.previousElementSibling\n        ]);\n        return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n}\nfunction $be50936c4ecb1713$export$5a01ccd45552d0b4(selector) {\n    var prevEls = [];\n    var el = this[0];\n    if (!el) return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n    while(el.previousElementSibling){\n        var prev = el.previousElementSibling; // eslint-disable-line\n        if (selector) {\n            if ($be50936c4ecb1713$export$3d8c2f653ac9d0b9(prev).is(selector)) prevEls.push(prev);\n        } else prevEls.push(prev);\n        el = prev;\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9(prevEls);\n}\nfunction $be50936c4ecb1713$export$9866dd70b0dcd4c3(selector) {\n    return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction $be50936c4ecb1713$export$91124bb58bc04465(selector) {\n    var parents = []; // eslint-disable-line\n    for(var i = 0; i < this.length; i += 1)if (this[i].parentNode !== null) {\n        if (selector) {\n            if ($be50936c4ecb1713$export$3d8c2f653ac9d0b9(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n        } else parents.push(this[i].parentNode);\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9(parents);\n}\nfunction $be50936c4ecb1713$export$7901f6cd558b9a93(selector) {\n    var parents = []; // eslint-disable-line\n    for(var i = 0; i < this.length; i += 1){\n        var parent = this[i].parentNode; // eslint-disable-line\n        while(parent){\n            if (selector) {\n                if ($be50936c4ecb1713$export$3d8c2f653ac9d0b9(parent).is(selector)) parents.push(parent);\n            } else parents.push(parent);\n            parent = parent.parentNode;\n        }\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9(parents);\n}\nfunction $be50936c4ecb1713$export$ff7f7c97cdce86e(selector) {\n    var closest = this; // eslint-disable-line\n    if (typeof selector === \"undefined\") return $be50936c4ecb1713$export$3d8c2f653ac9d0b9([]);\n    if (!closest.is(selector)) closest = closest.parents(selector).eq(0);\n    return closest;\n}\nfunction $be50936c4ecb1713$export$71aa6c912b956294(selector) {\n    var foundElements = [];\n    for(var i = 0; i < this.length; i += 1){\n        var found = this[i].querySelectorAll(selector);\n        for(var j = 0; j < found.length; j += 1)foundElements.push(found[j]);\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9(foundElements);\n}\nfunction $be50936c4ecb1713$export$bacb5cc5a11aef16(selector) {\n    var children = []; // eslint-disable-line\n    for(var i = 0; i < this.length; i += 1){\n        var childNodes = this[i].children;\n        for(var j = 0; j < childNodes.length; j += 1)if (!selector || $be50936c4ecb1713$export$3d8c2f653ac9d0b9(childNodes[j]).is(selector)) children.push(childNodes[j]);\n    }\n    return $be50936c4ecb1713$export$3d8c2f653ac9d0b9(children);\n}\nfunction $be50936c4ecb1713$export$cd7f480d6b8286c3() {\n    for(var i = 0; i < this.length; i += 1)if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n    return this;\n}\nfunction $be50936c4ecb1713$export$3f780019ff766da6() {\n    return this.remove();\n}\nfunction $be50936c4ecb1713$export$e16d8520af44a096() {\n    for(var _len = arguments.length, els = new Array(_len), _key = 0; _key < _len; _key++){\n        els[_key] = arguments[_key];\n    }\n    var dom = this;\n    var i;\n    var j;\n    for(i = 0; i < els.length; i += 1){\n        var toAdd = $be50936c4ecb1713$export$3d8c2f653ac9d0b9(els[i]);\n        for(j = 0; j < toAdd.length; j += 1)dom.push(toAdd[j]);\n    }\n    return dom;\n}\nfunction $be50936c4ecb1713$export$6e22c362a0406a2c() {\n    for(var i = 0; i < this.length; i += 1){\n        var el = this[i];\n        if (el.nodeType === 1) {\n            for(var j = 0; j < el.childNodes.length; j += 1)if (el.childNodes[j].parentNode) el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n            el.textContent = \"\";\n        }\n    }\n    return this;\n}\n// eslint-disable-next-line\nfunction $be50936c4ecb1713$export$3f99968195accfaf() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var _args = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 5), left = _args[0], top = _args[1], duration = _args[2], easing = _args[3], callback = _args[4];\n    if (args.length === 4 && typeof easing === \"function\") {\n        callback = easing;\n        var ref;\n        ref = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 5), left = ref[0], top = ref[1], duration = ref[2], callback = ref[3], easing = ref[4], ref;\n    }\n    if (typeof easing === \"undefined\") easing = \"swing\";\n    return this.each(function animate() {\n        var el = this;\n        var currentTop;\n        var currentLeft;\n        var maxTop;\n        var maxLeft;\n        var newTop;\n        var newLeft;\n        var scrollTop; // eslint-disable-line\n        var scrollLeft; // eslint-disable-line\n        var animateTop = top > 0 || top === 0;\n        var animateLeft = left > 0 || left === 0;\n        if (typeof easing === \"undefined\") easing = \"swing\";\n        if (animateTop) {\n            currentTop = el.scrollTop;\n            if (!duration) el.scrollTop = top;\n        }\n        if (animateLeft) {\n            currentLeft = el.scrollLeft;\n            if (!duration) el.scrollLeft = left;\n        }\n        if (!duration) return;\n        if (animateTop) {\n            maxTop = el.scrollHeight - el.offsetHeight;\n            newTop = Math.max(Math.min(top, maxTop), 0);\n        }\n        if (animateLeft) {\n            maxLeft = el.scrollWidth - el.offsetWidth;\n            newLeft = Math.max(Math.min(left, maxLeft), 0);\n        }\n        var startTime = null;\n        if (animateTop && newTop === currentTop) animateTop = false;\n        if (animateLeft && newLeft === currentLeft) animateLeft = false;\n        function render() {\n            var time = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : new Date().getTime();\n            if (startTime === null) startTime = time;\n            var progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n            var easeProgress = easing === \"linear\" ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n            var done;\n            if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n            if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n            if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n                el.scrollTop = newTop;\n                done = true;\n            }\n            if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n                el.scrollTop = newTop;\n                done = true;\n            }\n            if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n                el.scrollLeft = newLeft;\n                done = true;\n            }\n            if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n                el.scrollLeft = newLeft;\n                done = true;\n            }\n            if (done) {\n                if (callback) callback();\n                return;\n            }\n            if (animateTop) el.scrollTop = scrollTop;\n            if (animateLeft) el.scrollLeft = scrollLeft;\n            window.requestAnimationFrame(render);\n        }\n        window.requestAnimationFrame(render);\n    });\n} // scrollTop(top, duration, easing, callback) {\nfunction $be50936c4ecb1713$export$3e0c8fa3b5e4b3b9() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var _args = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 4), top = _args[0], duration = _args[1], easing = _args[2], callback = _args[3];\n    var ref;\n    if (args.length === 3 && typeof easing === \"function\") ref = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 4), top = ref[0], duration = ref[1], callback = ref[2], easing = ref[3], ref;\n    var dom = this;\n    if (typeof top === \"undefined\") {\n        if (dom.length > 0) return dom[0].scrollTop;\n        return null;\n    }\n    return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction $be50936c4ecb1713$export$6eddf9bc7f2b7d80() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var _args = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 4), left = _args[0], duration = _args[1], easing = _args[2], callback = _args[3];\n    var ref;\n    if (args.length === 3 && typeof easing === \"function\") ref = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 4), left = ref[0], duration = ref[1], callback = ref[2], easing = ref[3], ref;\n    var dom = this;\n    if (typeof left === \"undefined\") {\n        if (dom.length > 0) return dom[0].scrollLeft;\n        return null;\n    }\n    return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n// eslint-disable-next-line\nfunction $be50936c4ecb1713$export$e3607ec2d7a891c4(initialProps, initialParams) {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var els = this;\n    var a = {\n        props: Object.assign({}, initialProps),\n        params: Object.assign({\n            duration: 300,\n            easing: \"swing\" // or 'linear'\n        }, initialParams),\n        elements: els,\n        animating: false,\n        que: [],\n        easingProgress: function(easing, progress) {\n            if (easing === \"swing\") return 0.5 - Math.cos(progress * Math.PI) / 2;\n            if (typeof easing === \"function\") return easing(progress);\n            return progress;\n        },\n        stop: function() {\n            if (a.frameId) window.cancelAnimationFrame(a.frameId);\n            a.animating = false;\n            a.elements.each(function(el) {\n                var element = el;\n                delete element.dom7AnimateInstance;\n            });\n            a.que = [];\n        },\n        done: function(complete) {\n            a.animating = false;\n            a.elements.each(function(el) {\n                var element = el;\n                delete element.dom7AnimateInstance;\n            });\n            if (complete) complete(els);\n            if (a.que.length > 0) {\n                var que = a.que.shift();\n                a.animate(que[0], que[1]);\n            }\n        },\n        animate: function(props, params) {\n            if (a.animating) {\n                a.que.push([\n                    props,\n                    params\n                ]);\n                return a;\n            }\n            var elements = []; // Define & Cache Initials & Units\n            a.elements.each(function(el, index) {\n                var initialFullValue;\n                var initialValue;\n                var unit;\n                var finalValue;\n                var finalFullValue;\n                if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n                elements[index] = {\n                    container: el\n                };\n                Object.keys(props).forEach(function(prop) {\n                    initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(\",\", \".\");\n                    initialValue = parseFloat(initialFullValue);\n                    unit = initialFullValue.replace(initialValue, \"\");\n                    finalValue = parseFloat(props[prop]);\n                    finalFullValue = props[prop] + unit;\n                    elements[index][prop] = {\n                        initialFullValue: initialFullValue,\n                        initialValue: initialValue,\n                        unit: unit,\n                        finalValue: finalValue,\n                        finalFullValue: finalFullValue,\n                        currentValue: initialValue\n                    };\n                });\n            });\n            var startTime = null;\n            var time;\n            var elementsDone = 0;\n            var propsDone = 0;\n            var done;\n            var began = false;\n            a.animating = true;\n            function render() {\n                time = new Date().getTime();\n                var progress;\n                var easeProgress; // let el;\n                if (!began) {\n                    began = true;\n                    if (params.begin) params.begin(els);\n                }\n                if (startTime === null) startTime = time;\n                if (params.progress) // eslint-disable-next-line\n                params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n                elements.forEach(function(element) {\n                    var el = element;\n                    if (done || el.done) return;\n                    Object.keys(props).forEach(function(prop) {\n                        if (done || el.done) return;\n                        progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n                        easeProgress = a.easingProgress(params.easing, progress);\n                        var _el_prop = el[prop], initialValue = _el_prop.initialValue, finalValue = _el_prop.finalValue, unit = _el_prop.unit;\n                        el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n                        var currentValue = el[prop].currentValue;\n                        if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n                            el.container.style[prop] = finalValue + unit;\n                            propsDone += 1;\n                            if (propsDone === Object.keys(props).length) {\n                                el.done = true;\n                                elementsDone += 1;\n                            }\n                            if (elementsDone === elements.length) done = true;\n                        }\n                        if (done) {\n                            a.done(params.complete);\n                            return;\n                        }\n                        el.container.style[prop] = currentValue + unit;\n                    });\n                });\n                if (done) return; // Then call\n                a.frameId = window.requestAnimationFrame(render);\n            }\n            a.frameId = window.requestAnimationFrame(render);\n            return a;\n        }\n    };\n    if (a.elements.length === 0) return els;\n    var animateInstance;\n    for(var i = 0; i < a.elements.length; i += 1)if (a.elements[i].dom7AnimateInstance) animateInstance = a.elements[i].dom7AnimateInstance;\n    else a.elements[i].dom7AnimateInstance = a;\n    if (!animateInstance) animateInstance = a;\n    if (initialProps === \"stop\") animateInstance.stop();\n    else animateInstance.animate(a.props, a.params);\n    return els;\n}\nfunction $be50936c4ecb1713$export$fa6813432f753b0d() {\n    var els = this;\n    for(var i = 0; i < els.length; i += 1)if (els[i].dom7AnimateInstance) els[i].dom7AnimateInstance.stop();\n}\nvar $be50936c4ecb1713$var$noTrigger = \"resize scroll\".split(\" \");\nfunction $be50936c4ecb1713$var$shortcut(name) {\n    function eventHandler() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        if (typeof args[0] === \"undefined\") {\n            for(var i = 0; i < this.length; i += 1)if ($be50936c4ecb1713$var$noTrigger.indexOf(name) < 0) {\n                if (name in this[i]) this[i][name]();\n                else $be50936c4ecb1713$export$3d8c2f653ac9d0b9(this[i]).trigger(name);\n            }\n            return this;\n        }\n        return this.on.apply(this, [\n            name\n        ].concat((0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(args)));\n    }\n    return eventHandler;\n}\nvar $be50936c4ecb1713$export$64ef1bee2b9504c1 = $be50936c4ecb1713$var$shortcut(\"click\");\nvar $be50936c4ecb1713$export$2cc7ff91bcacba5e = $be50936c4ecb1713$var$shortcut(\"blur\");\nvar $be50936c4ecb1713$export$d7ddd398f22d79ef = $be50936c4ecb1713$var$shortcut(\"focus\");\nvar $be50936c4ecb1713$export$e7fa4ea7f1bfcb53 = $be50936c4ecb1713$var$shortcut(\"focusin\");\nvar $be50936c4ecb1713$export$d0dc5134b51e78ad = $be50936c4ecb1713$var$shortcut(\"focusout\");\nvar $be50936c4ecb1713$export$d26052c770f81a55 = $be50936c4ecb1713$var$shortcut(\"keyup\");\nvar $be50936c4ecb1713$export$e65a0c4970da3025 = $be50936c4ecb1713$var$shortcut(\"keydown\");\nvar $be50936c4ecb1713$export$563caf6ae76a8875 = $be50936c4ecb1713$var$shortcut(\"keypress\");\nvar $be50936c4ecb1713$export$853c27de4ce0f746 = $be50936c4ecb1713$var$shortcut(\"submit\");\nvar $be50936c4ecb1713$export$d8a7b8f475ec0161 = $be50936c4ecb1713$var$shortcut(\"change\");\nvar $be50936c4ecb1713$export$8b0cb8993e7a9391 = $be50936c4ecb1713$var$shortcut(\"mousedown\");\nvar $be50936c4ecb1713$export$6d0a9e0f4f73830a = $be50936c4ecb1713$var$shortcut(\"mousemove\");\nvar $be50936c4ecb1713$export$c367b5bd9b361db9 = $be50936c4ecb1713$var$shortcut(\"mouseup\");\nvar $be50936c4ecb1713$export$474cd8abd87e2f89 = $be50936c4ecb1713$var$shortcut(\"mouseenter\");\nvar $be50936c4ecb1713$export$996a190879e3098b = $be50936c4ecb1713$var$shortcut(\"mouseleave\");\nvar $be50936c4ecb1713$export$c3a736a37c400eb8 = $be50936c4ecb1713$var$shortcut(\"mouseout\");\nvar $be50936c4ecb1713$export$41b161f130dc7f9 = $be50936c4ecb1713$var$shortcut(\"mouseover\");\nvar $be50936c4ecb1713$export$9f22968b38117503 = $be50936c4ecb1713$var$shortcut(\"touchstart\");\nvar $be50936c4ecb1713$export$3c6ab5207a63e8f7 = $be50936c4ecb1713$var$shortcut(\"touchend\");\nvar $be50936c4ecb1713$export$3086217c4efdbcc9 = $be50936c4ecb1713$var$shortcut(\"touchmove\");\nvar $be50936c4ecb1713$export$4380c87abf28fdf = $be50936c4ecb1713$var$shortcut(\"resize\");\nvar $be50936c4ecb1713$export$209876d7b1ac8f3 = $be50936c4ecb1713$var$shortcut(\"scroll\");\nvar $be50936c4ecb1713$export$2e2bcd8739ae039 = $be50936c4ecb1713$export$3d8c2f653ac9d0b9;\n\n\nvar $181e7e5b06640d28$var$Methods = {\n    addClass: (0, $be50936c4ecb1713$export$d2cf6cd1dc7067d3),\n    removeClass: (0, $be50936c4ecb1713$export$c2255604a80b4506),\n    hasClass: (0, $be50936c4ecb1713$export$4ea3d958472af68f),\n    toggleClass: (0, $be50936c4ecb1713$export$4a80062ca50b57c7),\n    attr: (0, $be50936c4ecb1713$export$7aabe8b3a840d2fd),\n    removeAttr: (0, $be50936c4ecb1713$export$842f2b51efdcb631),\n    transform: (0, $be50936c4ecb1713$export$51186ad6e864892a),\n    transition: (0, $be50936c4ecb1713$export$66bb15e2994e6a26),\n    on: (0, $be50936c4ecb1713$export$af631764ddc44097),\n    off: (0, $be50936c4ecb1713$export$8c8705df4a2dcec9),\n    trigger: (0, $be50936c4ecb1713$export$e614dc9140f7ae71),\n    transitionEnd: (0, $be50936c4ecb1713$export$358dc01d65cad417),\n    outerWidth: (0, $be50936c4ecb1713$export$e823f88e4111159a),\n    outerHeight: (0, $be50936c4ecb1713$export$fc5b8aac72846d1e),\n    styles: (0, $be50936c4ecb1713$export$9dd6ff9ea0189349),\n    offset: (0, $be50936c4ecb1713$export$cc800923e997bb8),\n    css: (0, $be50936c4ecb1713$export$dbf350e5966cf602),\n    each: (0, $be50936c4ecb1713$export$79b2f7037acddd43),\n    html: (0, $be50936c4ecb1713$export$c0bb0b647f701bb5),\n    text: (0, $be50936c4ecb1713$export$6f093cfa640b7166),\n    is: (0, $be50936c4ecb1713$export$226b3eccf92c9ed9),\n    index: (0, $be50936c4ecb1713$export$b610b8812bbcded9),\n    eq: (0, $be50936c4ecb1713$export$9663ddc1cf085b32),\n    append: (0, $be50936c4ecb1713$export$10d8903dec122b9d),\n    prepend: (0, $be50936c4ecb1713$export$68159836694e22c1),\n    next: (0, $be50936c4ecb1713$export$48cfd1e771a65c4f),\n    nextAll: (0, $be50936c4ecb1713$export$3cd99760d81ede63),\n    prev: (0, $be50936c4ecb1713$export$232faf9add678146),\n    prevAll: (0, $be50936c4ecb1713$export$5a01ccd45552d0b4),\n    parent: (0, $be50936c4ecb1713$export$91124bb58bc04465),\n    parents: (0, $be50936c4ecb1713$export$7901f6cd558b9a93),\n    closest: (0, $be50936c4ecb1713$export$ff7f7c97cdce86e),\n    find: (0, $be50936c4ecb1713$export$71aa6c912b956294),\n    children: (0, $be50936c4ecb1713$export$bacb5cc5a11aef16),\n    filter: (0, $be50936c4ecb1713$export$3dea766d36a8935f),\n    remove: (0, $be50936c4ecb1713$export$cd7f480d6b8286c3)\n};\nObject.keys($181e7e5b06640d28$var$Methods).forEach(function(methodName) {\n    Object.defineProperty((0, $be50936c4ecb1713$export$3d8c2f653ac9d0b9).fn, methodName, {\n        value: $181e7e5b06640d28$var$Methods[methodName],\n        writable: true\n    });\n});\nvar $181e7e5b06640d28$export$2e2bcd8739ae039 = (0, $be50936c4ecb1713$export$3d8c2f653ac9d0b9);\n\n\nfunction $a568c0d5880c90ba$export$1e71eb4bef00f6b0(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\n\nfunction $1338f5f0d60fe216$export$8694e5c03a4df8e6(obj) {\n    var object = obj;\n    Object.keys(object).forEach(function(key) {\n        try {\n            object[key] = null;\n        } catch (e) {}\n        try {\n            delete object[key];\n        } catch (e) {}\n    });\n}\nfunction $1338f5f0d60fe216$export$bdd553fddd433dcb(callback) {\n    var delay = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;\n    return setTimeout(callback, delay);\n}\nfunction $1338f5f0d60fe216$export$461939dd4422153() {\n    return Date.now();\n}\nfunction $1338f5f0d60fe216$export$3735103072e4a80(el) {\n    var window1 = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var style;\n    if (window1.getComputedStyle) style = window1.getComputedStyle(el, null);\n    if (!style && el.currentStyle) style = el.currentStyle;\n    if (!style) style = el.style;\n    return style;\n}\nfunction $1338f5f0d60fe216$export$5ec402b7fcf74398(el) {\n    var axis = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"x\";\n    var window1 = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var matrix;\n    var curTransform;\n    var transformMatrix;\n    var curStyle = $1338f5f0d60fe216$export$3735103072e4a80(el, null);\n    if (window1.WebKitCSSMatrix) {\n        curTransform = curStyle.transform || curStyle.webkitTransform;\n        if (curTransform.split(\",\").length > 6) curTransform = curTransform.split(\", \").map(function(a) {\n            return a.replace(\",\", \".\");\n        }).join(\", \");\n         // Some old versions of Webkit choke when 'none' is passed; pass\n        // empty string instead in this case\n        transformMatrix = new window1.WebKitCSSMatrix(curTransform === \"none\" ? \"\" : curTransform);\n    } else {\n        transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue(\"transform\").replace(\"translate(\", \"matrix(1, 0, 0, 1,\");\n        matrix = transformMatrix.toString().split(\",\");\n    }\n    if (axis === \"x\") {\n        // Latest Chrome and webkits Fix\n        if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n        else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === \"y\") {\n        // Latest Chrome and webkits Fix\n        if (window1.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n        else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n        else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n}\nfunction $1338f5f0d60fe216$export$a6cdc56e425d0d0a(o) {\n    return typeof o === \"object\" && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === \"Object\";\n}\nfunction $1338f5f0d60fe216$var$isNode(node) {\n    // eslint-disable-next-line\n    if (typeof window !== \"undefined\" && typeof window.HTMLElement !== \"undefined\") return node instanceof HTMLElement;\n    return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction $1338f5f0d60fe216$export$8b58be045bf06082() {\n    var _loop = function(i) {\n        var nextSource = args[i];\n        if (nextSource !== undefined && nextSource !== null && !$1338f5f0d60fe216$var$isNode(nextSource)) {\n            var keysArray = Object.keys(Object(nextSource)).filter(function(key) {\n                return noExtend.indexOf(key) < 0;\n            });\n            for(var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1){\n                var nextKey = keysArray[nextIndex];\n                var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n                if (desc !== undefined && desc.enumerable) {\n                    if ($1338f5f0d60fe216$export$a6cdc56e425d0d0a(to[nextKey]) && $1338f5f0d60fe216$export$a6cdc56e425d0d0a(nextSource[nextKey])) {\n                        if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];\n                        else $1338f5f0d60fe216$export$8b58be045bf06082(to[nextKey], nextSource[nextKey]);\n                    } else if (!$1338f5f0d60fe216$export$a6cdc56e425d0d0a(to[nextKey]) && $1338f5f0d60fe216$export$a6cdc56e425d0d0a(nextSource[nextKey])) {\n                        to[nextKey] = {};\n                        if (nextSource[nextKey].__swiper__) to[nextKey] = nextSource[nextKey];\n                        else $1338f5f0d60fe216$export$8b58be045bf06082(to[nextKey], nextSource[nextKey]);\n                    } else to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n    };\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    var to = Object(args[0]);\n    var noExtend = [\n        \"__proto__\",\n        \"constructor\",\n        \"prototype\"\n    ];\n    for(var i = 1; i < args.length; i += 1)_loop(i);\n    return to;\n}\nfunction $1338f5f0d60fe216$export$a607267f322101fd(el, varName, varValue) {\n    el.style.setProperty(varName, varValue);\n}\nfunction $1338f5f0d60fe216$export$a5dd2b4b1a116d6d(param) {\n    var swiper = param.swiper, targetPosition = param.targetPosition, side = param.side;\n    var window1 = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var startPosition = -swiper.translate;\n    var startTime = null;\n    var time;\n    var duration = swiper.params.speed;\n    swiper.wrapperEl.style.scrollSnapType = \"none\";\n    window1.cancelAnimationFrame(swiper.cssModeFrameID);\n    var dir = targetPosition > startPosition ? \"next\" : \"prev\";\n    var isOutOfBound = function(current, target) {\n        return dir === \"next\" && current >= target || dir === \"prev\" && current <= target;\n    };\n    var animate = function() {\n        time = new Date().getTime();\n        if (startTime === null) startTime = time;\n        var progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n        var easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n        var currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n        if (isOutOfBound(currentPosition, targetPosition)) currentPosition = targetPosition;\n        swiper.wrapperEl.scrollTo((0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)({}, side, currentPosition));\n        if (isOutOfBound(currentPosition, targetPosition)) {\n            swiper.wrapperEl.style.overflow = \"hidden\";\n            swiper.wrapperEl.style.scrollSnapType = \"\";\n            setTimeout(function() {\n                swiper.wrapperEl.style.overflow = \"\";\n                swiper.wrapperEl.scrollTo((0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)({}, side, currentPosition));\n            });\n            window1.cancelAnimationFrame(swiper.cssModeFrameID);\n            return;\n        }\n        swiper.cssModeFrameID = window1.requestAnimationFrame(animate);\n    };\n    animate();\n}\n\n\n\nvar $f745992e8d1b1180$var$support;\nfunction $f745992e8d1b1180$var$calcSupport() {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    return {\n        smoothScroll: document.documentElement && \"scrollBehavior\" in document.documentElement.style,\n        touch: !!(\"ontouchstart\" in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n        passiveListener: function checkPassiveListener() {\n            var supportsPassive = false;\n            try {\n                var opts = Object.defineProperty({}, \"passive\", {\n                    // eslint-disable-next-line\n                    get: function() {\n                        supportsPassive = true;\n                    }\n                });\n                window.addEventListener(\"testPassiveListener\", null, opts);\n            } catch (e) {}\n            return supportsPassive;\n        }(),\n        gestures: function checkGestures() {\n            return \"ongesturestart\" in window;\n        }()\n    };\n}\nfunction $f745992e8d1b1180$export$d61c7b85ff180578() {\n    if (!$f745992e8d1b1180$var$support) $f745992e8d1b1180$var$support = $f745992e8d1b1180$var$calcSupport();\n    return $f745992e8d1b1180$var$support;\n}\n\n\n\n\nvar $33c7356d035118c5$var$deviceCached;\nfunction $33c7356d035118c5$var$calcDevice() {\n    var userAgent = (arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}).userAgent;\n    var support = (0, $f745992e8d1b1180$export$d61c7b85ff180578)();\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var platform = window.navigator.platform;\n    var ua = userAgent || window.navigator.userAgent;\n    var device = {\n        ios: false,\n        android: false\n    };\n    var screenWidth = window.screen.width;\n    var screenHeight = window.screen.height;\n    var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n    var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n    var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n    var iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n    var windows = platform === \"Win32\";\n    var macos = platform === \"MacIntel\"; // iPadOs 13 fix\n    var iPadScreens = [\n        \"1024x1366\",\n        \"1366x1024\",\n        \"834x1194\",\n        \"1194x834\",\n        \"834x1112\",\n        \"1112x834\",\n        \"768x1024\",\n        \"1024x768\",\n        \"820x1180\",\n        \"1180x820\",\n        \"810x1080\",\n        \"1080x810\"\n    ];\n    if (!ipad && macos && support.touch && iPadScreens.indexOf(\"\".concat(screenWidth, \"x\").concat(screenHeight)) >= 0) {\n        ipad = ua.match(/(Version)\\/([\\d.]+)/);\n        if (!ipad) ipad = [\n            0,\n            1,\n            \"13_0_0\"\n        ];\n        macos = false;\n    } // Android\n    if (android && !windows) {\n        device.os = \"android\";\n        device.android = true;\n    }\n    if (ipad || iphone || ipod) {\n        device.os = \"ios\";\n        device.ios = true;\n    } // Export object\n    return device;\n}\nfunction $33c7356d035118c5$export$30c823bc834d6ab4() {\n    var overrides = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n    if (!$33c7356d035118c5$var$deviceCached) $33c7356d035118c5$var$deviceCached = $33c7356d035118c5$var$calcDevice(overrides);\n    return $33c7356d035118c5$var$deviceCached;\n}\n\n\n\nvar $f7ea505fdac53fb2$var$browser;\nfunction $f7ea505fdac53fb2$var$calcBrowser() {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    function isSafari() {\n        var ua = window.navigator.userAgent.toLowerCase();\n        return ua.indexOf(\"safari\") >= 0 && ua.indexOf(\"chrome\") < 0 && ua.indexOf(\"android\") < 0;\n    }\n    return {\n        isSafari: isSafari(),\n        isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n    };\n}\nfunction $f7ea505fdac53fb2$export$89e15fc796a4a429() {\n    if (!$f7ea505fdac53fb2$var$browser) $f7ea505fdac53fb2$var$browser = $f7ea505fdac53fb2$var$calcBrowser();\n    return $f7ea505fdac53fb2$var$browser;\n}\n\n\n\nfunction $caa86f81f75e9730$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, on = param.on, emit = param.emit;\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var observer = null;\n    var animationFrame = null;\n    var resizeHandler = function() {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit(\"beforeResize\");\n        emit(\"resize\");\n    };\n    var createObserver = function() {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        observer = new ResizeObserver(function(entries) {\n            animationFrame = window.requestAnimationFrame(function() {\n                var width = swiper.width, height = swiper.height;\n                var newWidth = width;\n                var newHeight = height;\n                entries.forEach(function(param) {\n                    var contentBoxSize = param.contentBoxSize, contentRect = param.contentRect, target = param.target;\n                    if (target && target !== swiper.el) return;\n                    newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n                    newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n                });\n                if (newWidth !== width || newHeight !== height) resizeHandler();\n            });\n        });\n        observer.observe(swiper.el);\n    };\n    var removeObserver = function() {\n        if (animationFrame) window.cancelAnimationFrame(animationFrame);\n        if (observer && observer.unobserve && swiper.el) {\n            observer.unobserve(swiper.el);\n            observer = null;\n        }\n    };\n    var orientationChangeHandler = function() {\n        if (!swiper || swiper.destroyed || !swiper.initialized) return;\n        emit(\"orientationchange\");\n    };\n    on(\"init\", function() {\n        if (swiper.params.resizeObserver && typeof window.ResizeObserver !== \"undefined\") {\n            createObserver();\n            return;\n        }\n        window.addEventListener(\"resize\", resizeHandler);\n        window.addEventListener(\"orientationchange\", orientationChangeHandler);\n    });\n    on(\"destroy\", function() {\n        removeObserver();\n        window.removeEventListener(\"resize\", resizeHandler);\n        window.removeEventListener(\"orientationchange\", orientationChangeHandler);\n    });\n}\n\n\n\nfunction $4393da3adccaa7db$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    var observers = [];\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var attach = function(target) {\n        var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n        var ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n        var observer = new ObserverFunc(function(mutations) {\n            // The observerUpdate event should only be triggered\n            // once despite the number of mutations.  Additional\n            // triggers are redundant and are very costly\n            if (mutations.length === 1) {\n                emit(\"observerUpdate\", mutations[0]);\n                return;\n            }\n            var observerUpdate = function observerUpdate() {\n                emit(\"observerUpdate\", mutations[0]);\n            };\n            if (window.requestAnimationFrame) window.requestAnimationFrame(observerUpdate);\n            else window.setTimeout(observerUpdate, 0);\n        });\n        observer.observe(target, {\n            attributes: typeof options.attributes === \"undefined\" ? true : options.attributes,\n            childList: typeof options.childList === \"undefined\" ? true : options.childList,\n            characterData: typeof options.characterData === \"undefined\" ? true : options.characterData\n        });\n        observers.push(observer);\n    };\n    var init = function() {\n        if (!swiper.params.observer) return;\n        if (swiper.params.observeParents) {\n            var containerParents = swiper.$el.parents();\n            for(var i = 0; i < containerParents.length; i += 1)attach(containerParents[i]);\n        } // Observe container\n        attach(swiper.$el[0], {\n            childList: swiper.params.observeSlideChildren\n        }); // Observe wrapper\n        attach(swiper.$wrapperEl[0], {\n            attributes: false\n        });\n    };\n    var destroy = function() {\n        observers.forEach(function(observer) {\n            observer.disconnect();\n        });\n        observers.splice(0, observers.length);\n    };\n    extendParams({\n        observer: false,\n        observeParents: false,\n        observeSlideChildren: false\n    });\n    on(\"init\", init);\n    on(\"destroy\", destroy);\n}\n\n\n/* eslint-disable no-underscore-dangle */ \nvar $26f00b4681ced12e$export$2e2bcd8739ae039 = {\n    on: function(events, handler, priority) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== \"function\") return self;\n        var method = priority ? \"unshift\" : \"push\";\n        events.split(\" \").forEach(function(event) {\n            if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n            self.eventsListeners[event][method](handler);\n        });\n        return self;\n    },\n    once: function(events, handler, priority) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== \"function\") return self;\n        function onceHandler() {\n            for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n                args[_key] = arguments[_key];\n            }\n            self.off(events, onceHandler);\n            if (onceHandler.__emitterProxy) delete onceHandler.__emitterProxy;\n            handler.apply(self, args);\n        }\n        onceHandler.__emitterProxy = handler;\n        return self.on(events, onceHandler, priority);\n    },\n    onAny: function(handler, priority) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (typeof handler !== \"function\") return self;\n        var method = priority ? \"unshift\" : \"push\";\n        if (self.eventsAnyListeners.indexOf(handler) < 0) self.eventsAnyListeners[method](handler);\n        return self;\n    },\n    offAny: function(handler) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsAnyListeners) return self;\n        var index = self.eventsAnyListeners.indexOf(handler);\n        if (index >= 0) self.eventsAnyListeners.splice(index, 1);\n        return self;\n    },\n    off: function(events, handler) {\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        events.split(\" \").forEach(function(event) {\n            if (typeof handler === \"undefined\") self.eventsListeners[event] = [];\n            else if (self.eventsListeners[event]) self.eventsListeners[event].forEach(function(eventHandler, index) {\n                if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) self.eventsListeners[event].splice(index, 1);\n            });\n        });\n        return self;\n    },\n    emit: function() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        var self = this;\n        if (!self.eventsListeners || self.destroyed) return self;\n        if (!self.eventsListeners) return self;\n        var events;\n        var data;\n        var context;\n        if (typeof args[0] === \"string\" || Array.isArray(args[0])) {\n            events = args[0];\n            data = args.slice(1, args.length);\n            context = self;\n        } else {\n            events = args[0].events;\n            data = args[0].data;\n            context = args[0].context || self;\n        }\n        data.unshift(context);\n        var eventsArray = Array.isArray(events) ? events : events.split(\" \");\n        eventsArray.forEach(function(event) {\n            if (self.eventsAnyListeners && self.eventsAnyListeners.length) self.eventsAnyListeners.forEach(function(eventHandler) {\n                eventHandler.apply(context, [\n                    event\n                ].concat((0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(data)));\n            });\n            if (self.eventsListeners && self.eventsListeners[event]) self.eventsListeners[event].forEach(function(eventHandler) {\n                eventHandler.apply(context, data);\n            });\n        });\n        return self;\n    }\n};\n\n\nfunction $c57e4cf0a3cc0e9b$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var width;\n    var height;\n    var $el = swiper.$el;\n    if (typeof swiper.params.width !== \"undefined\" && swiper.params.width !== null) width = swiper.params.width;\n    else width = $el[0].clientWidth;\n    if (typeof swiper.params.height !== \"undefined\" && swiper.params.height !== null) height = swiper.params.height;\n    else height = $el[0].clientHeight;\n    if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) return;\n     // Subtract paddings\n    width = width - parseInt($el.css(\"padding-left\") || 0, 10) - parseInt($el.css(\"padding-right\") || 0, 10);\n    height = height - parseInt($el.css(\"padding-top\") || 0, 10) - parseInt($el.css(\"padding-bottom\") || 0, 10);\n    if (Number.isNaN(width)) width = 0;\n    if (Number.isNaN(height)) height = 0;\n    Object.assign(swiper, {\n        width: width,\n        height: height,\n        size: swiper.isHorizontal() ? width : height\n    });\n}\n\n\n\n\nfunction $b14de6c650ce395b$export$2e2bcd8739ae039() {\n    var swiper = this;\n    function getDirectionLabel(property) {\n        if (swiper.isHorizontal()) return property;\n         // prettier-ignore\n        return ({\n            \"width\": \"height\",\n            \"margin-top\": \"margin-left\",\n            \"margin-bottom \": \"margin-right\",\n            \"margin-left\": \"margin-top\",\n            \"margin-right\": \"margin-bottom\",\n            \"padding-left\": \"padding-top\",\n            \"padding-right\": \"padding-bottom\",\n            \"marginRight\": \"marginBottom\"\n        })[property];\n    }\n    function getDirectionPropertyValue(node, label) {\n        return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n    }\n    var params = swiper.params;\n    var $wrapperEl = swiper.$wrapperEl, swiperSize = swiper.size, rtl = swiper.rtlTranslate, wrongRTL = swiper.wrongRTL;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    var previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n    var slides = $wrapperEl.children(\".\".concat(swiper.params.slideClass));\n    var slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n    var snapGrid = [];\n    var slidesGrid = [];\n    var slidesSizesGrid = [];\n    var offsetBefore = params.slidesOffsetBefore;\n    if (typeof offsetBefore === \"function\") offsetBefore = params.slidesOffsetBefore.call(swiper);\n    var offsetAfter = params.slidesOffsetAfter;\n    if (typeof offsetAfter === \"function\") offsetAfter = params.slidesOffsetAfter.call(swiper);\n    var previousSnapGridLength = swiper.snapGrid.length;\n    var previousSlidesGridLength = swiper.slidesGrid.length;\n    var spaceBetween = params.spaceBetween;\n    var slidePosition = -offsetBefore;\n    var prevSlideSize = 0;\n    var index = 0;\n    if (typeof swiperSize === \"undefined\") return;\n    if (typeof spaceBetween === \"string\" && spaceBetween.indexOf(\"%\") >= 0) spaceBetween = parseFloat(spaceBetween.replace(\"%\", \"\")) / 100 * swiperSize;\n    swiper.virtualSize = -spaceBetween; // reset margins\n    if (rtl) slides.css({\n        marginLeft: \"\",\n        marginBottom: \"\",\n        marginTop: \"\"\n    });\n    else slides.css({\n        marginRight: \"\",\n        marginBottom: \"\",\n        marginTop: \"\"\n    }); // reset cssMode offsets\n    if (params.centeredSlides && params.cssMode) {\n        (0, $1338f5f0d60fe216$export$a607267f322101fd)(swiper.wrapperEl, \"--swiper-centered-offset-before\", \"\");\n        (0, $1338f5f0d60fe216$export$a607267f322101fd)(swiper.wrapperEl, \"--swiper-centered-offset-after\", \"\");\n    }\n    var gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n    if (gridEnabled) swiper.grid.initSlides(slidesLength);\n     // Calc slides\n    var slideSize;\n    var shouldResetSlideSize = params.slidesPerView === \"auto\" && params.breakpoints && Object.keys(params.breakpoints).filter(function(key) {\n        return typeof params.breakpoints[key].slidesPerView !== \"undefined\";\n    }).length > 0;\n    for(var i = 0; i < slidesLength; i += 1){\n        slideSize = 0;\n        var slide = slides.eq(i);\n        if (gridEnabled) swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n        if (slide.css(\"display\") === \"none\") continue; // eslint-disable-line\n        if (params.slidesPerView === \"auto\") {\n            if (shouldResetSlideSize) slides[i].style[getDirectionLabel(\"width\")] = \"\";\n            var slideStyles = getComputedStyle(slide[0]);\n            var currentTransform = slide[0].style.transform;\n            var currentWebKitTransform = slide[0].style.webkitTransform;\n            if (currentTransform) slide[0].style.transform = \"none\";\n            if (currentWebKitTransform) slide[0].style.webkitTransform = \"none\";\n            if (params.roundLengths) slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n            else {\n                // eslint-disable-next-line\n                var width = getDirectionPropertyValue(slideStyles, \"width\");\n                var paddingLeft = getDirectionPropertyValue(slideStyles, \"padding-left\");\n                var paddingRight = getDirectionPropertyValue(slideStyles, \"padding-right\");\n                var marginLeft = getDirectionPropertyValue(slideStyles, \"margin-left\");\n                var marginRight = getDirectionPropertyValue(slideStyles, \"margin-right\");\n                var boxSizing = slideStyles.getPropertyValue(\"box-sizing\");\n                if (boxSizing && boxSizing === \"border-box\") slideSize = width + marginLeft + marginRight;\n                else {\n                    var _slide_ = slide[0], clientWidth = _slide_.clientWidth, offsetWidth = _slide_.offsetWidth;\n                    slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n                }\n            }\n            if (currentTransform) slide[0].style.transform = currentTransform;\n            if (currentWebKitTransform) slide[0].style.webkitTransform = currentWebKitTransform;\n            if (params.roundLengths) slideSize = Math.floor(slideSize);\n        } else {\n            slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n            if (params.roundLengths) slideSize = Math.floor(slideSize);\n            if (slides[i]) slides[i].style[getDirectionLabel(\"width\")] = \"\".concat(slideSize, \"px\");\n        }\n        if (slides[i]) slides[i].swiperSlideSize = slideSize;\n        slidesSizesGrid.push(slideSize);\n        if (params.centeredSlides) {\n            slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n            if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n            if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n            if (Math.abs(slidePosition) < 0.001) slidePosition = 0;\n            if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n            if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n        } else {\n            if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n            if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n            slidesGrid.push(slidePosition);\n            slidePosition = slidePosition + slideSize + spaceBetween;\n        }\n        swiper.virtualSize += slideSize + spaceBetween;\n        prevSlideSize = slideSize;\n        index += 1;\n    }\n    swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n    if (rtl && wrongRTL && (params.effect === \"slide\" || params.effect === \"coverflow\")) $wrapperEl.css({\n        width: \"\".concat(swiper.virtualSize + params.spaceBetween, \"px\")\n    });\n    if (params.setWrapperSize) $wrapperEl.css((0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)({}, getDirectionLabel(\"width\"), \"\".concat(swiper.virtualSize + params.spaceBetween, \"px\")));\n    if (gridEnabled) swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n     // Remove last grid elements depending on width\n    if (!params.centeredSlides) {\n        var newSlidesGrid = [];\n        for(var i1 = 0; i1 < snapGrid.length; i1 += 1){\n            var slidesGridItem = snapGrid[i1];\n            if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n            if (snapGrid[i1] <= swiper.virtualSize - swiperSize) newSlidesGrid.push(slidesGridItem);\n        }\n        snapGrid = newSlidesGrid;\n        if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n    if (snapGrid.length === 0) snapGrid = [\n        0\n    ];\n    if (params.spaceBetween !== 0) {\n        var key = swiper.isHorizontal() && rtl ? \"marginLeft\" : getDirectionLabel(\"marginRight\");\n        slides.filter(function(_, slideIndex) {\n            if (!params.cssMode) return true;\n            if (slideIndex === slides.length - 1) return false;\n            return true;\n        }).css((0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)({}, key, \"\".concat(spaceBetween, \"px\")));\n    }\n    if (params.centeredSlides && params.centeredSlidesBounds) {\n        var allSlidesSize = 0;\n        slidesSizesGrid.forEach(function(slideSizeValue) {\n            allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize -= params.spaceBetween;\n        var maxSnap = allSlidesSize - swiperSize;\n        snapGrid = snapGrid.map(function(snap) {\n            if (snap < 0) return -offsetBefore;\n            if (snap > maxSnap) return maxSnap + offsetAfter;\n            return snap;\n        });\n    }\n    if (params.centerInsufficientSlides) {\n        var allSlidesSize1 = 0;\n        slidesSizesGrid.forEach(function(slideSizeValue) {\n            allSlidesSize1 += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n        });\n        allSlidesSize1 -= params.spaceBetween;\n        if (allSlidesSize1 < swiperSize) {\n            var allSlidesOffset = (swiperSize - allSlidesSize1) / 2;\n            snapGrid.forEach(function(snap, snapIndex) {\n                snapGrid[snapIndex] = snap - allSlidesOffset;\n            });\n            slidesGrid.forEach(function(snap, snapIndex) {\n                slidesGrid[snapIndex] = snap + allSlidesOffset;\n            });\n        }\n    }\n    Object.assign(swiper, {\n        slides: slides,\n        snapGrid: snapGrid,\n        slidesGrid: slidesGrid,\n        slidesSizesGrid: slidesSizesGrid\n    });\n    if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n        (0, $1338f5f0d60fe216$export$a607267f322101fd)(swiper.wrapperEl, \"--swiper-centered-offset-before\", \"\".concat(-snapGrid[0], \"px\"));\n        (0, $1338f5f0d60fe216$export$a607267f322101fd)(swiper.wrapperEl, \"--swiper-centered-offset-after\", \"\".concat(swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2, \"px\"));\n        var addToSnapGrid = -swiper.snapGrid[0];\n        var addToSlidesGrid = -swiper.slidesGrid[0];\n        swiper.snapGrid = swiper.snapGrid.map(function(v) {\n            return v + addToSnapGrid;\n        });\n        swiper.slidesGrid = swiper.slidesGrid.map(function(v) {\n            return v + addToSlidesGrid;\n        });\n    }\n    if (slidesLength !== previousSlidesLength) swiper.emit(\"slidesLengthChange\");\n    if (snapGrid.length !== previousSnapGridLength) {\n        if (swiper.params.watchOverflow) swiper.checkOverflow();\n        swiper.emit(\"snapGridLengthChange\");\n    }\n    if (slidesGrid.length !== previousSlidesGridLength) swiper.emit(\"slidesGridLengthChange\");\n    if (params.watchSlidesProgress) swiper.updateSlidesOffset();\n    if (!isVirtual && !params.cssMode && (params.effect === \"slide\" || params.effect === \"fade\")) {\n        var backFaceHiddenClass = \"\".concat(params.containerModifierClass, \"backface-hidden\");\n        var hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);\n        if (slidesLength <= params.maxBackfaceHiddenSlides) {\n            if (!hasClassBackfaceClassAdded) swiper.$el.addClass(backFaceHiddenClass);\n        } else if (hasClassBackfaceClassAdded) swiper.$el.removeClass(backFaceHiddenClass);\n    }\n}\n\n\n\nfunction $3b8d73f2acfa0ea0$export$2e2bcd8739ae039(speed) {\n    var swiper = this;\n    var activeSlides = [];\n    var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    var newHeight = 0;\n    var i;\n    if (typeof speed === \"number\") swiper.setTransition(speed);\n    else if (speed === true) swiper.setTransition(swiper.params.speed);\n    var getSlideByIndex = function(index) {\n        if (isVirtual) return swiper.slides.filter(function(el) {\n            return parseInt(el.getAttribute(\"data-swiper-slide-index\"), 10) === index;\n        })[0];\n        return swiper.slides.eq(index)[0];\n    }; // Find slides currently in view\n    if (swiper.params.slidesPerView !== \"auto\" && swiper.params.slidesPerView > 1) {\n        if (swiper.params.centeredSlides) (swiper.visibleSlides || (0, $181e7e5b06640d28$export$2e2bcd8739ae039)([])).each(function(slide) {\n            activeSlides.push(slide);\n        });\n        else for(i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1){\n            var index = swiper.activeIndex + i;\n            if (index > swiper.slides.length && !isVirtual) break;\n            activeSlides.push(getSlideByIndex(index));\n        }\n    } else activeSlides.push(getSlideByIndex(swiper.activeIndex));\n     // Find new height from highest slide in view\n    for(i = 0; i < activeSlides.length; i += 1)if (typeof activeSlides[i] !== \"undefined\") {\n        var height = activeSlides[i].offsetHeight;\n        newHeight = height > newHeight ? height : newHeight;\n    }\n     // Update Height\n    if (newHeight || newHeight === 0) swiper.$wrapperEl.css(\"height\", \"\".concat(newHeight, \"px\"));\n}\n\n\nfunction $ce6e30db971b8f6a$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var slides = swiper.slides;\n    for(var i = 0; i < slides.length; i += 1)slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n}\n\n\n\nfunction $a255c8b825922753$export$2e2bcd8739ae039() {\n    var translate = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this && this.translate || 0;\n    var swiper = this;\n    var params = swiper.params;\n    var slides = swiper.slides, rtl = swiper.rtlTranslate, snapGrid = swiper.snapGrid;\n    if (slides.length === 0) return;\n    if (typeof slides[0].swiperSlideOffset === \"undefined\") swiper.updateSlidesOffset();\n    var offsetCenter = -translate;\n    if (rtl) offsetCenter = translate; // Visible Slides\n    slides.removeClass(params.slideVisibleClass);\n    swiper.visibleSlidesIndexes = [];\n    swiper.visibleSlides = [];\n    for(var i = 0; i < slides.length; i += 1){\n        var slide = slides[i];\n        var slideOffset = slide.swiperSlideOffset;\n        if (params.cssMode && params.centeredSlides) slideOffset -= slides[0].swiperSlideOffset;\n        var slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n        var originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n        var slideBefore = -(offsetCenter - slideOffset);\n        var slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n        var isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n        if (isVisible) {\n            swiper.visibleSlides.push(slide);\n            swiper.visibleSlidesIndexes.push(i);\n            slides.eq(i).addClass(params.slideVisibleClass);\n        }\n        slide.progress = rtl ? -slideProgress : slideProgress;\n        slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n    }\n    swiper.visibleSlides = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(swiper.visibleSlides);\n}\n\n\nfunction $43d3e22542fd4c38$export$2e2bcd8739ae039(translate) {\n    var swiper = this;\n    if (typeof translate === \"undefined\") {\n        var multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n        translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n    }\n    var params = swiper.params;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    var progress = swiper.progress, isBeginning = swiper.isBeginning, isEnd = swiper.isEnd;\n    var wasBeginning = isBeginning;\n    var wasEnd = isEnd;\n    if (translatesDiff === 0) {\n        progress = 0;\n        isBeginning = true;\n        isEnd = true;\n    } else {\n        progress = (translate - swiper.minTranslate()) / translatesDiff;\n        isBeginning = progress <= 0;\n        isEnd = progress >= 1;\n    }\n    Object.assign(swiper, {\n        progress: progress,\n        isBeginning: isBeginning,\n        isEnd: isEnd\n    });\n    if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n    if (isBeginning && !wasBeginning) swiper.emit(\"reachBeginning toEdge\");\n    if (isEnd && !wasEnd) swiper.emit(\"reachEnd toEdge\");\n    if (wasBeginning && !isBeginning || wasEnd && !isEnd) swiper.emit(\"fromEdge\");\n    swiper.emit(\"progress\", progress);\n}\n\n\nfunction $0f7fe5860e74601f$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var slides = swiper.slides, params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex, realIndex = swiper.realIndex;\n    var isVirtual = swiper.virtual && params.virtual.enabled;\n    slides.removeClass(\"\".concat(params.slideActiveClass, \" \").concat(params.slideNextClass, \" \").concat(params.slidePrevClass, \" \").concat(params.slideDuplicateActiveClass, \" \").concat(params.slideDuplicateNextClass, \" \").concat(params.slideDuplicatePrevClass));\n    var activeSlide;\n    if (isVirtual) activeSlide = swiper.$wrapperEl.find(\".\".concat(params.slideClass, '[data-swiper-slide-index=\"').concat(activeIndex, '\"]'));\n    else activeSlide = slides.eq(activeIndex);\n     // Active classes\n    activeSlide.addClass(params.slideActiveClass);\n    if (params.loop) {\n        // Duplicate to all looped slides\n        if (activeSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(\".\".concat(params.slideClass, \":not(.\").concat(params.slideDuplicateClass, ')[data-swiper-slide-index=\"').concat(realIndex, '\"]')).addClass(params.slideDuplicateActiveClass);\n        else $wrapperEl.children(\".\".concat(params.slideClass, \".\").concat(params.slideDuplicateClass, '[data-swiper-slide-index=\"').concat(realIndex, '\"]')).addClass(params.slideDuplicateActiveClass);\n    } // Next Slide\n    var nextSlide = activeSlide.nextAll(\".\".concat(params.slideClass)).eq(0).addClass(params.slideNextClass);\n    if (params.loop && nextSlide.length === 0) {\n        nextSlide = slides.eq(0);\n        nextSlide.addClass(params.slideNextClass);\n    } // Prev Slide\n    var prevSlide = activeSlide.prevAll(\".\".concat(params.slideClass)).eq(0).addClass(params.slidePrevClass);\n    if (params.loop && prevSlide.length === 0) {\n        prevSlide = slides.eq(-1);\n        prevSlide.addClass(params.slidePrevClass);\n    }\n    if (params.loop) {\n        // Duplicate to all looped slides\n        if (nextSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(\".\".concat(params.slideClass, \":not(.\").concat(params.slideDuplicateClass, ')[data-swiper-slide-index=\"').concat(nextSlide.attr(\"data-swiper-slide-index\"), '\"]')).addClass(params.slideDuplicateNextClass);\n        else $wrapperEl.children(\".\".concat(params.slideClass, \".\").concat(params.slideDuplicateClass, '[data-swiper-slide-index=\"').concat(nextSlide.attr(\"data-swiper-slide-index\"), '\"]')).addClass(params.slideDuplicateNextClass);\n        if (prevSlide.hasClass(params.slideDuplicateClass)) $wrapperEl.children(\".\".concat(params.slideClass, \":not(.\").concat(params.slideDuplicateClass, ')[data-swiper-slide-index=\"').concat(prevSlide.attr(\"data-swiper-slide-index\"), '\"]')).addClass(params.slideDuplicatePrevClass);\n        else $wrapperEl.children(\".\".concat(params.slideClass, \".\").concat(params.slideDuplicateClass, '[data-swiper-slide-index=\"').concat(prevSlide.attr(\"data-swiper-slide-index\"), '\"]')).addClass(params.slideDuplicatePrevClass);\n    }\n    swiper.emitSlidesClasses();\n}\n\n\nfunction $08c4ed821325a44e$export$2e2bcd8739ae039(newActiveIndex) {\n    var swiper = this;\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    var slidesGrid = swiper.slidesGrid, snapGrid = swiper.snapGrid, params = swiper.params, previousIndex = swiper.activeIndex, previousRealIndex = swiper.realIndex, previousSnapIndex = swiper.snapIndex;\n    var activeIndex = newActiveIndex;\n    var snapIndex;\n    if (typeof activeIndex === \"undefined\") {\n        for(var i = 0; i < slidesGrid.length; i += 1){\n            if (typeof slidesGrid[i + 1] !== \"undefined\") {\n                if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) activeIndex = i;\n                else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) activeIndex = i + 1;\n            } else if (translate >= slidesGrid[i]) activeIndex = i;\n        } // Normalize slideIndex\n        if (params.normalizeSlideIndex) {\n            if (activeIndex < 0 || typeof activeIndex === \"undefined\") activeIndex = 0;\n        }\n    }\n    if (snapGrid.indexOf(translate) >= 0) snapIndex = snapGrid.indexOf(translate);\n    else {\n        var skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n        snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n    }\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n    if (activeIndex === previousIndex) {\n        if (snapIndex !== previousSnapIndex) {\n            swiper.snapIndex = snapIndex;\n            swiper.emit(\"snapIndexChange\");\n        }\n        return;\n    } // Get real index\n    var realIndex = parseInt(swiper.slides.eq(activeIndex).attr(\"data-swiper-slide-index\") || activeIndex, 10);\n    Object.assign(swiper, {\n        snapIndex: snapIndex,\n        realIndex: realIndex,\n        previousIndex: previousIndex,\n        activeIndex: activeIndex\n    });\n    swiper.emit(\"activeIndexChange\");\n    swiper.emit(\"snapIndexChange\");\n    if (previousRealIndex !== realIndex) swiper.emit(\"realIndexChange\");\n    if (swiper.initialized || swiper.params.runCallbacksOnInit) swiper.emit(\"slideChange\");\n}\n\n\n\nfunction $7394e7bbbcd710e0$export$2e2bcd8739ae039(e) {\n    var swiper = this;\n    var params = swiper.params;\n    var slide = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(e).closest(\".\".concat(params.slideClass))[0];\n    var slideFound = false;\n    var slideIndex;\n    if (slide) {\n        for(var i = 0; i < swiper.slides.length; i += 1)if (swiper.slides[i] === slide) {\n            slideFound = true;\n            slideIndex = i;\n            break;\n        }\n    }\n    if (slide && slideFound) {\n        swiper.clickedSlide = slide;\n        if (swiper.virtual && swiper.params.virtual.enabled) swiper.clickedIndex = parseInt((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slide).attr(\"data-swiper-slide-index\"), 10);\n        else swiper.clickedIndex = slideIndex;\n    } else {\n        swiper.clickedSlide = undefined;\n        swiper.clickedIndex = undefined;\n        return;\n    }\n    if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) swiper.slideToClickedSlide();\n}\n\n\nvar $2effa18fdcd4ebca$export$2e2bcd8739ae039 = {\n    updateSize: (0, $c57e4cf0a3cc0e9b$export$2e2bcd8739ae039),\n    updateSlides: (0, $b14de6c650ce395b$export$2e2bcd8739ae039),\n    updateAutoHeight: (0, $3b8d73f2acfa0ea0$export$2e2bcd8739ae039),\n    updateSlidesOffset: (0, $ce6e30db971b8f6a$export$2e2bcd8739ae039),\n    updateSlidesProgress: (0, $a255c8b825922753$export$2e2bcd8739ae039),\n    updateProgress: (0, $43d3e22542fd4c38$export$2e2bcd8739ae039),\n    updateSlidesClasses: (0, $0f7fe5860e74601f$export$2e2bcd8739ae039),\n    updateActiveIndex: (0, $08c4ed821325a44e$export$2e2bcd8739ae039),\n    updateClickedSlide: (0, $7394e7bbbcd710e0$export$2e2bcd8739ae039)\n};\n\n\n\nfunction $119efefc5c17e954$export$2e2bcd8739ae039() {\n    var axis = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.isHorizontal() ? \"x\" : \"y\";\n    var swiper = this;\n    var params = swiper.params, rtl = swiper.rtlTranslate, translate = swiper.translate, $wrapperEl = swiper.$wrapperEl;\n    if (params.virtualTranslate) return rtl ? -translate : translate;\n    if (params.cssMode) return translate;\n    var currentTranslate = (0, $1338f5f0d60fe216$export$5ec402b7fcf74398)($wrapperEl[0], axis);\n    if (rtl) currentTranslate = -currentTranslate;\n    return currentTranslate || 0;\n}\n\n\nfunction $f0467b48c9fa9010$export$2e2bcd8739ae039(translate, byController) {\n    var swiper = this;\n    var rtl = swiper.rtlTranslate, params = swiper.params, $wrapperEl = swiper.$wrapperEl, wrapperEl = swiper.wrapperEl, progress = swiper.progress;\n    var x = 0;\n    var y = 0;\n    var z = 0;\n    if (swiper.isHorizontal()) x = rtl ? -translate : translate;\n    else y = translate;\n    if (params.roundLengths) {\n        x = Math.floor(x);\n        y = Math.floor(y);\n    }\n    if (params.cssMode) wrapperEl[swiper.isHorizontal() ? \"scrollLeft\" : \"scrollTop\"] = swiper.isHorizontal() ? -x : -y;\n    else if (!params.virtualTranslate) $wrapperEl.transform(\"translate3d(\".concat(x, \"px, \").concat(y, \"px, \").concat(z, \"px)\"));\n    swiper.previousTranslate = swiper.translate;\n    swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) newProgress = 0;\n    else newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n    if (newProgress !== progress) swiper.updateProgress(translate);\n    swiper.emit(\"setTranslate\", swiper.translate, byController);\n}\n\n\nfunction $5bff9b105f3a15ca$export$2e2bcd8739ae039() {\n    return -this.snapGrid[0];\n}\n\n\nfunction $9e1d7562301634ad$export$2e2bcd8739ae039() {\n    return -this.snapGrid[this.snapGrid.length - 1];\n}\n\n\n\n\nfunction $a22a1974ce4a087e$export$2e2bcd8739ae039() {\n    var translate = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, speed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.params.speed, runCallbacks = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true, translateBounds = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true, internal = arguments.length > 4 ? arguments[4] : void 0;\n    var swiper = this;\n    var params = swiper.params, wrapperEl = swiper.wrapperEl;\n    if (swiper.animating && params.preventInteractionOnTransition) return false;\n    var minTranslate = swiper.minTranslate();\n    var maxTranslate = swiper.maxTranslate();\n    var newTranslate;\n    if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n    else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n    else newTranslate = translate; // Update progress\n    swiper.updateProgress(newTranslate);\n    if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n        if (speed === 0) wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = -newTranslate;\n        else {\n            if (!swiper.support.smoothScroll) {\n                (0, $1338f5f0d60fe216$export$a5dd2b4b1a116d6d)({\n                    swiper: swiper,\n                    targetPosition: -newTranslate,\n                    side: isH ? \"left\" : \"top\"\n                });\n                return true;\n            }\n            var _obj;\n            wrapperEl.scrollTo((_obj = {}, (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)(_obj, isH ? \"left\" : \"top\", -newTranslate), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)(_obj, \"behavior\", \"smooth\"), _obj));\n        }\n        return true;\n    }\n    if (speed === 0) {\n        swiper.setTransition(0);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n            swiper.emit(\"beforeTransitionStart\", speed, internal);\n            swiper.emit(\"transitionEnd\");\n        }\n    } else {\n        swiper.setTransition(speed);\n        swiper.setTranslate(newTranslate);\n        if (runCallbacks) {\n            swiper.emit(\"beforeTransitionStart\", speed, internal);\n            swiper.emit(\"transitionStart\");\n        }\n        if (!swiper.animating) {\n            swiper.animating = true;\n            if (!swiper.onTranslateToWrapperTransitionEnd) swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n                if (!swiper || swiper.destroyed) return;\n                if (e.target !== this) return;\n                swiper.$wrapperEl[0].removeEventListener(\"transitionend\", swiper.onTranslateToWrapperTransitionEnd);\n                swiper.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\", swiper.onTranslateToWrapperTransitionEnd);\n                swiper.onTranslateToWrapperTransitionEnd = null;\n                delete swiper.onTranslateToWrapperTransitionEnd;\n                if (runCallbacks) swiper.emit(\"transitionEnd\");\n            };\n            swiper.$wrapperEl[0].addEventListener(\"transitionend\", swiper.onTranslateToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\", swiper.onTranslateToWrapperTransitionEnd);\n        }\n    }\n    return true;\n}\n\n\nvar $ff3f3346f9416381$export$2e2bcd8739ae039 = {\n    getTranslate: (0, $119efefc5c17e954$export$2e2bcd8739ae039),\n    setTranslate: (0, $f0467b48c9fa9010$export$2e2bcd8739ae039),\n    minTranslate: (0, $5bff9b105f3a15ca$export$2e2bcd8739ae039),\n    maxTranslate: (0, $9e1d7562301634ad$export$2e2bcd8739ae039),\n    translateTo: (0, $a22a1974ce4a087e$export$2e2bcd8739ae039)\n};\n\n\nfunction $f2e9791e5099a2fd$export$2e2bcd8739ae039(duration, byController) {\n    var swiper = this;\n    if (!swiper.params.cssMode) swiper.$wrapperEl.transition(duration);\n    swiper.emit(\"setTransition\", duration, byController);\n}\n\n\nfunction $309f9b76d4fd47ea$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, runCallbacks = param.runCallbacks, direction = param.direction, step = param.step;\n    var activeIndex = swiper.activeIndex, previousIndex = swiper.previousIndex;\n    var dir = direction;\n    if (!dir) {\n        if (activeIndex > previousIndex) dir = \"next\";\n        else if (activeIndex < previousIndex) dir = \"prev\";\n        else dir = \"reset\";\n    }\n    swiper.emit(\"transition\".concat(step));\n    if (runCallbacks && activeIndex !== previousIndex) {\n        if (dir === \"reset\") {\n            swiper.emit(\"slideResetTransition\".concat(step));\n            return;\n        }\n        swiper.emit(\"slideChangeTransition\".concat(step));\n        if (dir === \"next\") swiper.emit(\"slideNextTransition\".concat(step));\n        else swiper.emit(\"slidePrevTransition\".concat(step));\n    }\n}\n\n\nfunction $301e70f0ee5514cd$export$2e2bcd8739ae039() {\n    var runCallbacks = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true, direction = arguments.length > 1 ? arguments[1] : void 0;\n    var swiper = this;\n    var params = swiper.params;\n    if (params.cssMode) return;\n    if (params.autoHeight) swiper.updateAutoHeight();\n    (0, $309f9b76d4fd47ea$export$2e2bcd8739ae039)({\n        swiper: swiper,\n        runCallbacks: runCallbacks,\n        direction: direction,\n        step: \"Start\"\n    });\n}\n\n\n\nfunction $6ab48978240ea54a$export$2e2bcd8739ae039() {\n    var runCallbacks = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true, direction = arguments.length > 1 ? arguments[1] : void 0;\n    var swiper = this;\n    var params = swiper.params;\n    swiper.animating = false;\n    if (params.cssMode) return;\n    swiper.setTransition(0);\n    (0, $309f9b76d4fd47ea$export$2e2bcd8739ae039)({\n        swiper: swiper,\n        runCallbacks: runCallbacks,\n        direction: direction,\n        step: \"End\"\n    });\n}\n\n\nvar $3bfe96c57afe6ca0$export$2e2bcd8739ae039 = {\n    setTransition: (0, $f2e9791e5099a2fd$export$2e2bcd8739ae039),\n    transitionStart: (0, $301e70f0ee5514cd$export$2e2bcd8739ae039),\n    transitionEnd: (0, $6ab48978240ea54a$export$2e2bcd8739ae039)\n};\n\n\n\n\n\nfunction $09948a6d2dc2571f$export$2e2bcd8739ae039() {\n    var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, speed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.params.speed, runCallbacks = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true, internal = arguments.length > 3 ? arguments[3] : void 0, initial = arguments.length > 4 ? arguments[4] : void 0;\n    if (typeof index !== \"number\" && typeof index !== \"string\") throw new Error(\"The 'index' argument cannot have type other than 'number' or 'string'. [\".concat(typeof index === \"undefined\" ? \"undefined\" : (0, $47e0aa82139bfe16$export$5f0017c582d45a2d)(index), \"] given.\"));\n    if (typeof index === \"string\") {\n        /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */ var indexAsNumber = parseInt(index, 10);\n        /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */ var isValidNumber = isFinite(indexAsNumber);\n        if (!isValidNumber) throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\".concat(index, \"] given.\"));\n         // Knowing that the converted `index` is a valid number,\n        // we can update the original argument's value.\n        index = indexAsNumber;\n    }\n    var swiper = this;\n    var slideIndex = index;\n    if (slideIndex < 0) slideIndex = 0;\n    var params = swiper.params, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, previousIndex = swiper.previousIndex, activeIndex = swiper.activeIndex, rtl = swiper.rtlTranslate, wrapperEl = swiper.wrapperEl, enabled = swiper.enabled;\n    if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) return false;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n    var snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n    if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n    var translate = -snapGrid[snapIndex]; // Normalize slideIndex\n    if (params.normalizeSlideIndex) for(var i = 0; i < slidesGrid.length; i += 1){\n        var normalizedTranslate = -Math.floor(translate * 100);\n        var normalizedGrid = Math.floor(slidesGrid[i] * 100);\n        var normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n        if (typeof slidesGrid[i + 1] !== \"undefined\") {\n            if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) slideIndex = i;\n            else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) slideIndex = i + 1;\n        } else if (normalizedTranslate >= normalizedGrid) slideIndex = i;\n    }\n     // Directions locks\n    if (swiper.initialized && slideIndex !== activeIndex) {\n        if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) return false;\n        if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n            if ((activeIndex || 0) !== slideIndex) return false;\n        }\n    }\n    if (slideIndex !== (previousIndex || 0) && runCallbacks) swiper.emit(\"beforeSlideChangeStart\");\n     // Update progress\n    swiper.updateProgress(translate);\n    var direction;\n    if (slideIndex > activeIndex) direction = \"next\";\n    else if (slideIndex < activeIndex) direction = \"prev\";\n    else direction = \"reset\"; // Update Index\n    if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n        swiper.updateActiveIndex(slideIndex); // Update Height\n        if (params.autoHeight) swiper.updateAutoHeight();\n        swiper.updateSlidesClasses();\n        if (params.effect !== \"slide\") swiper.setTranslate(translate);\n        if (direction !== \"reset\") {\n            swiper.transitionStart(runCallbacks, direction);\n            swiper.transitionEnd(runCallbacks, direction);\n        }\n        return false;\n    }\n    if (params.cssMode) {\n        var isH = swiper.isHorizontal();\n        var t = rtl ? translate : -translate;\n        if (speed === 0) {\n            var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n            if (isVirtual) {\n                swiper.wrapperEl.style.scrollSnapType = \"none\";\n                swiper._immediateVirtual = true;\n            }\n            wrapperEl[isH ? \"scrollLeft\" : \"scrollTop\"] = t;\n            if (isVirtual) requestAnimationFrame(function() {\n                swiper.wrapperEl.style.scrollSnapType = \"\";\n                swiper._swiperImmediateVirtual = false;\n            });\n        } else {\n            if (!swiper.support.smoothScroll) {\n                (0, $1338f5f0d60fe216$export$a5dd2b4b1a116d6d)({\n                    swiper: swiper,\n                    targetPosition: t,\n                    side: isH ? \"left\" : \"top\"\n                });\n                return true;\n            }\n            var _obj;\n            wrapperEl.scrollTo((_obj = {}, (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)(_obj, isH ? \"left\" : \"top\", t), (0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)(_obj, \"behavior\", \"smooth\"), _obj));\n        }\n        return true;\n    }\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit(\"beforeTransitionStart\", speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (speed === 0) swiper.transitionEnd(runCallbacks, direction);\n    else if (!swiper.animating) {\n        swiper.animating = true;\n        if (!swiper.onSlideToWrapperTransitionEnd) swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n            if (!swiper || swiper.destroyed) return;\n            if (e.target !== this) return;\n            swiper.$wrapperEl[0].removeEventListener(\"transitionend\", swiper.onSlideToWrapperTransitionEnd);\n            swiper.$wrapperEl[0].removeEventListener(\"webkitTransitionEnd\", swiper.onSlideToWrapperTransitionEnd);\n            swiper.onSlideToWrapperTransitionEnd = null;\n            delete swiper.onSlideToWrapperTransitionEnd;\n            swiper.transitionEnd(runCallbacks, direction);\n        };\n        swiper.$wrapperEl[0].addEventListener(\"transitionend\", swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].addEventListener(\"webkitTransitionEnd\", swiper.onSlideToWrapperTransitionEnd);\n    }\n    return true;\n}\n\n\nfunction $93d4bf3a931cd83e$export$2e2bcd8739ae039() {\n    var index = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, speed = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.params.speed, runCallbacks = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : true, internal = arguments.length > 3 ? arguments[3] : void 0;\n    if (typeof index === \"string\") {\n        /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */ var indexAsNumber = parseInt(index, 10);\n        /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */ var isValidNumber = isFinite(indexAsNumber);\n        if (!isValidNumber) throw new Error(\"The passed-in 'index' (string) couldn't be converted to 'number'. [\".concat(index, \"] given.\"));\n         // Knowing that the converted `index` is a valid number,\n        // we can update the original argument's value.\n        index = indexAsNumber;\n    }\n    var swiper = this;\n    var newIndex = index;\n    if (swiper.params.loop) newIndex += swiper.loopedSlides;\n    return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n\n/* eslint no-unused-vars: \"off\" */ function $5cd51e7a21111153$export$2e2bcd8739ae039() {\n    var speed = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.params.speed, runCallbacks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, internal = arguments.length > 2 ? arguments[2] : void 0;\n    var swiper = this;\n    var animating = swiper.animating, enabled = swiper.enabled, params = swiper.params;\n    if (!enabled) return swiper;\n    var perGroup = params.slidesPerGroup;\n    if (params.slidesPerView === \"auto\" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) perGroup = Math.max(swiper.slidesPerViewDynamic(\"current\", true), 1);\n    var increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n    if (params.loop) {\n        if (animating && params.loopPreventsSlide) return false;\n        swiper.loopFix(); // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    if (params.rewind && swiper.isEnd) return swiper.slideTo(0, speed, runCallbacks, internal);\n    return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}\n\n\n/* eslint no-unused-vars: \"off\" */ function $29ea6cd54fa440bc$export$2e2bcd8739ae039() {\n    var speed = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.params.speed, runCallbacks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, internal = arguments.length > 2 ? arguments[2] : void 0;\n    var swiper = this;\n    var params = swiper.params, animating = swiper.animating, snapGrid = swiper.snapGrid, slidesGrid = swiper.slidesGrid, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled;\n    if (!enabled) return swiper;\n    if (params.loop) {\n        if (animating && params.loopPreventsSlide) return false;\n        swiper.loopFix(); // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    }\n    var translate = rtlTranslate ? swiper.translate : -swiper.translate;\n    function normalize(val) {\n        if (val < 0) return -Math.floor(Math.abs(val));\n        return Math.floor(val);\n    }\n    var normalizedTranslate = normalize(translate);\n    var normalizedSnapGrid = snapGrid.map(function(val) {\n        return normalize(val);\n    });\n    var prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n    if (typeof prevSnap === \"undefined\" && params.cssMode) {\n        var prevSnapIndex;\n        snapGrid.forEach(function(snap, snapIndex) {\n            if (normalizedTranslate >= snap) // prevSnap = snap;\n            prevSnapIndex = snapIndex;\n        });\n        if (typeof prevSnapIndex !== \"undefined\") prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n    var prevIndex = 0;\n    if (typeof prevSnap !== \"undefined\") {\n        prevIndex = slidesGrid.indexOf(prevSnap);\n        if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n        if (params.slidesPerView === \"auto\" && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n            prevIndex = prevIndex - swiper.slidesPerViewDynamic(\"previous\", true) + 1;\n            prevIndex = Math.max(prevIndex, 0);\n        }\n    }\n    if (params.rewind && swiper.isBeginning) {\n        var lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n    }\n    return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n\n/* eslint no-unused-vars: \"off\" */ function $9ac1243abd623ac0$export$2e2bcd8739ae039() {\n    var speed = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.params.speed, runCallbacks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, internal = arguments.length > 2 ? arguments[2] : void 0;\n    var swiper = this;\n    return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n\n/* eslint no-unused-vars: \"off\" */ function $b30eb28584e91039$export$2e2bcd8739ae039() {\n    var speed = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : this.params.speed, runCallbacks = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true, internal = arguments.length > 2 ? arguments[2] : void 0, threshold = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0.5;\n    var swiper = this;\n    var index = swiper.activeIndex;\n    var skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n    var snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n    var translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n    if (translate >= swiper.snapGrid[snapIndex]) {\n        // The current translate is on or after the current snap index, so the choice\n        // is between the current index and the one after it.\n        var currentSnap = swiper.snapGrid[snapIndex];\n        var nextSnap = swiper.snapGrid[snapIndex + 1];\n        if (translate - currentSnap > (nextSnap - currentSnap) * threshold) index += swiper.params.slidesPerGroup;\n    } else {\n        // The current translate is before the current snap index, so the choice\n        // is between the current index and the one before it.\n        var prevSnap = swiper.snapGrid[snapIndex - 1];\n        var currentSnap1 = swiper.snapGrid[snapIndex];\n        if (translate - prevSnap <= (currentSnap1 - prevSnap) * threshold) index -= swiper.params.slidesPerGroup;\n    }\n    index = Math.max(index, 0);\n    index = Math.min(index, swiper.slidesGrid.length - 1);\n    return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\n\n\n\nfunction $c9c878d368de6346$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl;\n    var slidesPerView = params.slidesPerView === \"auto\" ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n    var slideToIndex = swiper.clickedIndex;\n    var realIndex;\n    if (params.loop) {\n        if (swiper.animating) return;\n        realIndex = parseInt((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(swiper.clickedSlide).attr(\"data-swiper-slide-index\"), 10);\n        if (params.centeredSlides) {\n            if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n                swiper.loopFix();\n                slideToIndex = $wrapperEl.children(\".\".concat(params.slideClass, '[data-swiper-slide-index=\"').concat(realIndex, '\"]:not(.').concat(params.slideDuplicateClass, \")\")).eq(0).index();\n                (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n                    swiper.slideTo(slideToIndex);\n                });\n            } else swiper.slideTo(slideToIndex);\n        } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n            swiper.loopFix();\n            slideToIndex = $wrapperEl.children(\".\".concat(params.slideClass, '[data-swiper-slide-index=\"').concat(realIndex, '\"]:not(.').concat(params.slideDuplicateClass, \")\")).eq(0).index();\n            (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n                swiper.slideTo(slideToIndex);\n            });\n        } else swiper.slideTo(slideToIndex);\n    } else swiper.slideTo(slideToIndex);\n}\n\n\nvar $d7398976190fd90b$export$2e2bcd8739ae039 = {\n    slideTo: (0, $09948a6d2dc2571f$export$2e2bcd8739ae039),\n    slideToLoop: (0, $93d4bf3a931cd83e$export$2e2bcd8739ae039),\n    slideNext: (0, $5cd51e7a21111153$export$2e2bcd8739ae039),\n    slidePrev: (0, $29ea6cd54fa440bc$export$2e2bcd8739ae039),\n    slideReset: (0, $9ac1243abd623ac0$export$2e2bcd8739ae039),\n    slideToClosest: (0, $b30eb28584e91039$export$2e2bcd8739ae039),\n    slideToClickedSlide: (0, $c9c878d368de6346$export$2e2bcd8739ae039)\n};\n\n\n\n\nfunction $2ae2939469a141d4$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl; // Remove duplicated slides\n    var $selector = $wrapperEl.children().length > 0 ? (0, $181e7e5b06640d28$export$2e2bcd8739ae039)($wrapperEl.children()[0].parentNode) : $wrapperEl;\n    $selector.children(\".\".concat(params.slideClass, \".\").concat(params.slideDuplicateClass)).remove();\n    var slides = $selector.children(\".\".concat(params.slideClass));\n    if (params.loopFillGroupWithBlank) {\n        var blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n        if (blankSlidesNum !== params.slidesPerGroup) {\n            for(var i = 0; i < blankSlidesNum; i += 1){\n                var blankNode = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(document.createElement(\"div\")).addClass(\"\".concat(params.slideClass, \" \").concat(params.slideBlankClass));\n                $selector.append(blankNode);\n            }\n            slides = $selector.children(\".\".concat(params.slideClass));\n        }\n    }\n    if (params.slidesPerView === \"auto\" && !params.loopedSlides) params.loopedSlides = slides.length;\n    swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n    swiper.loopedSlides += params.loopAdditionalSlides;\n    if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) swiper.loopedSlides = slides.length;\n    var prependSlides = [];\n    var appendSlides = [];\n    slides.each(function(el, index) {\n        var slide = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(el);\n        slide.attr(\"data-swiper-slide-index\", index);\n    });\n    for(var i1 = 0; i1 < swiper.loopedSlides; i1 += 1){\n        var index = i1 - Math.floor(i1 / slides.length) * slides.length;\n        appendSlides.push(slides.eq(index)[0]);\n        prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);\n    }\n    for(var i2 = 0; i2 < appendSlides.length; i2 += 1)$selector.append((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(appendSlides[i2].cloneNode(true)).addClass(params.slideDuplicateClass));\n    for(var i3 = prependSlides.length - 1; i3 >= 0; i3 -= 1)$selector.prepend((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(prependSlides[i3].cloneNode(true)).addClass(params.slideDuplicateClass));\n}\n\n\nfunction $585deea5b955cef7$export$2e2bcd8739ae039() {\n    var swiper = this;\n    swiper.emit(\"beforeLoopFix\");\n    var activeIndex = swiper.activeIndex, slides = swiper.slides, loopedSlides = swiper.loopedSlides, allowSlidePrev = swiper.allowSlidePrev, allowSlideNext = swiper.allowSlideNext, snapGrid = swiper.snapGrid, rtl = swiper.rtlTranslate;\n    var newIndex;\n    swiper.allowSlidePrev = true;\n    swiper.allowSlideNext = true;\n    var snapTranslate = -snapGrid[activeIndex];\n    var diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n    if (activeIndex < loopedSlides) {\n        newIndex = slides.length - loopedSlides * 3 + activeIndex;\n        newIndex += loopedSlides;\n        var slideChanged = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged && diff !== 0) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    } else if (activeIndex >= slides.length - loopedSlides) {\n        // Fix For Positive Oversliding\n        newIndex = -slides.length + activeIndex + loopedSlides;\n        newIndex += loopedSlides;\n        var slideChanged1 = swiper.slideTo(newIndex, 0, false, true);\n        if (slideChanged1 && diff !== 0) swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit(\"loopFix\");\n}\n\n\nfunction $3d54c101ba970f47$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, slides = swiper.slides;\n    $wrapperEl.children(\".\".concat(params.slideClass, \".\").concat(params.slideDuplicateClass, \",.\").concat(params.slideClass, \".\").concat(params.slideBlankClass)).remove();\n    slides.removeAttr(\"data-swiper-slide-index\");\n}\n\n\nvar $7ea6f47a36945eb6$export$2e2bcd8739ae039 = {\n    loopCreate: (0, $2ae2939469a141d4$export$2e2bcd8739ae039),\n    loopFix: (0, $585deea5b955cef7$export$2e2bcd8739ae039),\n    loopDestroy: (0, $3d54c101ba970f47$export$2e2bcd8739ae039)\n};\n\n\nfunction $273d86d6596c268d$export$2e2bcd8739ae039(moving) {\n    var swiper = this;\n    if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    var el = swiper.params.touchEventsTarget === \"container\" ? swiper.el : swiper.wrapperEl;\n    el.style.cursor = \"move\";\n    el.style.cursor = moving ? \"grabbing\" : \"grab\";\n}\n\n\nfunction $7917a06587c5c882$export$2e2bcd8739ae039() {\n    var swiper = this;\n    if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n    swiper[swiper.params.touchEventsTarget === \"container\" ? \"el\" : \"wrapperEl\"].style.cursor = \"\";\n}\n\n\nvar $012177cdd3ce0659$export$2e2bcd8739ae039 = {\n    setGrabCursor: (0, $273d86d6596c268d$export$2e2bcd8739ae039),\n    unsetGrabCursor: (0, $7917a06587c5c882$export$2e2bcd8739ae039)\n};\n\n\n\n\n\n\nfunction $6a43b17d59f348c6$var$closestElement(selector) {\n    var base = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this;\n    function __closestFrom(el) {\n        if (!el || el === (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)() || el === (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)()) return null;\n        if (el.assignedSlot) el = el.assignedSlot;\n        var found = el.closest(selector);\n        if (!found && !el.getRootNode) return null;\n        return found || __closestFrom(el.getRootNode().host);\n    }\n    return __closestFrom(base);\n}\nfunction $6a43b17d59f348c6$export$2e2bcd8739ae039(event) {\n    var swiper = this;\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var data = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, enabled = swiper.enabled;\n    if (!enabled) return;\n    if (swiper.animating && params.preventInteractionOnTransition) return;\n    if (!swiper.animating && params.cssMode && params.loop) swiper.loopFix();\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    var $targetEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(e.target);\n    if (params.touchEventsTarget === \"wrapper\") {\n        if (!$targetEl.closest(swiper.wrapperEl).length) return;\n    }\n    data.isTouchEvent = e.type === \"touchstart\";\n    if (!data.isTouchEvent && \"which\" in e && e.which === 3) return;\n    if (!data.isTouchEvent && \"button\" in e && e.button > 0) return;\n    if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n    var swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== \"\"; // eslint-disable-next-line\n    var eventPath = event.composedPath ? event.composedPath() : event.path;\n    if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) $targetEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(eventPath[0]);\n    var noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : \".\".concat(params.noSwipingClass);\n    var isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n    if (params.noSwiping && (isTargetShadow ? $6a43b17d59f348c6$var$closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {\n        swiper.allowClick = true;\n        return;\n    }\n    if (params.swipeHandler) {\n        if (!$targetEl.closest(params.swipeHandler)[0]) return;\n    }\n    touches.currentX = e.type === \"touchstart\" ? e.targetTouches[0].pageX : e.pageX;\n    touches.currentY = e.type === \"touchstart\" ? e.targetTouches[0].pageY : e.pageY;\n    var startX = touches.currentX;\n    var startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n    var edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n    var edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n    if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n        if (edgeSwipeDetection === \"prevent\") event.preventDefault();\n        else return;\n    }\n    Object.assign(data, {\n        isTouched: true,\n        isMoved: false,\n        allowTouchCallbacks: true,\n        isScrolling: undefined,\n        startMoving: undefined\n    });\n    touches.startX = startX;\n    touches.startY = startY;\n    data.touchStartTime = (0, $1338f5f0d60fe216$export$461939dd4422153)();\n    swiper.allowClick = true;\n    swiper.updateSize();\n    swiper.swipeDirection = undefined;\n    if (params.threshold > 0) data.allowThresholdMove = false;\n    if (e.type !== \"touchstart\") {\n        var preventDefault = true;\n        if ($targetEl.is(data.focusableElements)) {\n            preventDefault = false;\n            if ($targetEl[0].nodeName === \"SELECT\") data.isTouched = false;\n        }\n        if (document.activeElement && (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) document.activeElement.blur();\n        var shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n        if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) e.preventDefault();\n    }\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) swiper.freeMode.onTouchStart();\n    swiper.emit(\"touchStart\", e);\n}\n\n\n\n\n\nfunction $02baf1653270db8e$export$2e2bcd8739ae039(event) {\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, enabled = swiper.enabled;\n    if (!enabled) return;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    if (!data.isTouched) {\n        if (data.startMoving && data.isScrolling) swiper.emit(\"touchMoveOpposite\", e);\n        return;\n    }\n    if (data.isTouchEvent && e.type !== \"touchmove\") return;\n    var targetTouch = e.type === \"touchmove\" && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n    var pageX = e.type === \"touchmove\" ? targetTouch.pageX : e.pageX;\n    var pageY = e.type === \"touchmove\" ? targetTouch.pageY : e.pageY;\n    if (e.preventedByNestedSwiper) {\n        touches.startX = pageX;\n        touches.startY = pageY;\n        return;\n    }\n    if (!swiper.allowTouchMove) {\n        if (!(0, $181e7e5b06640d28$export$2e2bcd8739ae039)(e.target).is(data.focusableElements)) swiper.allowClick = false;\n        if (data.isTouched) {\n            Object.assign(touches, {\n                startX: pageX,\n                startY: pageY,\n                currentX: pageX,\n                currentY: pageY\n            });\n            data.touchStartTime = (0, $1338f5f0d60fe216$export$461939dd4422153)();\n        }\n        return;\n    }\n    if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n        if (swiper.isVertical()) // Vertical\n        {\n            if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n                data.isTouched = false;\n                data.isMoved = false;\n                return;\n            }\n        } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) return;\n    }\n    if (data.isTouchEvent && document.activeElement) {\n        if (e.target === document.activeElement && (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(e.target).is(data.focusableElements)) {\n            data.isMoved = true;\n            swiper.allowClick = false;\n            return;\n        }\n    }\n    if (data.allowTouchCallbacks) swiper.emit(\"touchMove\", e);\n    if (e.targetTouches && e.targetTouches.length > 1) return;\n    touches.currentX = pageX;\n    touches.currentY = pageY;\n    var diffX = touches.currentX - touches.startX;\n    var diffY = touches.currentY - touches.startY;\n    if (swiper.params.threshold && Math.sqrt(Math.pow(diffX, 2) + Math.pow(diffY, 2)) < swiper.params.threshold) return;\n    if (typeof data.isScrolling === \"undefined\") {\n        var touchAngle;\n        if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) data.isScrolling = false;\n        else // eslint-disable-next-line\n        if (diffX * diffX + diffY * diffY >= 25) {\n            touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n            data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n        }\n    }\n    if (data.isScrolling) swiper.emit(\"touchMoveOpposite\", e);\n    if (typeof data.startMoving === \"undefined\") {\n        if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) data.startMoving = true;\n    }\n    if (data.isScrolling) {\n        data.isTouched = false;\n        return;\n    }\n    if (!data.startMoving) return;\n    swiper.allowClick = false;\n    if (!params.cssMode && e.cancelable) e.preventDefault();\n    if (params.touchMoveStopPropagation && !params.nested) e.stopPropagation();\n    if (!data.isMoved) {\n        if (params.loop && !params.cssMode) swiper.loopFix();\n        data.startTranslate = swiper.getTranslate();\n        swiper.setTransition(0);\n        if (swiper.animating) swiper.$wrapperEl.trigger(\"webkitTransitionEnd transitionend\");\n        data.allowMomentumBounce = false; // Grab Cursor\n        if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(true);\n        swiper.emit(\"sliderFirstMove\", e);\n    }\n    swiper.emit(\"sliderMove\", e);\n    data.isMoved = true;\n    var diff = swiper.isHorizontal() ? diffX : diffY;\n    touches.diff = diff;\n    diff *= params.touchRatio;\n    if (rtl) diff = -diff;\n    swiper.swipeDirection = diff > 0 ? \"prev\" : \"next\";\n    data.currentTranslate = diff + data.startTranslate;\n    var disableParentSwiper = true;\n    var resistanceRatio = params.resistanceRatio;\n    if (params.touchReleaseOnEdges) resistanceRatio = 0;\n    if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + Math.pow(-swiper.minTranslate() + data.startTranslate + diff, resistanceRatio);\n    } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n        disableParentSwiper = false;\n        if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - Math.pow(swiper.maxTranslate() - data.startTranslate - diff, resistanceRatio);\n    }\n    if (disableParentSwiper) e.preventedByNestedSwiper = true;\n     // Directions locks\n    if (!swiper.allowSlideNext && swiper.swipeDirection === \"next\" && data.currentTranslate < data.startTranslate) data.currentTranslate = data.startTranslate;\n    if (!swiper.allowSlidePrev && swiper.swipeDirection === \"prev\" && data.currentTranslate > data.startTranslate) data.currentTranslate = data.startTranslate;\n    if (!swiper.allowSlidePrev && !swiper.allowSlideNext) data.currentTranslate = data.startTranslate;\n     // Threshold\n    if (params.threshold > 0) {\n        if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n            if (!data.allowThresholdMove) {\n                data.allowThresholdMove = true;\n                touches.startX = touches.currentX;\n                touches.startY = touches.currentY;\n                data.currentTranslate = data.startTranslate;\n                touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n                return;\n            }\n        } else {\n            data.currentTranslate = data.startTranslate;\n            return;\n        }\n    }\n    if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n    if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    }\n    if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) swiper.freeMode.onTouchMove();\n     // Update progress\n    swiper.updateProgress(data.currentTranslate); // Update translate\n    swiper.setTranslate(data.currentTranslate);\n}\n\n\n\nfunction $15353fd53fa0afb1$export$2e2bcd8739ae039(event) {\n    var swiper = this;\n    var data = swiper.touchEventsData;\n    var params = swiper.params, touches = swiper.touches, rtl = swiper.rtlTranslate, slidesGrid = swiper.slidesGrid, enabled = swiper.enabled;\n    if (!enabled) return;\n    var e = event;\n    if (e.originalEvent) e = e.originalEvent;\n    if (data.allowTouchCallbacks) swiper.emit(\"touchEnd\", e);\n    data.allowTouchCallbacks = false;\n    if (!data.isTouched) {\n        if (data.isMoved && params.grabCursor) swiper.setGrabCursor(false);\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n    } // Return Grab Cursor\n    if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) swiper.setGrabCursor(false);\n     // Time diff\n    var touchEndTime = (0, $1338f5f0d60fe216$export$461939dd4422153)();\n    var timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n    if (swiper.allowClick) {\n        var pathTree = e.path || e.composedPath && e.composedPath();\n        swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n        swiper.emit(\"tap click\", e);\n        if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) swiper.emit(\"doubleTap doubleClick\", e);\n    }\n    data.lastClickTime = (0, $1338f5f0d60fe216$export$461939dd4422153)();\n    (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n        if (!swiper.destroyed) swiper.allowClick = true;\n    });\n    if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n        data.isTouched = false;\n        data.isMoved = false;\n        data.startMoving = false;\n        return;\n    }\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    var currentPos;\n    if (params.followFinger) currentPos = rtl ? swiper.translate : -swiper.translate;\n    else currentPos = -data.currentTranslate;\n    if (params.cssMode) return;\n    if (swiper.params.freeMode && params.freeMode.enabled) {\n        swiper.freeMode.onTouchEnd({\n            currentPos: currentPos\n        });\n        return;\n    } // Find current slide\n    var stopIndex = 0;\n    var groupSize = swiper.slidesSizesGrid[0];\n    for(var i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup){\n        var increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n        if (typeof slidesGrid[i + increment] !== \"undefined\") {\n            if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n                stopIndex = i;\n                groupSize = slidesGrid[i + increment] - slidesGrid[i];\n            }\n        } else if (currentPos >= slidesGrid[i]) {\n            stopIndex = i;\n            groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n        }\n    }\n    var rewindFirstIndex = null;\n    var rewindLastIndex = null;\n    if (params.rewind) {\n        if (swiper.isBeginning) rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n        else if (swiper.isEnd) rewindFirstIndex = 0;\n    } // Find current slide size\n    var ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n    var increment1 = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (timeDiff > params.longSwipesMs) {\n        // Long touches\n        if (!params.longSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (swiper.swipeDirection === \"next\") {\n            if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment1);\n            else swiper.slideTo(stopIndex);\n        }\n        if (swiper.swipeDirection === \"prev\") {\n            if (ratio > 1 - params.longSwipesRatio) swiper.slideTo(stopIndex + increment1);\n            else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) swiper.slideTo(rewindLastIndex);\n            else swiper.slideTo(stopIndex);\n        }\n    } else {\n        // Short swipes\n        if (!params.shortSwipes) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        var isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n        if (!isNavButtonTarget) {\n            if (swiper.swipeDirection === \"next\") swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment1);\n            if (swiper.swipeDirection === \"prev\") swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n        } else if (e.target === swiper.navigation.nextEl) swiper.slideTo(stopIndex + increment1);\n        else swiper.slideTo(stopIndex);\n    }\n}\n\n\nfunction $f43968ae768025a8$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var params = swiper.params, el = swiper.el;\n    if (el && el.offsetWidth === 0) return; // Breakpoints\n    if (params.breakpoints) swiper.setBreakpoint();\n     // Save locks\n    var allowSlideNext = swiper.allowSlideNext, allowSlidePrev = swiper.allowSlidePrev, snapGrid = swiper.snapGrid; // Disable locks on resize\n    swiper.allowSlideNext = true;\n    swiper.allowSlidePrev = true;\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateSlidesClasses();\n    if ((params.slidesPerView === \"auto\" || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n    else swiper.slideTo(swiper.activeIndex, 0, false, true);\n    if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) swiper.autoplay.run();\n     // Return locks after resize\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();\n}\n\n\nfunction $23ec95d99b99a94a$export$2e2bcd8739ae039(e) {\n    var swiper = this;\n    if (!swiper.enabled) return;\n    if (!swiper.allowClick) {\n        if (swiper.params.preventClicks) e.preventDefault();\n        if (swiper.params.preventClicksPropagation && swiper.animating) {\n            e.stopPropagation();\n            e.stopImmediatePropagation();\n        }\n    }\n}\n\n\nfunction $0d76ce9bb77be3f2$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var wrapperEl = swiper.wrapperEl, rtlTranslate = swiper.rtlTranslate, enabled = swiper.enabled;\n    if (!enabled) return;\n    swiper.previousTranslate = swiper.translate;\n    if (swiper.isHorizontal()) swiper.translate = -wrapperEl.scrollLeft;\n    else swiper.translate = -wrapperEl.scrollTop;\n     // eslint-disable-next-line\n    if (swiper.translate === 0) swiper.translate = 0;\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n    var newProgress;\n    var translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n    if (translatesDiff === 0) newProgress = 0;\n    else newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n    if (newProgress !== swiper.progress) swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n    swiper.emit(\"setTranslate\", swiper.translate, false);\n}\n\n\nvar $f9d4708c1dfbfc0b$var$dummyEventAttached = false;\nfunction $f9d4708c1dfbfc0b$var$dummyEventListener() {}\nvar $f9d4708c1dfbfc0b$var$events = function(swiper, method) {\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var params = swiper.params, touchEvents = swiper.touchEvents, el = swiper.el, wrapperEl = swiper.wrapperEl, device = swiper.device, support = swiper.support;\n    var capture = !!params.nested;\n    var domMethod = method === \"on\" ? \"addEventListener\" : \"removeEventListener\";\n    var swiperMethod = method; // Touch Events\n    if (!support.touch) {\n        el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n        document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n        document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n    } else {\n        var passiveListener = touchEvents.start === \"touchstart\" && support.passiveListener && params.passiveListeners ? {\n            passive: true,\n            capture: false\n        } : false;\n        el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n        el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n            passive: false,\n            capture: capture\n        } : capture);\n        el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n        if (touchEvents.cancel) el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n    } // Prevent Links Clicks\n    if (params.preventClicks || params.preventClicksPropagation) el[domMethod](\"click\", swiper.onClick, true);\n    if (params.cssMode) wrapperEl[domMethod](\"scroll\", swiper.onScroll);\n     // Resize handler\n    if (params.updateOnWindowResize) swiper[swiperMethod](device.ios || device.android ? \"resize orientationchange observerUpdate\" : \"resize observerUpdate\", (0, $f43968ae768025a8$export$2e2bcd8739ae039), true);\n    else swiper[swiperMethod](\"observerUpdate\", (0, $f43968ae768025a8$export$2e2bcd8739ae039), true);\n};\nfunction $f9d4708c1dfbfc0b$var$attachEvents() {\n    var swiper = this;\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var params = swiper.params, support = swiper.support;\n    swiper.onTouchStart = (0, $6a43b17d59f348c6$export$2e2bcd8739ae039).bind(swiper);\n    swiper.onTouchMove = (0, $02baf1653270db8e$export$2e2bcd8739ae039).bind(swiper);\n    swiper.onTouchEnd = (0, $15353fd53fa0afb1$export$2e2bcd8739ae039).bind(swiper);\n    if (params.cssMode) swiper.onScroll = (0, $0d76ce9bb77be3f2$export$2e2bcd8739ae039).bind(swiper);\n    swiper.onClick = (0, $23ec95d99b99a94a$export$2e2bcd8739ae039).bind(swiper);\n    if (support.touch && !$f9d4708c1dfbfc0b$var$dummyEventAttached) {\n        document.addEventListener(\"touchstart\", $f9d4708c1dfbfc0b$var$dummyEventListener);\n        $f9d4708c1dfbfc0b$var$dummyEventAttached = true;\n    }\n    $f9d4708c1dfbfc0b$var$events(swiper, \"on\");\n}\nfunction $f9d4708c1dfbfc0b$var$detachEvents() {\n    var swiper = this;\n    $f9d4708c1dfbfc0b$var$events(swiper, \"off\");\n}\nvar $f9d4708c1dfbfc0b$export$2e2bcd8739ae039 = {\n    attachEvents: $f9d4708c1dfbfc0b$var$attachEvents,\n    detachEvents: $f9d4708c1dfbfc0b$var$detachEvents\n};\n\n\n\nvar $881af1db6e44c2b5$var$isGridEnabled = function(swiper, params) {\n    return swiper.grid && params.grid && params.grid.rows > 1;\n};\nfunction $881af1db6e44c2b5$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var activeIndex = swiper.activeIndex, initialized = swiper.initialized, _swiper_loopedSlides = swiper.loopedSlides, loopedSlides = _swiper_loopedSlides === void 0 ? 0 : _swiper_loopedSlides, params = swiper.params, $el = swiper.$el;\n    var breakpoints = params.breakpoints;\n    if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n    var breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n    if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n    var breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    var breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    var wasMultiRow = $881af1db6e44c2b5$var$isGridEnabled(swiper, params);\n    var isMultiRow = $881af1db6e44c2b5$var$isGridEnabled(swiper, breakpointParams);\n    var wasEnabled = params.enabled;\n    if (wasMultiRow && !isMultiRow) {\n        $el.removeClass(\"\".concat(params.containerModifierClass, \"grid \").concat(params.containerModifierClass, \"grid-column\"));\n        swiper.emitContainerClasses();\n    } else if (!wasMultiRow && isMultiRow) {\n        $el.addClass(\"\".concat(params.containerModifierClass, \"grid\"));\n        if (breakpointParams.grid.fill && breakpointParams.grid.fill === \"column\" || !breakpointParams.grid.fill && params.grid.fill === \"column\") $el.addClass(\"\".concat(params.containerModifierClass, \"grid-column\"));\n        swiper.emitContainerClasses();\n    } // Toggle navigation, pagination, scrollbar\n    [\n        \"navigation\",\n        \"pagination\",\n        \"scrollbar\"\n    ].forEach(function(prop) {\n        var wasModuleEnabled = params[prop] && params[prop].enabled;\n        var isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n        if (wasModuleEnabled && !isModuleEnabled) swiper[prop].disable();\n        if (!wasModuleEnabled && isModuleEnabled) swiper[prop].enable();\n    });\n    var directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    var needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n    if (directionChanged && initialized) swiper.changeDirection();\n    (0, $1338f5f0d60fe216$export$8b58be045bf06082)(swiper.params, breakpointParams);\n    var isEnabled = swiper.params.enabled;\n    Object.assign(swiper, {\n        allowTouchMove: swiper.params.allowTouchMove,\n        allowSlideNext: swiper.params.allowSlideNext,\n        allowSlidePrev: swiper.params.allowSlidePrev\n    });\n    if (wasEnabled && !isEnabled) swiper.disable();\n    else if (!wasEnabled && isEnabled) swiper.enable();\n    swiper.currentBreakpoint = breakpoint;\n    swiper.emit(\"_beforeBreakpoint\", breakpointParams);\n    if (needsReLoop && initialized) {\n        swiper.loopDestroy();\n        swiper.loopCreate();\n        swiper.updateSlides();\n        swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n    }\n    swiper.emit(\"breakpoint\", breakpointParams);\n}\n\n\n\nfunction $5617cb898a0f8fe0$export$2e2bcd8739ae039(breakpoints) {\n    var base = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"window\", containerEl = arguments.length > 2 ? arguments[2] : void 0;\n    if (!breakpoints || base === \"container\" && !containerEl) return undefined;\n    var breakpoint = false;\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var currentHeight = base === \"window\" ? window.innerHeight : containerEl.clientHeight;\n    var points = Object.keys(breakpoints).map(function(point) {\n        if (typeof point === \"string\" && point.indexOf(\"@\") === 0) {\n            var minRatio = parseFloat(point.substr(1));\n            var value = currentHeight * minRatio;\n            return {\n                value: value,\n                point: point\n            };\n        }\n        return {\n            value: point,\n            point: point\n        };\n    });\n    points.sort(function(a, b) {\n        return parseInt(a.value, 10) - parseInt(b.value, 10);\n    });\n    for(var i = 0; i < points.length; i += 1){\n        var _points_i = points[i], point = _points_i.point, value = _points_i.value;\n        if (base === \"window\") {\n            if (window.matchMedia(\"(min-width: \".concat(value, \"px)\")).matches) breakpoint = point;\n        } else if (value <= containerEl.clientWidth) breakpoint = point;\n    }\n    return breakpoint || \"max\";\n}\n\n\nvar $ff999bdc5ea561ff$export$2e2bcd8739ae039 = {\n    setBreakpoint: (0, $881af1db6e44c2b5$export$2e2bcd8739ae039),\n    getBreakpoint: (0, $5617cb898a0f8fe0$export$2e2bcd8739ae039)\n};\n\n\n\nfunction $ba79a0353521e453$var$prepareClasses(entries, prefix) {\n    var resultClasses = [];\n    entries.forEach(function(item) {\n        if (typeof item === \"object\") Object.keys(item).forEach(function(classNames) {\n            if (item[classNames]) resultClasses.push(prefix + classNames);\n        });\n        else if (typeof item === \"string\") resultClasses.push(prefix + item);\n    });\n    return resultClasses;\n}\nfunction $ba79a0353521e453$export$2e2bcd8739ae039() {\n    var _classNames;\n    var swiper = this;\n    var classNames = swiper.classNames, params = swiper.params, rtl = swiper.rtl, $el = swiper.$el, device = swiper.device, support = swiper.support; // prettier-ignore\n    var suffixes = $ba79a0353521e453$var$prepareClasses([\n        \"initialized\",\n        params.direction,\n        {\n            \"pointer-events\": !support.touch\n        },\n        {\n            \"free-mode\": swiper.params.freeMode && params.freeMode.enabled\n        },\n        {\n            \"autoheight\": params.autoHeight\n        },\n        {\n            \"rtl\": rtl\n        },\n        {\n            \"grid\": params.grid && params.grid.rows > 1\n        },\n        {\n            \"grid-column\": params.grid && params.grid.rows > 1 && params.grid.fill === \"column\"\n        },\n        {\n            \"android\": device.android\n        },\n        {\n            \"ios\": device.ios\n        },\n        {\n            \"css-mode\": params.cssMode\n        },\n        {\n            \"centered\": params.cssMode && params.centeredSlides\n        },\n        {\n            \"watch-progress\": params.watchSlidesProgress\n        }\n    ], params.containerModifierClass);\n    (_classNames = classNames).push.apply(_classNames, (0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(suffixes));\n    $el.addClass((0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(classNames).join(\" \"));\n    swiper.emitContainerClasses();\n}\n\n\nfunction $67bc7655f50fd7fe$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var $el = swiper.$el, classNames = swiper.classNames;\n    $el.removeClass(classNames.join(\" \"));\n    swiper.emitContainerClasses();\n}\n\n\nvar $73a2aa00ea89ae97$export$2e2bcd8739ae039 = {\n    addClasses: (0, $ba79a0353521e453$export$2e2bcd8739ae039),\n    removeClasses: (0, $67bc7655f50fd7fe$export$2e2bcd8739ae039)\n};\n\n\n\n\nfunction $f6093bfe5ae71b99$export$2e2bcd8739ae039(imageEl, src, srcset, sizes, checkForComplete, callback) {\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    var image;\n    function onReady() {\n        if (callback) callback();\n    }\n    var isPicture = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(imageEl).parent(\"picture\")[0];\n    if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n        if (src) {\n            image = new window.Image();\n            image.onload = onReady;\n            image.onerror = onReady;\n            if (sizes) image.sizes = sizes;\n            if (srcset) image.srcset = srcset;\n            if (src) image.src = src;\n        } else onReady();\n    } else // image already loaded...\n    onReady();\n}\n\n\nfunction $e57e28a5b381e75d$export$2e2bcd8739ae039() {\n    var swiper = this;\n    swiper.imagesToLoad = swiper.$el.find(\"img\");\n    function onReady() {\n        if (typeof swiper === \"undefined\" || swiper === null || !swiper || swiper.destroyed) return;\n        if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n        if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n            if (swiper.params.updateOnImagesReady) swiper.update();\n            swiper.emit(\"imagesReady\");\n        }\n    }\n    for(var i = 0; i < swiper.imagesToLoad.length; i += 1){\n        var imageEl = swiper.imagesToLoad[i];\n        swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute(\"src\"), imageEl.srcset || imageEl.getAttribute(\"srcset\"), imageEl.sizes || imageEl.getAttribute(\"sizes\"), true, onReady);\n    }\n}\n\n\nvar $472ed07d5829f35b$export$2e2bcd8739ae039 = {\n    loadImage: (0, $f6093bfe5ae71b99$export$2e2bcd8739ae039),\n    preloadImages: (0, $e57e28a5b381e75d$export$2e2bcd8739ae039)\n};\n\n\nfunction $c71e4cd26750bb38$var$checkOverflow() {\n    var swiper = this;\n    var wasLocked = swiper.isLocked, params = swiper.params;\n    var slidesOffsetBefore = params.slidesOffsetBefore;\n    if (slidesOffsetBefore) {\n        var lastSlideIndex = swiper.slides.length - 1;\n        var lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n        swiper.isLocked = swiper.size > lastSlideRightEdge;\n    } else swiper.isLocked = swiper.snapGrid.length === 1;\n    if (params.allowSlideNext === true) swiper.allowSlideNext = !swiper.isLocked;\n    if (params.allowSlidePrev === true) swiper.allowSlidePrev = !swiper.isLocked;\n    if (wasLocked && wasLocked !== swiper.isLocked) swiper.isEnd = false;\n    if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? \"lock\" : \"unlock\");\n}\nvar $c71e4cd26750bb38$export$2e2bcd8739ae039 = {\n    checkOverflow: $c71e4cd26750bb38$var$checkOverflow\n};\n\n\nvar $69cbdaf801d551aa$export$2e2bcd8739ae039 = {\n    init: true,\n    direction: \"horizontal\",\n    touchEventsTarget: \"wrapper\",\n    initialSlide: 0,\n    speed: 300,\n    cssMode: false,\n    updateOnWindowResize: true,\n    resizeObserver: true,\n    nested: false,\n    createElements: false,\n    enabled: true,\n    focusableElements: \"input, select, option, textarea, button, video, label\",\n    // Overrides\n    width: null,\n    height: null,\n    //\n    preventInteractionOnTransition: false,\n    // ssr\n    userAgent: null,\n    url: null,\n    // To support iOS's swipe-to-go-back gesture (when being used in-app).\n    edgeSwipeDetection: false,\n    edgeSwipeThreshold: 20,\n    // Autoheight\n    autoHeight: false,\n    // Set wrapper width\n    setWrapperSize: false,\n    // Virtual Translate\n    virtualTranslate: false,\n    // Effects\n    effect: \"slide\",\n    // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n    // Breakpoints\n    breakpoints: undefined,\n    breakpointsBase: \"window\",\n    // Slides grid\n    spaceBetween: 0,\n    slidesPerView: 1,\n    slidesPerGroup: 1,\n    slidesPerGroupSkip: 0,\n    slidesPerGroupAuto: false,\n    centeredSlides: false,\n    centeredSlidesBounds: false,\n    slidesOffsetBefore: 0,\n    // in px\n    slidesOffsetAfter: 0,\n    // in px\n    normalizeSlideIndex: true,\n    centerInsufficientSlides: false,\n    // Disable swiper and hide navigation when container not overflow\n    watchOverflow: true,\n    // Round length\n    roundLengths: false,\n    // Touches\n    touchRatio: 1,\n    touchAngle: 45,\n    simulateTouch: true,\n    shortSwipes: true,\n    longSwipes: true,\n    longSwipesRatio: 0.5,\n    longSwipesMs: 300,\n    followFinger: true,\n    allowTouchMove: true,\n    threshold: 0,\n    touchMoveStopPropagation: false,\n    touchStartPreventDefault: true,\n    touchStartForcePreventDefault: false,\n    touchReleaseOnEdges: false,\n    // Unique Navigation Elements\n    uniqueNavElements: true,\n    // Resistance\n    resistance: true,\n    resistanceRatio: 0.85,\n    // Progress\n    watchSlidesProgress: false,\n    // Cursor\n    grabCursor: false,\n    // Clicks\n    preventClicks: true,\n    preventClicksPropagation: true,\n    slideToClickedSlide: false,\n    // Images\n    preloadImages: true,\n    updateOnImagesReady: true,\n    // loop\n    loop: false,\n    loopAdditionalSlides: 0,\n    loopedSlides: null,\n    loopedSlidesLimit: true,\n    loopFillGroupWithBlank: false,\n    loopPreventsSlide: true,\n    // rewind\n    rewind: false,\n    // Swiping/no swiping\n    allowSlidePrev: true,\n    allowSlideNext: true,\n    swipeHandler: null,\n    // '.swipe-handler',\n    noSwiping: true,\n    noSwipingClass: \"swiper-no-swiping\",\n    noSwipingSelector: null,\n    // Passive Listeners\n    passiveListeners: true,\n    maxBackfaceHiddenSlides: 10,\n    // NS\n    containerModifierClass: \"swiper-\",\n    // NEW\n    slideClass: \"swiper-slide\",\n    slideBlankClass: \"swiper-slide-invisible-blank\",\n    slideActiveClass: \"swiper-slide-active\",\n    slideDuplicateActiveClass: \"swiper-slide-duplicate-active\",\n    slideVisibleClass: \"swiper-slide-visible\",\n    slideDuplicateClass: \"swiper-slide-duplicate\",\n    slideNextClass: \"swiper-slide-next\",\n    slideDuplicateNextClass: \"swiper-slide-duplicate-next\",\n    slidePrevClass: \"swiper-slide-prev\",\n    slideDuplicatePrevClass: \"swiper-slide-duplicate-prev\",\n    wrapperClass: \"swiper-wrapper\",\n    // Callbacks\n    runCallbacksOnInit: true,\n    // Internals\n    _emitClasses: false\n};\n\n\n\nfunction $4902d140bb7ee8d5$export$2e2bcd8739ae039(params, allModulesParams) {\n    return function extendParams() {\n        var obj = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};\n        var moduleParamName = Object.keys(obj)[0];\n        var moduleParams = obj[moduleParamName];\n        if (typeof moduleParams !== \"object\" || moduleParams === null) {\n            (0, $1338f5f0d60fe216$export$8b58be045bf06082)(allModulesParams, obj);\n            return;\n        }\n        if ([\n            \"navigation\",\n            \"pagination\",\n            \"scrollbar\"\n        ].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) params[moduleParamName] = {\n            auto: true\n        };\n        if (!(moduleParamName in params && \"enabled\" in moduleParams)) {\n            (0, $1338f5f0d60fe216$export$8b58be045bf06082)(allModulesParams, obj);\n            return;\n        }\n        if (params[moduleParamName] === true) params[moduleParamName] = {\n            enabled: true\n        };\n        if (typeof params[moduleParamName] === \"object\" && !(\"enabled\" in params[moduleParamName])) params[moduleParamName].enabled = true;\n        if (!params[moduleParamName]) params[moduleParamName] = {\n            enabled: false\n        };\n        (0, $1338f5f0d60fe216$export$8b58be045bf06082)(allModulesParams, obj);\n    };\n}\n\n\nvar $1c280aeb2839a22d$var$prototypes = {\n    eventsEmitter: (0, $26f00b4681ced12e$export$2e2bcd8739ae039),\n    update: (0, $2effa18fdcd4ebca$export$2e2bcd8739ae039),\n    translate: (0, $ff3f3346f9416381$export$2e2bcd8739ae039),\n    transition: (0, $3bfe96c57afe6ca0$export$2e2bcd8739ae039),\n    slide: (0, $d7398976190fd90b$export$2e2bcd8739ae039),\n    loop: (0, $7ea6f47a36945eb6$export$2e2bcd8739ae039),\n    grabCursor: (0, $012177cdd3ce0659$export$2e2bcd8739ae039),\n    events: (0, $f9d4708c1dfbfc0b$export$2e2bcd8739ae039),\n    breakpoints: (0, $ff999bdc5ea561ff$export$2e2bcd8739ae039),\n    checkOverflow: (0, $c71e4cd26750bb38$export$2e2bcd8739ae039),\n    classes: (0, $73a2aa00ea89ae97$export$2e2bcd8739ae039),\n    images: (0, $472ed07d5829f35b$export$2e2bcd8739ae039)\n};\nvar $1c280aeb2839a22d$var$extendedDefaults = {};\nvar $1c280aeb2839a22d$var$Swiper = /*#__PURE__*/ function() {\n    \"use strict\";\n    function Swiper() {\n        for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n            args[_key] = arguments[_key];\n        }\n        var _swiper_modules;\n        (0, $e3055412a69a0bec$export$2996f80ef42b8419)(this, Swiper);\n        var el;\n        var params;\n        var ref;\n        if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === \"Object\") params = args[0];\n        else ref = (0, $b6c37a1b08cb752d$export$fdf2a89c76341bbf)(args, 2), el = ref[0], params = ref[1], ref;\n        if (!params) params = {};\n        params = (0, $1338f5f0d60fe216$export$8b58be045bf06082)({}, params);\n        if (el && !params.el) params.el = el;\n        if (params.el && (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(params.el).length > 1) {\n            var swipers = [];\n            (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(params.el).each(function(containerEl) {\n                var newParams = (0, $1338f5f0d60fe216$export$8b58be045bf06082)({}, params, {\n                    el: containerEl\n                });\n                swipers.push(new Swiper(newParams));\n            }); // eslint-disable-next-line no-constructor-return\n            return swipers;\n        } // Swiper Instance\n        var swiper = this;\n        swiper.__swiper__ = true;\n        swiper.support = (0, $f745992e8d1b1180$export$d61c7b85ff180578)();\n        swiper.device = (0, $33c7356d035118c5$export$30c823bc834d6ab4)({\n            userAgent: params.userAgent\n        });\n        swiper.browser = (0, $f7ea505fdac53fb2$export$89e15fc796a4a429)();\n        swiper.eventsListeners = {};\n        swiper.eventsAnyListeners = [];\n        swiper.modules = (0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(swiper.__modules__);\n        if (params.modules && Array.isArray(params.modules)) (_swiper_modules = swiper.modules).push.apply(_swiper_modules, (0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(params.modules));\n        var allModulesParams = {};\n        swiper.modules.forEach(function(mod) {\n            mod({\n                swiper: swiper,\n                extendParams: (0, $4902d140bb7ee8d5$export$2e2bcd8739ae039)(params, allModulesParams),\n                on: swiper.on.bind(swiper),\n                once: swiper.once.bind(swiper),\n                off: swiper.off.bind(swiper),\n                emit: swiper.emit.bind(swiper)\n            });\n        }); // Extend defaults with modules params\n        var swiperParams = (0, $1338f5f0d60fe216$export$8b58be045bf06082)({}, (0, $69cbdaf801d551aa$export$2e2bcd8739ae039), allModulesParams); // Extend defaults with passed params\n        swiper.params = (0, $1338f5f0d60fe216$export$8b58be045bf06082)({}, swiperParams, $1c280aeb2839a22d$var$extendedDefaults, params);\n        swiper.originalParams = (0, $1338f5f0d60fe216$export$8b58be045bf06082)({}, swiper.params);\n        swiper.passedParams = (0, $1338f5f0d60fe216$export$8b58be045bf06082)({}, params); // add event listeners\n        if (swiper.params && swiper.params.on) Object.keys(swiper.params.on).forEach(function(eventName) {\n            swiper.on(eventName, swiper.params.on[eventName]);\n        });\n        if (swiper.params && swiper.params.onAny) swiper.onAny(swiper.params.onAny);\n         // Save Dom lib\n        swiper.$ = (0, $181e7e5b06640d28$export$2e2bcd8739ae039); // Extend Swiper\n        Object.assign(swiper, {\n            enabled: swiper.params.enabled,\n            el: el,\n            // Classes\n            classNames: [],\n            // Slides\n            slides: (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(),\n            slidesGrid: [],\n            snapGrid: [],\n            slidesSizesGrid: [],\n            // isDirection\n            isHorizontal: function() {\n                return swiper.params.direction === \"horizontal\";\n            },\n            isVertical: function() {\n                return swiper.params.direction === \"vertical\";\n            },\n            // Indexes\n            activeIndex: 0,\n            realIndex: 0,\n            //\n            isBeginning: true,\n            isEnd: false,\n            // Props\n            translate: 0,\n            previousTranslate: 0,\n            progress: 0,\n            velocity: 0,\n            animating: false,\n            // Locks\n            allowSlideNext: swiper.params.allowSlideNext,\n            allowSlidePrev: swiper.params.allowSlidePrev,\n            // Touch Events\n            touchEvents: function touchEvents() {\n                var touch = [\n                    \"touchstart\",\n                    \"touchmove\",\n                    \"touchend\",\n                    \"touchcancel\"\n                ];\n                var desktop = [\n                    \"pointerdown\",\n                    \"pointermove\",\n                    \"pointerup\"\n                ];\n                swiper.touchEventsTouch = {\n                    start: touch[0],\n                    move: touch[1],\n                    end: touch[2],\n                    cancel: touch[3]\n                };\n                swiper.touchEventsDesktop = {\n                    start: desktop[0],\n                    move: desktop[1],\n                    end: desktop[2]\n                };\n                return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n            }(),\n            touchEventsData: {\n                isTouched: undefined,\n                isMoved: undefined,\n                allowTouchCallbacks: undefined,\n                touchStartTime: undefined,\n                isScrolling: undefined,\n                currentTranslate: undefined,\n                startTranslate: undefined,\n                allowThresholdMove: undefined,\n                // Form elements to match\n                focusableElements: swiper.params.focusableElements,\n                // Last click time\n                lastClickTime: (0, $1338f5f0d60fe216$export$461939dd4422153)(),\n                clickTimeout: undefined,\n                // Velocities\n                velocities: [],\n                allowMomentumBounce: undefined,\n                isTouchEvent: undefined,\n                startMoving: undefined\n            },\n            // Clicks\n            allowClick: true,\n            // Touches\n            allowTouchMove: swiper.params.allowTouchMove,\n            touches: {\n                startX: 0,\n                startY: 0,\n                currentX: 0,\n                currentY: 0,\n                diff: 0\n            },\n            // Images\n            imagesToLoad: [],\n            imagesLoaded: 0\n        });\n        swiper.emit(\"_swiper\"); // Init\n        if (swiper.params.init) swiper.init();\n         // Return app instance\n        // eslint-disable-next-line no-constructor-return\n        return swiper;\n    }\n    (0, $89767be5ae191d10$export$d60067ff2358eee8)(Swiper, [\n        {\n            key: \"enable\",\n            value: function enable() {\n                var swiper = this;\n                if (swiper.enabled) return;\n                swiper.enabled = true;\n                if (swiper.params.grabCursor) swiper.setGrabCursor();\n                swiper.emit(\"enable\");\n            }\n        },\n        {\n            key: \"disable\",\n            value: function disable() {\n                var swiper = this;\n                if (!swiper.enabled) return;\n                swiper.enabled = false;\n                if (swiper.params.grabCursor) swiper.unsetGrabCursor();\n                swiper.emit(\"disable\");\n            }\n        },\n        {\n            key: \"setProgress\",\n            value: function setProgress(progress, speed) {\n                var swiper = this;\n                progress = Math.min(Math.max(progress, 0), 1);\n                var min = swiper.minTranslate();\n                var max = swiper.maxTranslate();\n                var current = (max - min) * progress + min;\n                swiper.translateTo(current, typeof speed === \"undefined\" ? 0 : speed);\n                swiper.updateActiveIndex();\n                swiper.updateSlidesClasses();\n            }\n        },\n        {\n            key: \"emitContainerClasses\",\n            value: function emitContainerClasses() {\n                var swiper = this;\n                if (!swiper.params._emitClasses || !swiper.el) return;\n                var cls = swiper.el.className.split(\" \").filter(function(className) {\n                    return className.indexOf(\"swiper\") === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n                });\n                swiper.emit(\"_containerClasses\", cls.join(\" \"));\n            }\n        },\n        {\n            key: \"getSlideClasses\",\n            value: function getSlideClasses(slideEl) {\n                var swiper = this;\n                if (swiper.destroyed) return \"\";\n                return slideEl.className.split(\" \").filter(function(className) {\n                    return className.indexOf(\"swiper-slide\") === 0 || className.indexOf(swiper.params.slideClass) === 0;\n                }).join(\" \");\n            }\n        },\n        {\n            key: \"emitSlidesClasses\",\n            value: function emitSlidesClasses() {\n                var swiper = this;\n                if (!swiper.params._emitClasses || !swiper.el) return;\n                var updates = [];\n                swiper.slides.each(function(slideEl) {\n                    var classNames = swiper.getSlideClasses(slideEl);\n                    updates.push({\n                        slideEl: slideEl,\n                        classNames: classNames\n                    });\n                    swiper.emit(\"_slideClass\", slideEl, classNames);\n                });\n                swiper.emit(\"_slideClasses\", updates);\n            }\n        },\n        {\n            key: \"slidesPerViewDynamic\",\n            value: function slidesPerViewDynamic() {\n                var view = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"current\", exact = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                var swiper = this;\n                var params = swiper.params, slides = swiper.slides, slidesGrid = swiper.slidesGrid, slidesSizesGrid = swiper.slidesSizesGrid, swiperSize = swiper.size, activeIndex = swiper.activeIndex;\n                var spv = 1;\n                if (params.centeredSlides) {\n                    var slideSize = slides[activeIndex].swiperSlideSize;\n                    var breakLoop;\n                    for(var i = activeIndex + 1; i < slides.length; i += 1)if (slides[i] && !breakLoop) {\n                        slideSize += slides[i].swiperSlideSize;\n                        spv += 1;\n                        if (slideSize > swiperSize) breakLoop = true;\n                    }\n                    for(var i1 = activeIndex - 1; i1 >= 0; i1 -= 1)if (slides[i1] && !breakLoop) {\n                        slideSize += slides[i1].swiperSlideSize;\n                        spv += 1;\n                        if (slideSize > swiperSize) breakLoop = true;\n                    }\n                } else {\n                    // eslint-disable-next-line\n                    if (view === \"current\") for(var i2 = activeIndex + 1; i2 < slides.length; i2 += 1){\n                        var slideInView = exact ? slidesGrid[i2] + slidesSizesGrid[i2] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i2] - slidesGrid[activeIndex] < swiperSize;\n                        if (slideInView) spv += 1;\n                    }\n                    else // previous\n                    for(var i3 = activeIndex - 1; i3 >= 0; i3 -= 1){\n                        var slideInView1 = slidesGrid[activeIndex] - slidesGrid[i3] < swiperSize;\n                        if (slideInView1) spv += 1;\n                    }\n                }\n                return spv;\n            }\n        },\n        {\n            key: \"update\",\n            value: function update() {\n                var swiper = this;\n                if (!swiper || swiper.destroyed) return;\n                var snapGrid = swiper.snapGrid, params = swiper.params; // Breakpoints\n                if (params.breakpoints) swiper.setBreakpoint();\n                swiper.updateSize();\n                swiper.updateSlides();\n                swiper.updateProgress();\n                swiper.updateSlidesClasses();\n                function setTranslate() {\n                    var translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n                    var newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n                    swiper.setTranslate(newTranslate);\n                    swiper.updateActiveIndex();\n                    swiper.updateSlidesClasses();\n                }\n                var translated;\n                if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n                    setTranslate();\n                    if (swiper.params.autoHeight) swiper.updateAutoHeight();\n                } else {\n                    if ((swiper.params.slidesPerView === \"auto\" || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n                    else translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n                    if (!translated) setTranslate();\n                }\n                if (params.watchOverflow && snapGrid !== swiper.snapGrid) swiper.checkOverflow();\n                swiper.emit(\"update\");\n            }\n        },\n        {\n            key: \"changeDirection\",\n            value: function changeDirection(newDirection) {\n                var needUpdate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n                var swiper = this;\n                var currentDirection = swiper.params.direction;\n                if (!newDirection) // eslint-disable-next-line\n                newDirection = currentDirection === \"horizontal\" ? \"vertical\" : \"horizontal\";\n                if (newDirection === currentDirection || newDirection !== \"horizontal\" && newDirection !== \"vertical\") return swiper;\n                swiper.$el.removeClass(\"\".concat(swiper.params.containerModifierClass).concat(currentDirection)).addClass(\"\".concat(swiper.params.containerModifierClass).concat(newDirection));\n                swiper.emitContainerClasses();\n                swiper.params.direction = newDirection;\n                swiper.slides.each(function(slideEl) {\n                    if (newDirection === \"vertical\") slideEl.style.width = \"\";\n                    else slideEl.style.height = \"\";\n                });\n                swiper.emit(\"changeDirection\");\n                if (needUpdate) swiper.update();\n                return swiper;\n            }\n        },\n        {\n            key: \"changeLanguageDirection\",\n            value: function changeLanguageDirection(direction) {\n                var swiper = this;\n                if (swiper.rtl && direction === \"rtl\" || !swiper.rtl && direction === \"ltr\") return;\n                swiper.rtl = direction === \"rtl\";\n                swiper.rtlTranslate = swiper.params.direction === \"horizontal\" && swiper.rtl;\n                if (swiper.rtl) {\n                    swiper.$el.addClass(\"\".concat(swiper.params.containerModifierClass, \"rtl\"));\n                    swiper.el.dir = \"rtl\";\n                } else {\n                    swiper.$el.removeClass(\"\".concat(swiper.params.containerModifierClass, \"rtl\"));\n                    swiper.el.dir = \"ltr\";\n                }\n                swiper.update();\n            }\n        },\n        {\n            key: \"mount\",\n            value: function mount(el) {\n                var swiper = this;\n                if (swiper.mounted) return true; // Find el\n                var $el = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(el || swiper.params.el);\n                el = $el[0];\n                if (!el) return false;\n                el.swiper = swiper;\n                var getWrapperSelector = function() {\n                    return \".\".concat((swiper.params.wrapperClass || \"\").trim().split(\" \").join(\".\"));\n                };\n                var getWrapper = function() {\n                    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n                        var res = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n                        res.children = function(options) {\n                            return $el.children(options);\n                        };\n                        return res;\n                    }\n                    if (!$el.children) return (0, $181e7e5b06640d28$export$2e2bcd8739ae039)($el).children(getWrapperSelector());\n                    return $el.children(getWrapperSelector());\n                }; // Find Wrapper\n                var $wrapperEl = getWrapper();\n                if ($wrapperEl.length === 0 && swiper.params.createElements) {\n                    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n                    var wrapper = document.createElement(\"div\");\n                    $wrapperEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(wrapper);\n                    wrapper.className = swiper.params.wrapperClass;\n                    $el.append(wrapper);\n                    $el.children(\".\".concat(swiper.params.slideClass)).each(function(slideEl) {\n                        $wrapperEl.append(slideEl);\n                    });\n                }\n                Object.assign(swiper, {\n                    $el: $el,\n                    el: el,\n                    $wrapperEl: $wrapperEl,\n                    wrapperEl: $wrapperEl[0],\n                    mounted: true,\n                    // RTL\n                    rtl: el.dir.toLowerCase() === \"rtl\" || $el.css(\"direction\") === \"rtl\",\n                    rtlTranslate: swiper.params.direction === \"horizontal\" && (el.dir.toLowerCase() === \"rtl\" || $el.css(\"direction\") === \"rtl\"),\n                    wrongRTL: $wrapperEl.css(\"display\") === \"-webkit-box\"\n                });\n                return true;\n            }\n        },\n        {\n            key: \"init\",\n            value: function init(el) {\n                var swiper = this;\n                if (swiper.initialized) return swiper;\n                var mounted = swiper.mount(el);\n                if (mounted === false) return swiper;\n                swiper.emit(\"beforeInit\"); // Set breakpoint\n                if (swiper.params.breakpoints) swiper.setBreakpoint();\n                 // Add Classes\n                swiper.addClasses(); // Create loop\n                if (swiper.params.loop) swiper.loopCreate();\n                 // Update size\n                swiper.updateSize(); // Update slides\n                swiper.updateSlides();\n                if (swiper.params.watchOverflow) swiper.checkOverflow();\n                 // Set Grab Cursor\n                if (swiper.params.grabCursor && swiper.enabled) swiper.setGrabCursor();\n                if (swiper.params.preloadImages) swiper.preloadImages();\n                 // Slide To Initial Slide\n                if (swiper.params.loop) swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n                else swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n                 // Attach events\n                swiper.attachEvents(); // Init Flag\n                swiper.initialized = true; // Emit\n                swiper.emit(\"init\");\n                swiper.emit(\"afterInit\");\n                return swiper;\n            }\n        },\n        {\n            key: \"destroy\",\n            value: function destroy() {\n                var deleteInstance = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : true, cleanStyles = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n                var swiper = this;\n                var params = swiper.params, $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides;\n                if (typeof swiper.params === \"undefined\" || swiper.destroyed) return null;\n                swiper.emit(\"beforeDestroy\"); // Init Flag\n                swiper.initialized = false; // Detach events\n                swiper.detachEvents(); // Destroy loop\n                if (params.loop) swiper.loopDestroy();\n                 // Cleanup styles\n                if (cleanStyles) {\n                    swiper.removeClasses();\n                    $el.removeAttr(\"style\");\n                    $wrapperEl.removeAttr(\"style\");\n                    if (slides && slides.length) slides.removeClass([\n                        params.slideVisibleClass,\n                        params.slideActiveClass,\n                        params.slideNextClass,\n                        params.slidePrevClass\n                    ].join(\" \")).removeAttr(\"style\").removeAttr(\"data-swiper-slide-index\");\n                }\n                swiper.emit(\"destroy\"); // Detach emitter events\n                Object.keys(swiper.eventsListeners).forEach(function(eventName) {\n                    swiper.off(eventName);\n                });\n                if (deleteInstance !== false) {\n                    swiper.$el[0].swiper = null;\n                    (0, $1338f5f0d60fe216$export$8694e5c03a4df8e6)(swiper);\n                }\n                swiper.destroyed = true;\n                return null;\n            }\n        }\n    ], [\n        {\n            key: \"extendDefaults\",\n            value: function extendDefaults(newDefaults) {\n                (0, $1338f5f0d60fe216$export$8b58be045bf06082)($1c280aeb2839a22d$var$extendedDefaults, newDefaults);\n            }\n        },\n        {\n            key: \"extendedDefaults\",\n            get: function get() {\n                return $1c280aeb2839a22d$var$extendedDefaults;\n            }\n        },\n        {\n            key: \"defaults\",\n            get: function get() {\n                return 0, $69cbdaf801d551aa$export$2e2bcd8739ae039;\n            }\n        },\n        {\n            key: \"installModule\",\n            value: function installModule(mod) {\n                if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n                var modules = Swiper.prototype.__modules__;\n                if (typeof mod === \"function\" && modules.indexOf(mod) < 0) modules.push(mod);\n            }\n        },\n        {\n            key: \"use\",\n            value: function use(module) {\n                if (Array.isArray(module)) {\n                    module.forEach(function(m) {\n                        return Swiper.installModule(m);\n                    });\n                    return Swiper;\n                }\n                Swiper.installModule(module);\n                return Swiper;\n            }\n        }\n    ]);\n    return Swiper;\n}();\nObject.keys($1c280aeb2839a22d$var$prototypes).forEach(function(prototypeGroup) {\n    Object.keys($1c280aeb2839a22d$var$prototypes[prototypeGroup]).forEach(function(protoMethod) {\n        $1c280aeb2839a22d$var$Swiper.prototype[protoMethod] = $1c280aeb2839a22d$var$prototypes[prototypeGroup][protoMethod];\n    });\n});\n$1c280aeb2839a22d$var$Swiper.use([\n    (0, $caa86f81f75e9730$export$2e2bcd8739ae039),\n    (0, $4393da3adccaa7db$export$2e2bcd8739ae039)\n]);\nvar $1c280aeb2839a22d$export$2e2bcd8739ae039 = $1c280aeb2839a22d$var$Swiper;\n\n\n\n\nfunction $63b697fb1df2e4b2$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    extendParams({\n        virtual: {\n            enabled: false,\n            slides: [],\n            cache: true,\n            renderSlide: null,\n            renderExternal: null,\n            renderExternalUpdate: true,\n            addSlidesBefore: 0,\n            addSlidesAfter: 0\n        }\n    });\n    var cssModeTimeout;\n    swiper.virtual = {\n        cache: {},\n        from: undefined,\n        to: undefined,\n        slides: [],\n        offset: 0,\n        slidesGrid: []\n    };\n    function renderSlide(slide, index) {\n        var params = swiper.params.virtual;\n        if (params.cache && swiper.virtual.cache[index]) return swiper.virtual.cache[index];\n        var $slideEl = params.renderSlide ? (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(params.renderSlide.call(swiper, slide, index)) : (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<div class=\"'.concat(swiper.params.slideClass, '\" data-swiper-slide-index=\"').concat(index, '\">').concat(slide, \"</div>\"));\n        if (!$slideEl.attr(\"data-swiper-slide-index\")) $slideEl.attr(\"data-swiper-slide-index\", index);\n        if (params.cache) swiper.virtual.cache[index] = $slideEl;\n        return $slideEl;\n    }\n    function update(force) {\n        var _swiper_params = swiper.params, slidesPerView = _swiper_params.slidesPerView, slidesPerGroup = _swiper_params.slidesPerGroup, centeredSlides = _swiper_params.centeredSlides;\n        var _swiper_params_virtual = swiper.params.virtual, addSlidesBefore = _swiper_params_virtual.addSlidesBefore, addSlidesAfter = _swiper_params_virtual.addSlidesAfter;\n        var _swiper_virtual = swiper.virtual, previousFrom = _swiper_virtual.from, previousTo = _swiper_virtual.to, slides = _swiper_virtual.slides, previousSlidesGrid = _swiper_virtual.slidesGrid, previousOffset = _swiper_virtual.offset;\n        if (!swiper.params.cssMode) swiper.updateActiveIndex();\n        var activeIndex = swiper.activeIndex || 0;\n        var offsetProp;\n        if (swiper.rtlTranslate) offsetProp = \"right\";\n        else offsetProp = swiper.isHorizontal() ? \"left\" : \"top\";\n        var slidesAfter;\n        var slidesBefore;\n        if (centeredSlides) {\n            slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n            slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n        } else {\n            slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n            slidesBefore = slidesPerGroup + addSlidesBefore;\n        }\n        var from = Math.max((activeIndex || 0) - slidesBefore, 0);\n        var to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n        var offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n        Object.assign(swiper.virtual, {\n            from: from,\n            to: to,\n            offset: offset,\n            slidesGrid: swiper.slidesGrid\n        });\n        function onRendered() {\n            swiper.updateSlides();\n            swiper.updateProgress();\n            swiper.updateSlidesClasses();\n            if (swiper.lazy && swiper.params.lazy.enabled) swiper.lazy.load();\n            emit(\"virtualUpdate\");\n        }\n        if (previousFrom === from && previousTo === to && !force) {\n            if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) swiper.slides.css(offsetProp, \"\".concat(offset, \"px\"));\n            swiper.updateProgress();\n            emit(\"virtualUpdate\");\n            return;\n        }\n        if (swiper.params.virtual.renderExternal) {\n            swiper.params.virtual.renderExternal.call(swiper, {\n                offset: offset,\n                from: from,\n                to: to,\n                slides: function getSlides() {\n                    var slidesToRender = [];\n                    for(var i = from; i <= to; i += 1)slidesToRender.push(slides[i]);\n                    return slidesToRender;\n                }()\n            });\n            if (swiper.params.virtual.renderExternalUpdate) onRendered();\n            else emit(\"virtualUpdate\");\n            return;\n        }\n        var prependIndexes = [];\n        var appendIndexes = [];\n        if (force) swiper.$wrapperEl.find(\".\".concat(swiper.params.slideClass)).remove();\n        else {\n            for(var i = previousFrom; i <= previousTo; i += 1)if (i < from || i > to) swiper.$wrapperEl.find(\".\".concat(swiper.params.slideClass, '[data-swiper-slide-index=\"').concat(i, '\"]')).remove();\n        }\n        for(var i1 = 0; i1 < slides.length; i1 += 1)if (i1 >= from && i1 <= to) {\n            if (typeof previousTo === \"undefined\" || force) appendIndexes.push(i1);\n            else {\n                if (i1 > previousTo) appendIndexes.push(i1);\n                if (i1 < previousFrom) prependIndexes.push(i1);\n            }\n        }\n        appendIndexes.forEach(function(index) {\n            swiper.$wrapperEl.append(renderSlide(slides[index], index));\n        });\n        prependIndexes.sort(function(a, b) {\n            return b - a;\n        }).forEach(function(index) {\n            swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n        });\n        swiper.$wrapperEl.children(\".swiper-slide\").css(offsetProp, \"\".concat(offset, \"px\"));\n        onRendered();\n    }\n    function appendSlide(slides) {\n        if (typeof slides === \"object\" && \"length\" in slides) {\n            for(var i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.push(slides[i]);\n        } else swiper.virtual.slides.push(slides);\n        update(true);\n    }\n    function prependSlide(slides) {\n        var activeIndex = swiper.activeIndex;\n        var newActiveIndex = activeIndex + 1;\n        var numberOfNewSlides = 1;\n        if (Array.isArray(slides)) {\n            for(var i = 0; i < slides.length; i += 1)if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n            newActiveIndex = activeIndex + slides.length;\n            numberOfNewSlides = slides.length;\n        } else swiper.virtual.slides.unshift(slides);\n        if (swiper.params.virtual.cache) {\n            var cache = swiper.virtual.cache;\n            var newCache = {};\n            Object.keys(cache).forEach(function(cachedIndex) {\n                var $cachedEl = cache[cachedIndex];\n                var cachedElIndex = $cachedEl.attr(\"data-swiper-slide-index\");\n                if (cachedElIndex) $cachedEl.attr(\"data-swiper-slide-index\", parseInt(cachedElIndex, 10) + numberOfNewSlides);\n                newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n            });\n            swiper.virtual.cache = newCache;\n        }\n        update(true);\n        swiper.slideTo(newActiveIndex, 0);\n    }\n    function removeSlide(slidesIndexes) {\n        if (typeof slidesIndexes === \"undefined\" || slidesIndexes === null) return;\n        var activeIndex = swiper.activeIndex;\n        if (Array.isArray(slidesIndexes)) for(var i = slidesIndexes.length - 1; i >= 0; i -= 1){\n            swiper.virtual.slides.splice(slidesIndexes[i], 1);\n            if (swiper.params.virtual.cache) delete swiper.virtual.cache[slidesIndexes[i]];\n            if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n            activeIndex = Math.max(activeIndex, 0);\n        }\n        else {\n            swiper.virtual.slides.splice(slidesIndexes, 1);\n            if (swiper.params.virtual.cache) delete swiper.virtual.cache[slidesIndexes];\n            if (slidesIndexes < activeIndex) activeIndex -= 1;\n            activeIndex = Math.max(activeIndex, 0);\n        }\n        update(true);\n        swiper.slideTo(activeIndex, 0);\n    }\n    function removeAllSlides() {\n        swiper.virtual.slides = [];\n        if (swiper.params.virtual.cache) swiper.virtual.cache = {};\n        update(true);\n        swiper.slideTo(0, 0);\n    }\n    on(\"beforeInit\", function() {\n        if (!swiper.params.virtual.enabled) return;\n        swiper.virtual.slides = swiper.params.virtual.slides;\n        swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"virtual\"));\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n        if (!swiper.params.initialSlide) update();\n    });\n    on(\"setTranslate\", function() {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode && !swiper._immediateVirtual) {\n            clearTimeout(cssModeTimeout);\n            cssModeTimeout = setTimeout(function() {\n                update();\n            }, 100);\n        } else update();\n    });\n    on(\"init update resize\", function() {\n        if (!swiper.params.virtual.enabled) return;\n        if (swiper.params.cssMode) (0, $1338f5f0d60fe216$export$a607267f322101fd)(swiper.wrapperEl, \"--swiper-virtual-size\", \"\".concat(swiper.virtualSize, \"px\"));\n    });\n    Object.assign(swiper.virtual, {\n        appendSlide: appendSlide,\n        prependSlide: prependSlide,\n        removeSlide: removeSlide,\n        removeAllSlides: removeAllSlides,\n        update: update\n    });\n}\n\n\n/* eslint-disable consistent-return */ \n\nfunction $22fddb9675a62d77$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    swiper.keyboard = {\n        enabled: false\n    };\n    extendParams({\n        keyboard: {\n            enabled: false,\n            onlyInViewport: true,\n            pageUpDown: true\n        }\n    });\n    function handle(event) {\n        if (!swiper.enabled) return;\n        var rtl = swiper.rtlTranslate;\n        var e = event;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        var kc = e.keyCode || e.charCode;\n        var pageUpDown = swiper.params.keyboard.pageUpDown;\n        var isPageUp = pageUpDown && kc === 33;\n        var isPageDown = pageUpDown && kc === 34;\n        var isArrowLeft = kc === 37;\n        var isArrowRight = kc === 39;\n        var isArrowUp = kc === 38;\n        var isArrowDown = kc === 40; // Directions locks\n        if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) return false;\n        if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) return false;\n        if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) return undefined;\n        if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === \"input\" || document.activeElement.nodeName.toLowerCase() === \"textarea\")) return undefined;\n        if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n            var inView = false; // Check that swiper should be inside of visible area of window\n            if (swiper.$el.parents(\".\".concat(swiper.params.slideClass)).length > 0 && swiper.$el.parents(\".\".concat(swiper.params.slideActiveClass)).length === 0) return undefined;\n            var $el = swiper.$el;\n            var swiperWidth = $el[0].clientWidth;\n            var swiperHeight = $el[0].clientHeight;\n            var windowWidth = window.innerWidth;\n            var windowHeight = window.innerHeight;\n            var swiperOffset = swiper.$el.offset();\n            if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n            var swiperCoord = [\n                [\n                    swiperOffset.left,\n                    swiperOffset.top\n                ],\n                [\n                    swiperOffset.left + swiperWidth,\n                    swiperOffset.top\n                ],\n                [\n                    swiperOffset.left,\n                    swiperOffset.top + swiperHeight\n                ],\n                [\n                    swiperOffset.left + swiperWidth,\n                    swiperOffset.top + swiperHeight\n                ]\n            ];\n            for(var i = 0; i < swiperCoord.length; i += 1){\n                var point = swiperCoord[i];\n                if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n                    if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n                    inView = true;\n                }\n            }\n            if (!inView) return undefined;\n        }\n        if (swiper.isHorizontal()) {\n            if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n            }\n            if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n            if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n        } else {\n            if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n                if (e.preventDefault) e.preventDefault();\n                else e.returnValue = false;\n            }\n            if (isPageDown || isArrowDown) swiper.slideNext();\n            if (isPageUp || isArrowUp) swiper.slidePrev();\n        }\n        emit(\"keyPress\", kc);\n        return undefined;\n    }\n    function enable() {\n        if (swiper.keyboard.enabled) return;\n        (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(document).on(\"keydown\", handle);\n        swiper.keyboard.enabled = true;\n    }\n    function disable() {\n        if (!swiper.keyboard.enabled) return;\n        (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(document).off(\"keydown\", handle);\n        swiper.keyboard.enabled = false;\n    }\n    on(\"init\", function() {\n        if (swiper.params.keyboard.enabled) enable();\n    });\n    on(\"destroy\", function() {\n        if (swiper.keyboard.enabled) disable();\n    });\n    Object.assign(swiper.keyboard, {\n        enable: enable,\n        disable: disable\n    });\n}\n\n\n/* eslint-disable consistent-return */ \n\n\nfunction $5dd50aafd6ca9eb8$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    extendParams({\n        mousewheel: {\n            enabled: false,\n            releaseOnEdges: false,\n            invert: false,\n            forceToAxis: false,\n            sensitivity: 1,\n            eventsTarget: \"container\",\n            thresholdDelta: null,\n            thresholdTime: null\n        }\n    });\n    swiper.mousewheel = {\n        enabled: false\n    };\n    var timeout;\n    var lastScrollTime = (0, $1338f5f0d60fe216$export$461939dd4422153)();\n    var lastEventBeforeSnap;\n    var recentWheelEvents = [];\n    function normalize(e) {\n        // Reasonable defaults\n        var PIXEL_STEP = 10;\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        var sX = 0;\n        var sY = 0; // spinX, spinY\n        var pX = 0;\n        var pY = 0; // pixelX, pixelY\n        // Legacy\n        if (\"detail\" in e) sY = e.detail;\n        if (\"wheelDelta\" in e) sY = -e.wheelDelta / 120;\n        if (\"wheelDeltaY\" in e) sY = -e.wheelDeltaY / 120;\n        if (\"wheelDeltaX\" in e) sX = -e.wheelDeltaX / 120;\n         // side scrolling on FF with DOMMouseScroll\n        if (\"axis\" in e && e.axis === e.HORIZONTAL_AXIS) {\n            sX = sY;\n            sY = 0;\n        }\n        pX = sX * PIXEL_STEP;\n        pY = sY * PIXEL_STEP;\n        if (\"deltaY\" in e) pY = e.deltaY;\n        if (\"deltaX\" in e) pX = e.deltaX;\n        if (e.shiftKey && !pX) {\n            // if user scrolls with shift he wants horizontal scroll\n            pX = pY;\n            pY = 0;\n        }\n        if ((pX || pY) && e.deltaMode) {\n            if (e.deltaMode === 1) {\n                // delta in LINE units\n                pX *= LINE_HEIGHT;\n                pY *= LINE_HEIGHT;\n            } else {\n                // delta in PAGE units\n                pX *= PAGE_HEIGHT;\n                pY *= PAGE_HEIGHT;\n            }\n        } // Fall-back if spin cannot be determined\n        if (pX && !sX) sX = pX < 1 ? -1 : 1;\n        if (pY && !sY) sY = pY < 1 ? -1 : 1;\n        return {\n            spinX: sX,\n            spinY: sY,\n            pixelX: pX,\n            pixelY: pY\n        };\n    }\n    function handleMouseEnter() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = true;\n    }\n    function handleMouseLeave() {\n        if (!swiper.enabled) return;\n        swiper.mouseEntered = false;\n    }\n    function animateSlider(newEvent) {\n        if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) // Prevent if delta of wheel scroll delta is below configured threshold\n        return false;\n        if (swiper.params.mousewheel.thresholdTime && (0, $1338f5f0d60fe216$export$461939dd4422153)() - lastScrollTime < swiper.params.mousewheel.thresholdTime) // Prevent if time between scrolls is below configured threshold\n        return false;\n         // If the movement is NOT big enough and\n        // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n        //   Don't go any further (avoid insignificant scroll movement).\n        if (newEvent.delta >= 6 && (0, $1338f5f0d60fe216$export$461939dd4422153)() - lastScrollTime < 60) // Return false as a default\n        return true;\n         // If user is scrolling towards the end:\n        //   If the slider hasn't hit the latest slide or\n        //   if the slider is a loop and\n        //   if the slider isn't moving right now:\n        //     Go to next slide and\n        //     emit a scroll event.\n        // Else (the user is scrolling towards the beginning) and\n        // if the slider hasn't hit the first slide or\n        // if the slider is a loop and\n        // if the slider isn't moving right now:\n        //   Go to prev slide and\n        //   emit a scroll event.\n        if (newEvent.direction < 0) {\n            if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n                swiper.slideNext();\n                emit(\"scroll\", newEvent.raw);\n            }\n        } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n            swiper.slidePrev();\n            emit(\"scroll\", newEvent.raw);\n        } // If you got here is because an animation has been triggered so store the current time\n        lastScrollTime = new window.Date().getTime(); // Return false as a default\n        return false;\n    }\n    function releaseScroll(newEvent) {\n        var params = swiper.params.mousewheel;\n        if (newEvent.direction < 0) {\n            if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges\n            return true;\n        } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) // Return true to animate scroll on edges\n        return true;\n        return false;\n    }\n    function handle(event1) {\n        var e = event1;\n        var disableParentSwiper = true;\n        if (!swiper.enabled) return;\n        var params = swiper.params.mousewheel;\n        if (swiper.params.cssMode) e.preventDefault();\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarget !== \"container\") target = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(swiper.params.mousewheel.eventsTarget);\n        if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n        if (e.originalEvent) e = e.originalEvent; // jquery fix\n        var delta = 0;\n        var rtlFactor = swiper.rtlTranslate ? -1 : 1;\n        var data = normalize(e);\n        if (params.forceToAxis) {\n            if (swiper.isHorizontal()) {\n                if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;\n                else return true;\n            } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;\n            else return true;\n        } else delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n        if (delta === 0) return true;\n        if (params.invert) delta = -delta; // Get the scroll positions\n        var positions = swiper.getTranslate() + delta * params.sensitivity;\n        if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n        if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n        //     the disableParentSwiper will be true.\n        // When loop is false:\n        //     if the scroll positions is not on edge,\n        //     then the disableParentSwiper will be true.\n        //     if the scroll on edge positions,\n        //     then the disableParentSwiper will be false.\n        disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n        if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n        if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n            // Register the new event in a variable which stores the relevant data\n            var newEvent = {\n                time: (0, $1338f5f0d60fe216$export$461939dd4422153)(),\n                delta: Math.abs(delta),\n                direction: Math.sign(delta),\n                raw: event1\n            }; // Keep the most recent events\n            if (recentWheelEvents.length >= 2) recentWheelEvents.shift(); // only store the last N events\n            var prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n            recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n            //   If direction has changed or\n            //   if the scroll is quicker than the previous one:\n            //     Animate the slider.\n            // Else (this is the first time the wheel is moved):\n            //     Animate the slider.\n            if (prevEvent) {\n                if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) animateSlider(newEvent);\n            } else animateSlider(newEvent);\n             // If it's time to release the scroll:\n            //   Return now so you don't hit the preventDefault.\n            if (releaseScroll(newEvent)) return true;\n        } else {\n            // Freemode or scrollContainer:\n            // If we recently snapped after a momentum scroll, then ignore wheel events\n            // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n            // or if it's a new scroll (larger delta or inverse sign as last event before\n            // an end-of-momentum snap).\n            var newEvent1 = {\n                time: (0, $1338f5f0d60fe216$export$461939dd4422153)(),\n                delta: Math.abs(delta),\n                direction: Math.sign(delta)\n            };\n            var ignoreWheelEvents = lastEventBeforeSnap && newEvent1.time < lastEventBeforeSnap.time + 500 && newEvent1.delta <= lastEventBeforeSnap.delta && newEvent1.direction === lastEventBeforeSnap.direction;\n            if (!ignoreWheelEvents) {\n                lastEventBeforeSnap = undefined;\n                if (swiper.params.loop) swiper.loopFix();\n                var position = swiper.getTranslate() + delta * params.sensitivity;\n                var wasBeginning = swiper.isBeginning;\n                var wasEnd = swiper.isEnd;\n                if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n                if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n                swiper.setTransition(0);\n                swiper.setTranslate(position);\n                swiper.updateProgress();\n                swiper.updateActiveIndex();\n                swiper.updateSlidesClasses();\n                if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) swiper.updateSlidesClasses();\n                if (swiper.params.freeMode.sticky) {\n                    // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n                    // the end of a momentum scroll by storing recent (N=15?) wheel events.\n                    // 1. do all N events have decreasing or same (absolute value) delta?\n                    // 2. did all N events arrive in the last M (M=500?) msecs?\n                    // 3. does the earliest event have an (absolute value) delta that's\n                    //    at least P (P=1?) larger than the most recent event's delta?\n                    // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n                    // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n                    // Snap immediately and ignore remaining wheel events in this scroll.\n                    // See comment above for \"remaining wheel events in this scroll\" determination.\n                    // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n                    clearTimeout(timeout);\n                    timeout = undefined;\n                    if (recentWheelEvents.length >= 15) recentWheelEvents.shift(); // only store the last N events\n                    var prevEvent1 = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n                    var firstEvent = recentWheelEvents[0];\n                    recentWheelEvents.push(newEvent1);\n                    if (prevEvent1 && (newEvent1.delta > prevEvent1.delta || newEvent1.direction !== prevEvent1.direction)) // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n                    recentWheelEvents.splice(0);\n                    else if (recentWheelEvents.length >= 15 && newEvent1.time - firstEvent.time < 500 && firstEvent.delta - newEvent1.delta >= 1 && newEvent1.delta <= 6) {\n                        // We're at the end of the deceleration of a momentum scroll, so there's no need\n                        // to wait for more events. Snap ASAP on the next tick.\n                        // Also, because there's some remaining momentum we'll bias the snap in the\n                        // direction of the ongoing scroll because it's better UX for the scroll to snap\n                        // in the same direction as the scroll instead of reversing to snap.  Therefore,\n                        // if it's already scrolled more than 20% in the current direction, keep going.\n                        var snapToThreshold = delta > 0 ? 0.8 : 0.2;\n                        lastEventBeforeSnap = newEvent1;\n                        recentWheelEvents.splice(0);\n                        timeout = (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n                            swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                        }, 0); // no delay; move on next tick\n                    }\n                    if (!timeout) // if we get here, then we haven't detected the end of a momentum scroll, so\n                    // we'll consider a scroll \"complete\" when there haven't been any wheel events\n                    // for 500ms.\n                    timeout = (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n                        var snapToThreshold = 0.5;\n                        lastEventBeforeSnap = newEvent1;\n                        recentWheelEvents.splice(0);\n                        swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n                    }, 500);\n                } // Emit event\n                if (!ignoreWheelEvents) emit(\"scroll\", e); // Stop autoplay\n                if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n                if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n            }\n        }\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n        return false;\n    }\n    function events(method) {\n        var target = swiper.$el;\n        if (swiper.params.mousewheel.eventsTarget !== \"container\") target = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(swiper.params.mousewheel.eventsTarget);\n        target[method](\"mouseenter\", handleMouseEnter);\n        target[method](\"mouseleave\", handleMouseLeave);\n        target[method](\"wheel\", handle);\n    }\n    function enable() {\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.removeEventListener(\"wheel\", handle);\n            return true;\n        }\n        if (swiper.mousewheel.enabled) return false;\n        events(\"on\");\n        swiper.mousewheel.enabled = true;\n        return true;\n    }\n    function disable() {\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.addEventListener(event, handle);\n            return true;\n        }\n        if (!swiper.mousewheel.enabled) return false;\n        events(\"off\");\n        swiper.mousewheel.enabled = false;\n        return true;\n    }\n    on(\"init\", function() {\n        if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) disable();\n        if (swiper.params.mousewheel.enabled) enable();\n    });\n    on(\"destroy\", function() {\n        if (swiper.params.cssMode) enable();\n        if (swiper.mousewheel.enabled) disable();\n    });\n    Object.assign(swiper.mousewheel, {\n        enable: enable,\n        disable: disable\n    });\n}\n\n\n\nfunction $f468fb17181f9684$export$2e2bcd8739ae039(swiper, originalParams, params, checkProps) {\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    if (swiper.params.createElements) Object.keys(checkProps).forEach(function(key) {\n        if (!params[key] && params.auto === true) {\n            var element = swiper.$el.children(\".\".concat(checkProps[key]))[0];\n            if (!element) {\n                element = document.createElement(\"div\");\n                element.className = checkProps[key];\n                swiper.$el.append(element);\n            }\n            params[key] = element;\n            originalParams[key] = element;\n        }\n    });\n    return params;\n}\n\n\n\nfunction $73df5eb817a37a3a$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    extendParams({\n        navigation: {\n            nextEl: null,\n            prevEl: null,\n            hideOnClick: false,\n            disabledClass: \"swiper-button-disabled\",\n            hiddenClass: \"swiper-button-hidden\",\n            lockClass: \"swiper-button-lock\",\n            navigationDisabledClass: \"swiper-navigation-disabled\"\n        }\n    });\n    swiper.navigation = {\n        nextEl: null,\n        $nextEl: null,\n        prevEl: null,\n        $prevEl: null\n    };\n    function getEl(el) {\n        var $el;\n        if (el) {\n            $el = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(el);\n            if (swiper.params.uniqueNavElements && typeof el === \"string\" && $el.length > 1 && swiper.$el.find(el).length === 1) $el = swiper.$el.find(el);\n        }\n        return $el;\n    }\n    function toggleEl($el, disabled) {\n        var params = swiper.params.navigation;\n        if ($el && $el.length > 0) {\n            $el[disabled ? \"addClass\" : \"removeClass\"](params.disabledClass);\n            if ($el[0] && $el[0].tagName === \"BUTTON\") $el[0].disabled = disabled;\n            if (swiper.params.watchOverflow && swiper.enabled) $el[swiper.isLocked ? \"addClass\" : \"removeClass\"](params.lockClass);\n        }\n    }\n    function update() {\n        // Update Navigation Buttons\n        if (swiper.params.loop) return;\n        var _swiper_navigation = swiper.navigation, $nextEl = _swiper_navigation.$nextEl, $prevEl = _swiper_navigation.$prevEl;\n        toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\n        toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\n    }\n    function onPrevClick(e) {\n        e.preventDefault();\n        if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slidePrev();\n        emit(\"navigationPrev\");\n    }\n    function onNextClick(e) {\n        e.preventDefault();\n        if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n        swiper.slideNext();\n        emit(\"navigationNext\");\n    }\n    function init() {\n        var params = swiper.params.navigation;\n        swiper.params.navigation = (0, $f468fb17181f9684$export$2e2bcd8739ae039)(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n            nextEl: \"swiper-button-next\",\n            prevEl: \"swiper-button-prev\"\n        });\n        if (!(params.nextEl || params.prevEl)) return;\n        var $nextEl = getEl(params.nextEl);\n        var $prevEl = getEl(params.prevEl);\n        if ($nextEl && $nextEl.length > 0) $nextEl.on(\"click\", onNextClick);\n        if ($prevEl && $prevEl.length > 0) $prevEl.on(\"click\", onPrevClick);\n        Object.assign(swiper.navigation, {\n            $nextEl: $nextEl,\n            nextEl: $nextEl && $nextEl[0],\n            $prevEl: $prevEl,\n            prevEl: $prevEl && $prevEl[0]\n        });\n        if (!swiper.enabled) {\n            if ($nextEl) $nextEl.addClass(params.lockClass);\n            if ($prevEl) $prevEl.addClass(params.lockClass);\n        }\n    }\n    function destroy() {\n        var _swiper_navigation = swiper.navigation, $nextEl = _swiper_navigation.$nextEl, $prevEl = _swiper_navigation.$prevEl;\n        if ($nextEl && $nextEl.length) {\n            $nextEl.off(\"click\", onNextClick);\n            $nextEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n        if ($prevEl && $prevEl.length) {\n            $prevEl.off(\"click\", onPrevClick);\n            $prevEl.removeClass(swiper.params.navigation.disabledClass);\n        }\n    }\n    on(\"init\", function() {\n        if (swiper.params.navigation.enabled === false) // eslint-disable-next-line\n        disable();\n        else {\n            init();\n            update();\n        }\n    });\n    on(\"toEdge fromEdge lock unlock\", function() {\n        update();\n    });\n    on(\"destroy\", function() {\n        destroy();\n    });\n    on(\"enable disable\", function() {\n        var _swiper_navigation = swiper.navigation, $nextEl = _swiper_navigation.$nextEl, $prevEl = _swiper_navigation.$prevEl;\n        if ($nextEl) $nextEl[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.navigation.lockClass);\n        if ($prevEl) $prevEl[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.navigation.lockClass);\n    });\n    on(\"click\", function(_s, e) {\n        var _swiper_navigation = swiper.navigation, $nextEl = _swiper_navigation.$nextEl, $prevEl = _swiper_navigation.$prevEl;\n        var targetEl = e.target;\n        if (swiper.params.navigation.hideOnClick && !(0, $181e7e5b06640d28$export$2e2bcd8739ae039)(targetEl).is($prevEl) && !(0, $181e7e5b06640d28$export$2e2bcd8739ae039)(targetEl).is($nextEl)) {\n            if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n            var isHidden;\n            if ($nextEl) isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n            else if ($prevEl) isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n            if (isHidden === true) emit(\"navigationShow\");\n            else emit(\"navigationHide\");\n            if ($nextEl) $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n            if ($prevEl) $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n    });\n    var enable = function() {\n        swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);\n        init();\n        update();\n    };\n    var disable = function() {\n        swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);\n        destroy();\n    };\n    Object.assign(swiper.navigation, {\n        enable: enable,\n        disable: disable,\n        update: update,\n        init: init,\n        destroy: destroy\n    });\n}\n\n\n\nfunction $73166865f7b54cd7$export$2e2bcd8739ae039() {\n    var classes = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n    return \".\".concat(classes.trim().replace(/([\\.:!\\/])/g, \"\\\\$1\") // eslint-disable-line\n    .replace(/ /g, \".\"));\n}\n\n\n\nfunction $81b40901656d9843$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    var pfx = \"swiper-pagination\";\n    extendParams({\n        pagination: {\n            el: null,\n            bulletElement: \"span\",\n            clickable: false,\n            hideOnClick: false,\n            renderBullet: null,\n            renderProgressbar: null,\n            renderFraction: null,\n            renderCustom: null,\n            progressbarOpposite: false,\n            type: \"bullets\",\n            // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n            dynamicBullets: false,\n            dynamicMainBullets: 1,\n            formatFractionCurrent: function(number) {\n                return number;\n            },\n            formatFractionTotal: function(number) {\n                return number;\n            },\n            bulletClass: \"\".concat(pfx, \"-bullet\"),\n            bulletActiveClass: \"\".concat(pfx, \"-bullet-active\"),\n            modifierClass: \"\".concat(pfx, \"-\"),\n            currentClass: \"\".concat(pfx, \"-current\"),\n            totalClass: \"\".concat(pfx, \"-total\"),\n            hiddenClass: \"\".concat(pfx, \"-hidden\"),\n            progressbarFillClass: \"\".concat(pfx, \"-progressbar-fill\"),\n            progressbarOppositeClass: \"\".concat(pfx, \"-progressbar-opposite\"),\n            clickableClass: \"\".concat(pfx, \"-clickable\"),\n            lockClass: \"\".concat(pfx, \"-lock\"),\n            horizontalClass: \"\".concat(pfx, \"-horizontal\"),\n            verticalClass: \"\".concat(pfx, \"-vertical\"),\n            paginationDisabledClass: \"\".concat(pfx, \"-disabled\")\n        }\n    });\n    swiper.pagination = {\n        el: null,\n        $el: null,\n        bullets: []\n    };\n    var bulletSize;\n    var dynamicBulletIndex = 0;\n    function isPaginationDisabled() {\n        return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n    }\n    function setSideBullets($bulletEl, position) {\n        var bulletActiveClass = swiper.params.pagination.bulletActiveClass;\n        $bulletEl[position]().addClass(\"\".concat(bulletActiveClass, \"-\").concat(position))[position]().addClass(\"\".concat(bulletActiveClass, \"-\").concat(position, \"-\").concat(position));\n    }\n    function update() {\n        // Render || Update Pagination bullets/items\n        var rtl = swiper.rtl;\n        var params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el; // Current/Total\n        var current;\n        var total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n        if (swiper.params.loop) {\n            current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n            if (current > slidesLength - 1 - swiper.loopedSlides * 2) current -= slidesLength - swiper.loopedSlides * 2;\n            if (current > total - 1) current -= total;\n            if (current < 0 && swiper.params.paginationType !== \"bullets\") current = total + current;\n        } else if (typeof swiper.snapIndex !== \"undefined\") current = swiper.snapIndex;\n        else current = swiper.activeIndex || 0;\n         // Types\n        if (params.type === \"bullets\" && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n            var bullets = swiper.pagination.bullets;\n            var firstIndex;\n            var lastIndex;\n            var midIndex;\n            if (params.dynamicBullets) {\n                bulletSize = bullets.eq(0)[swiper.isHorizontal() ? \"outerWidth\" : \"outerHeight\"](true);\n                $el.css(swiper.isHorizontal() ? \"width\" : \"height\", \"\".concat(bulletSize * (params.dynamicMainBullets + 4), \"px\"));\n                if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n                    dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\n                    if (dynamicBulletIndex > params.dynamicMainBullets - 1) dynamicBulletIndex = params.dynamicMainBullets - 1;\n                    else if (dynamicBulletIndex < 0) dynamicBulletIndex = 0;\n                }\n                firstIndex = Math.max(current - dynamicBulletIndex, 0);\n                lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n                midIndex = (lastIndex + firstIndex) / 2;\n            }\n            bullets.removeClass([\n                \"\",\n                \"-next\",\n                \"-next-next\",\n                \"-prev\",\n                \"-prev-prev\",\n                \"-main\"\n            ].map(function(suffix) {\n                return \"\".concat(params.bulletActiveClass).concat(suffix);\n            }).join(\" \"));\n            if ($el.length > 1) bullets.each(function(bullet) {\n                var $bullet = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(bullet);\n                var bulletIndex = $bullet.index();\n                if (bulletIndex === current) $bullet.addClass(params.bulletActiveClass);\n                if (params.dynamicBullets) {\n                    if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) $bullet.addClass(\"\".concat(params.bulletActiveClass, \"-main\"));\n                    if (bulletIndex === firstIndex) setSideBullets($bullet, \"prev\");\n                    if (bulletIndex === lastIndex) setSideBullets($bullet, \"next\");\n                }\n            });\n            else {\n                var $bullet = bullets.eq(current);\n                var bulletIndex = $bullet.index();\n                $bullet.addClass(params.bulletActiveClass);\n                if (params.dynamicBullets) {\n                    var $firstDisplayedBullet = bullets.eq(firstIndex);\n                    var $lastDisplayedBullet = bullets.eq(lastIndex);\n                    for(var i = firstIndex; i <= lastIndex; i += 1)bullets.eq(i).addClass(\"\".concat(params.bulletActiveClass, \"-main\"));\n                    if (swiper.params.loop) {\n                        if (bulletIndex >= bullets.length) {\n                            for(var i1 = params.dynamicMainBullets; i1 >= 0; i1 -= 1)bullets.eq(bullets.length - i1).addClass(\"\".concat(params.bulletActiveClass, \"-main\"));\n                            bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(\"\".concat(params.bulletActiveClass, \"-prev\"));\n                        } else {\n                            setSideBullets($firstDisplayedBullet, \"prev\");\n                            setSideBullets($lastDisplayedBullet, \"next\");\n                        }\n                    } else {\n                        setSideBullets($firstDisplayedBullet, \"prev\");\n                        setSideBullets($lastDisplayedBullet, \"next\");\n                    }\n                }\n            }\n            if (params.dynamicBullets) {\n                var dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n                var bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n                var offsetProp = rtl ? \"right\" : \"left\";\n                bullets.css(swiper.isHorizontal() ? offsetProp : \"top\", \"\".concat(bulletsOffset, \"px\"));\n            }\n        }\n        if (params.type === \"fraction\") {\n            $el.find((0, $73166865f7b54cd7$export$2e2bcd8739ae039)(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n            $el.find((0, $73166865f7b54cd7$export$2e2bcd8739ae039)(params.totalClass)).text(params.formatFractionTotal(total));\n        }\n        if (params.type === \"progressbar\") {\n            var progressbarDirection;\n            if (params.progressbarOpposite) progressbarDirection = swiper.isHorizontal() ? \"vertical\" : \"horizontal\";\n            else progressbarDirection = swiper.isHorizontal() ? \"horizontal\" : \"vertical\";\n            var scale = (current + 1) / total;\n            var scaleX = 1;\n            var scaleY = 1;\n            if (progressbarDirection === \"horizontal\") scaleX = scale;\n            else scaleY = scale;\n            $el.find((0, $73166865f7b54cd7$export$2e2bcd8739ae039)(params.progressbarFillClass)).transform(\"translate3d(0,0,0) scaleX(\".concat(scaleX, \") scaleY(\").concat(scaleY, \")\")).transition(swiper.params.speed);\n        }\n        if (params.type === \"custom\" && params.renderCustom) {\n            $el.html(params.renderCustom(swiper, current + 1, total));\n            emit(\"paginationRender\", $el[0]);\n        } else emit(\"paginationUpdate\", $el[0]);\n        if (swiper.params.watchOverflow && swiper.enabled) $el[swiper.isLocked ? \"addClass\" : \"removeClass\"](params.lockClass);\n    }\n    function render() {\n        // Render Container\n        var params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        var slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n        var $el = swiper.pagination.$el;\n        var paginationHTML = \"\";\n        if (params.type === \"bullets\") {\n            var numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n            if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) numberOfBullets = slidesLength;\n            for(var i = 0; i < numberOfBullets; i += 1)if (params.renderBullet) paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n            else paginationHTML += \"<\".concat(params.bulletElement, ' class=\"').concat(params.bulletClass, '\"></').concat(params.bulletElement, \">\");\n            $el.html(paginationHTML);\n            swiper.pagination.bullets = $el.find((0, $73166865f7b54cd7$export$2e2bcd8739ae039)(params.bulletClass));\n        }\n        if (params.type === \"fraction\") {\n            if (params.renderFraction) paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n            else paginationHTML = '<span class=\"'.concat(params.currentClass, '\"></span>') + \" / \" + '<span class=\"'.concat(params.totalClass, '\"></span>');\n            $el.html(paginationHTML);\n        }\n        if (params.type === \"progressbar\") {\n            if (params.renderProgressbar) paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n            else paginationHTML = '<span class=\"'.concat(params.progressbarFillClass, '\"></span>');\n            $el.html(paginationHTML);\n        }\n        if (params.type !== \"custom\") emit(\"paginationRender\", swiper.pagination.$el[0]);\n    }\n    function init() {\n        swiper.params.pagination = (0, $f468fb17181f9684$export$2e2bcd8739ae039)(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n            el: \"swiper-pagination\"\n        });\n        var params = swiper.params.pagination;\n        if (!params.el) return;\n        var $el = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(params.el);\n        if ($el.length === 0) return;\n        if (swiper.params.uniqueNavElements && typeof params.el === \"string\" && $el.length > 1) {\n            $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n            if ($el.length > 1) $el = $el.filter(function(el) {\n                if ((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(el).parents(\".swiper\")[0] !== swiper.el) return false;\n                return true;\n            });\n        }\n        if (params.type === \"bullets\" && params.clickable) $el.addClass(params.clickableClass);\n        $el.addClass(params.modifierClass + params.type);\n        $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.type === \"bullets\" && params.dynamicBullets) {\n            $el.addClass(\"\".concat(params.modifierClass).concat(params.type, \"-dynamic\"));\n            dynamicBulletIndex = 0;\n            if (params.dynamicMainBullets < 1) params.dynamicMainBullets = 1;\n        }\n        if (params.type === \"progressbar\" && params.progressbarOpposite) $el.addClass(params.progressbarOppositeClass);\n        if (params.clickable) $el.on(\"click\", (0, $73166865f7b54cd7$export$2e2bcd8739ae039)(params.bulletClass), function onClick(e) {\n            e.preventDefault();\n            var index = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(this).index() * swiper.params.slidesPerGroup;\n            if (swiper.params.loop) index += swiper.loopedSlides;\n            swiper.slideTo(index);\n        });\n        Object.assign(swiper.pagination, {\n            $el: $el,\n            el: $el[0]\n        });\n        if (!swiper.enabled) $el.addClass(params.lockClass);\n    }\n    function destroy() {\n        var params = swiper.params.pagination;\n        if (isPaginationDisabled()) return;\n        var $el = swiper.pagination.$el;\n        $el.removeClass(params.hiddenClass);\n        $el.removeClass(params.modifierClass + params.type);\n        $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n        if (params.clickable) $el.off(\"click\", (0, $73166865f7b54cd7$export$2e2bcd8739ae039)(params.bulletClass));\n    }\n    on(\"init\", function() {\n        if (swiper.params.pagination.enabled === false) // eslint-disable-next-line\n        disable();\n        else {\n            init();\n            render();\n            update();\n        }\n    });\n    on(\"activeIndexChange\", function() {\n        if (swiper.params.loop) update();\n        else if (typeof swiper.snapIndex === \"undefined\") update();\n    });\n    on(\"snapIndexChange\", function() {\n        if (!swiper.params.loop) update();\n    });\n    on(\"slidesLengthChange\", function() {\n        if (swiper.params.loop) {\n            render();\n            update();\n        }\n    });\n    on(\"snapGridLengthChange\", function() {\n        if (!swiper.params.loop) {\n            render();\n            update();\n        }\n    });\n    on(\"destroy\", function() {\n        destroy();\n    });\n    on(\"enable disable\", function() {\n        var $el = swiper.pagination.$el;\n        if ($el) $el[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.pagination.lockClass);\n    });\n    on(\"lock unlock\", function() {\n        update();\n    });\n    on(\"click\", function(_s, e) {\n        var targetEl = e.target;\n        var $el = swiper.pagination.$el;\n        if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !(0, $181e7e5b06640d28$export$2e2bcd8739ae039)(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n            if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n            var isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n            if (isHidden === true) emit(\"paginationShow\");\n            else emit(\"paginationHide\");\n            $el.toggleClass(swiper.params.pagination.hiddenClass);\n        }\n    });\n    var enable = function() {\n        swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n        if (swiper.pagination.$el) swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n        init();\n        render();\n        update();\n    };\n    var disable = function() {\n        swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n        if (swiper.pagination.$el) swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n        destroy();\n    };\n    Object.assign(swiper.pagination, {\n        enable: enable,\n        disable: disable,\n        render: render,\n        update: update,\n        init: init,\n        destroy: destroy\n    });\n}\n\n\n\n\n\n\nfunction $0b7109d1c8f39f1a$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var isTouched = false;\n    var timeout = null;\n    var dragTimeout = null;\n    var dragStartPos;\n    var dragSize;\n    var trackSize;\n    var divider;\n    extendParams({\n        scrollbar: {\n            el: null,\n            dragSize: \"auto\",\n            hide: false,\n            draggable: false,\n            snapOnRelease: true,\n            lockClass: \"swiper-scrollbar-lock\",\n            dragClass: \"swiper-scrollbar-drag\",\n            scrollbarDisabledClass: \"swiper-scrollbar-disabled\",\n            horizontalClass: \"swiper-scrollbar-horizontal\",\n            verticalClass: \"swiper-scrollbar-vertical\"\n        }\n    });\n    swiper.scrollbar = {\n        el: null,\n        dragEl: null,\n        $el: null,\n        $dragEl: null\n    };\n    function setTranslate() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate, progress = swiper.progress;\n        var $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n        var params = swiper.params.scrollbar;\n        var newSize = dragSize;\n        var newPos = (trackSize - dragSize) * progress;\n        if (rtl) {\n            newPos = -newPos;\n            if (newPos > 0) {\n                newSize = dragSize - newPos;\n                newPos = 0;\n            } else if (-newPos + dragSize > trackSize) newSize = trackSize + newPos;\n        } else if (newPos < 0) {\n            newSize = dragSize + newPos;\n            newPos = 0;\n        } else if (newPos + dragSize > trackSize) newSize = trackSize - newPos;\n        if (swiper.isHorizontal()) {\n            $dragEl.transform(\"translate3d(\".concat(newPos, \"px, 0, 0)\"));\n            $dragEl[0].style.width = \"\".concat(newSize, \"px\");\n        } else {\n            $dragEl.transform(\"translate3d(0px, \".concat(newPos, \"px, 0)\"));\n            $dragEl[0].style.height = \"\".concat(newSize, \"px\");\n        }\n        if (params.hide) {\n            clearTimeout(timeout);\n            $el[0].style.opacity = 1;\n            timeout = setTimeout(function() {\n                $el[0].style.opacity = 0;\n                $el.transition(400);\n            }, 1000);\n        }\n    }\n    function setTransition(duration) {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        swiper.scrollbar.$dragEl.transition(duration);\n    }\n    function updateSize() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        var scrollbar = swiper.scrollbar;\n        var $dragEl = scrollbar.$dragEl, $el = scrollbar.$el;\n        $dragEl[0].style.width = \"\";\n        $dragEl[0].style.height = \"\";\n        trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n        divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n        if (swiper.params.scrollbar.dragSize === \"auto\") dragSize = trackSize * divider;\n        else dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n        if (swiper.isHorizontal()) $dragEl[0].style.width = \"\".concat(dragSize, \"px\");\n        else $dragEl[0].style.height = \"\".concat(dragSize, \"px\");\n        if (divider >= 1) $el[0].style.display = \"none\";\n        else $el[0].style.display = \"\";\n        if (swiper.params.scrollbar.hide) $el[0].style.opacity = 0;\n        if (swiper.params.watchOverflow && swiper.enabled) scrollbar.$el[swiper.isLocked ? \"addClass\" : \"removeClass\"](swiper.params.scrollbar.lockClass);\n    }\n    function getPointerPosition(e) {\n        if (swiper.isHorizontal()) return e.type === \"touchstart\" || e.type === \"touchmove\" ? e.targetTouches[0].clientX : e.clientX;\n        return e.type === \"touchstart\" || e.type === \"touchmove\" ? e.targetTouches[0].clientY : e.clientY;\n    }\n    function setDragPosition(e) {\n        var scrollbar = swiper.scrollbar, rtl = swiper.rtlTranslate;\n        var $el = scrollbar.$el;\n        var positionRatio;\n        positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? \"left\" : \"top\"] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n        positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n        if (rtl) positionRatio = 1 - positionRatio;\n        var position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n        swiper.updateProgress(position);\n        swiper.setTranslate(position);\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n    }\n    function onDragStart(e) {\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n        isTouched = true;\n        dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? \"left\" : \"top\"] : null;\n        e.preventDefault();\n        e.stopPropagation();\n        $wrapperEl.transition(100);\n        $dragEl.transition(100);\n        setDragPosition(e);\n        clearTimeout(dragTimeout);\n        $el.transition(0);\n        if (params.hide) $el.css(\"opacity\", 1);\n        if (swiper.params.cssMode) swiper.$wrapperEl.css(\"scroll-snap-type\", \"none\");\n        emit(\"scrollbarDragStart\", e);\n    }\n    function onDragMove(e) {\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el, $dragEl = scrollbar.$dragEl;\n        if (!isTouched) return;\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n        setDragPosition(e);\n        $wrapperEl.transition(0);\n        $el.transition(0);\n        $dragEl.transition(0);\n        emit(\"scrollbarDragMove\", e);\n    }\n    function onDragEnd(e) {\n        var params = swiper.params.scrollbar;\n        var scrollbar = swiper.scrollbar, $wrapperEl = swiper.$wrapperEl;\n        var $el = scrollbar.$el;\n        if (!isTouched) return;\n        isTouched = false;\n        if (swiper.params.cssMode) {\n            swiper.$wrapperEl.css(\"scroll-snap-type\", \"\");\n            $wrapperEl.transition(\"\");\n        }\n        if (params.hide) {\n            clearTimeout(dragTimeout);\n            dragTimeout = (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n                $el.css(\"opacity\", 0);\n                $el.transition(400);\n            }, 1000);\n        }\n        emit(\"scrollbarDragEnd\", e);\n        if (params.snapOnRelease) swiper.slideToClosest();\n    }\n    function events(method) {\n        var scrollbar = swiper.scrollbar, touchEventsTouch = swiper.touchEventsTouch, touchEventsDesktop = swiper.touchEventsDesktop, params = swiper.params, support = swiper.support;\n        var $el = scrollbar.$el;\n        if (!$el) return;\n        var target = $el[0];\n        var activeListener = support.passiveListener && params.passiveListeners ? {\n            passive: false,\n            capture: false\n        } : false;\n        var passiveListener = support.passiveListener && params.passiveListeners ? {\n            passive: true,\n            capture: false\n        } : false;\n        if (!target) return;\n        var eventMethod = method === \"on\" ? \"addEventListener\" : \"removeEventListener\";\n        if (!support.touch) {\n            target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n            document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n            document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n        } else {\n            target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n            target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n            target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n        }\n    }\n    function enableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events(\"on\");\n    }\n    function disableDraggable() {\n        if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n        events(\"off\");\n    }\n    function init() {\n        var scrollbar = swiper.scrollbar, $swiperEl = swiper.$el;\n        swiper.params.scrollbar = (0, $f468fb17181f9684$export$2e2bcd8739ae039)(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n            el: \"swiper-scrollbar\"\n        });\n        var params = swiper.params.scrollbar;\n        if (!params.el) return;\n        var $el = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(params.el);\n        if (swiper.params.uniqueNavElements && typeof params.el === \"string\" && $el.length > 1 && $swiperEl.find(params.el).length === 1) $el = $swiperEl.find(params.el);\n        $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        var $dragEl = $el.find(\".\".concat(swiper.params.scrollbar.dragClass));\n        if ($dragEl.length === 0) {\n            $dragEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<div class=\"'.concat(swiper.params.scrollbar.dragClass, '\"></div>'));\n            $el.append($dragEl);\n        }\n        Object.assign(scrollbar, {\n            $el: $el,\n            el: $el[0],\n            $dragEl: $dragEl,\n            dragEl: $dragEl[0]\n        });\n        if (params.draggable) enableDraggable();\n        if ($el) $el[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.scrollbar.lockClass);\n    }\n    function destroy() {\n        var params = swiper.params.scrollbar;\n        var $el = swiper.scrollbar.$el;\n        if ($el) $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        disableDraggable();\n    }\n    on(\"init\", function() {\n        if (swiper.params.scrollbar.enabled === false) // eslint-disable-next-line\n        disable();\n        else {\n            init();\n            updateSize();\n            setTranslate();\n        }\n    });\n    on(\"update resize observerUpdate lock unlock\", function() {\n        updateSize();\n    });\n    on(\"setTranslate\", function() {\n        setTranslate();\n    });\n    on(\"setTransition\", function(_s, duration) {\n        setTransition(duration);\n    });\n    on(\"enable disable\", function() {\n        var $el = swiper.scrollbar.$el;\n        if ($el) $el[swiper.enabled ? \"removeClass\" : \"addClass\"](swiper.params.scrollbar.lockClass);\n    });\n    on(\"destroy\", function() {\n        destroy();\n    });\n    var enable = function() {\n        swiper.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n        if (swiper.scrollbar.$el) swiper.scrollbar.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n        init();\n        updateSize();\n        setTranslate();\n    };\n    var disable = function() {\n        swiper.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n        if (swiper.scrollbar.$el) swiper.scrollbar.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n        destroy();\n    };\n    Object.assign(swiper.scrollbar, {\n        enable: enable,\n        disable: disable,\n        updateSize: updateSize,\n        setTranslate: setTranslate,\n        init: init,\n        destroy: destroy\n    });\n}\n\n\n\nfunction $efc9f8b9ad992202$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        parallax: {\n            enabled: false\n        }\n    });\n    var setTransform = function(el, progress) {\n        var rtl = swiper.rtl;\n        var $el = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(el);\n        var rtlFactor = rtl ? -1 : 1;\n        var p = $el.attr(\"data-swiper-parallax\") || \"0\";\n        var x = $el.attr(\"data-swiper-parallax-x\");\n        var y = $el.attr(\"data-swiper-parallax-y\");\n        var scale = $el.attr(\"data-swiper-parallax-scale\");\n        var opacity = $el.attr(\"data-swiper-parallax-opacity\");\n        if (x || y) {\n            x = x || \"0\";\n            y = y || \"0\";\n        } else if (swiper.isHorizontal()) {\n            x = p;\n            y = \"0\";\n        } else {\n            y = p;\n            x = \"0\";\n        }\n        if (x.indexOf(\"%\") >= 0) x = \"\".concat(parseInt(x, 10) * progress * rtlFactor, \"%\");\n        else x = \"\".concat(x * progress * rtlFactor, \"px\");\n        if (y.indexOf(\"%\") >= 0) y = \"\".concat(parseInt(y, 10) * progress, \"%\");\n        else y = \"\".concat(y * progress, \"px\");\n        if (typeof opacity !== \"undefined\" && opacity !== null) {\n            var currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n            $el[0].style.opacity = currentOpacity;\n        }\n        if (typeof scale === \"undefined\" || scale === null) $el.transform(\"translate3d(\".concat(x, \", \").concat(y, \", 0px)\"));\n        else {\n            var currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n            $el.transform(\"translate3d(\".concat(x, \", \").concat(y, \", 0px) scale(\").concat(currentScale, \")\"));\n        }\n    };\n    var setTranslate = function() {\n        var $el = swiper.$el, slides = swiper.slides, progress = swiper.progress, snapGrid = swiper.snapGrid;\n        $el.children(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each(function(el) {\n            setTransform(el, progress);\n        });\n        slides.each(function(slideEl, slideIndex) {\n            var slideProgress = slideEl.progress;\n            if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== \"auto\") slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n            slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n            (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl).find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each(function(el) {\n                setTransform(el, slideProgress);\n            });\n        });\n    };\n    var setTransition = function() {\n        var duration = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : swiper.params.speed;\n        var $el = swiper.$el;\n        $el.find(\"[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]\").each(function(parallaxEl) {\n            var $parallaxEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(parallaxEl);\n            var parallaxDuration = parseInt($parallaxEl.attr(\"data-swiper-parallax-duration\"), 10) || duration;\n            if (duration === 0) parallaxDuration = 0;\n            $parallaxEl.transition(parallaxDuration);\n        });\n    };\n    on(\"beforeInit\", function() {\n        if (!swiper.params.parallax.enabled) return;\n        swiper.params.watchSlidesProgress = true;\n        swiper.originalParams.watchSlidesProgress = true;\n    });\n    on(\"init\", function() {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n    });\n    on(\"setTranslate\", function() {\n        if (!swiper.params.parallax.enabled) return;\n        setTranslate();\n    });\n    on(\"setTransition\", function(_swiper, duration) {\n        if (!swiper.params.parallax.enabled) return;\n        setTransition(duration);\n    });\n}\n\n\n\n\n\nfunction $2a94c3e88f1ccd22$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    extendParams({\n        zoom: {\n            enabled: false,\n            maxRatio: 3,\n            minRatio: 1,\n            toggle: true,\n            containerClass: \"swiper-zoom-container\",\n            zoomedSlideClass: \"swiper-slide-zoomed\"\n        }\n    });\n    swiper.zoom = {\n        enabled: false\n    };\n    var currentScale = 1;\n    var isScaling = false;\n    var gesturesEnabled;\n    var fakeGestureTouched;\n    var fakeGestureMoved;\n    var gesture = {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3\n    };\n    var image = {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {}\n    };\n    var velocity = {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined\n    };\n    var scale = 1;\n    Object.defineProperty(swiper.zoom, \"scale\", {\n        get: function() {\n            return scale;\n        },\n        set: function(value) {\n            if (scale !== value) {\n                var imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n                var slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n                emit(\"zoomChange\", value, imageEl, slideEl);\n            }\n            scale = value;\n        }\n    });\n    function getDistanceBetweenTouches(e) {\n        if (e.targetTouches.length < 2) return 1;\n        var x1 = e.targetTouches[0].pageX;\n        var y1 = e.targetTouches[0].pageY;\n        var x2 = e.targetTouches[1].pageX;\n        var y2 = e.targetTouches[1].pageY;\n        var distance = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        return distance;\n    } // Events\n    function onGestureStart(e) {\n        var support = swiper.support;\n        var params = swiper.params.zoom;\n        fakeGestureTouched = false;\n        fakeGestureMoved = false;\n        if (!support.gestures) {\n            if (e.type !== \"touchstart\" || e.type === \"touchstart\" && e.targetTouches.length < 2) return;\n            fakeGestureTouched = true;\n            gesture.scaleStart = getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$slideEl || !gesture.$slideEl.length) {\n            gesture.$slideEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(e.target).closest(\".\".concat(swiper.params.slideClass));\n            if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find(\".\".concat(params.containerClass)).eq(0).find(\"picture, img, svg, canvas, .swiper-zoom-target\").eq(0);\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\".concat(params.containerClass));\n            gesture.maxRatio = gesture.$imageWrapEl.attr(\"data-swiper-zoom\") || params.maxRatio;\n            if (gesture.$imageWrapEl.length === 0) {\n                gesture.$imageEl = undefined;\n                return;\n            }\n        }\n        if (gesture.$imageEl) gesture.$imageEl.transition(0);\n        isScaling = true;\n    }\n    function onGestureChange(e) {\n        var support = swiper.support;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        if (!support.gestures) {\n            if (e.type !== \"touchmove\" || e.type === \"touchmove\" && e.targetTouches.length < 2) return;\n            fakeGestureMoved = true;\n            gesture.scaleMove = getDistanceBetweenTouches(e);\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n            if (e.type === \"gesturechange\") onGestureStart(e);\n            return;\n        }\n        if (support.gestures) zoom.scale = e.scale * currentScale;\n        else zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n        if (zoom.scale > gesture.maxRatio) zoom.scale = gesture.maxRatio - 1 + Math.pow(zoom.scale - gesture.maxRatio + 1, 0.5);\n        if (zoom.scale < params.minRatio) zoom.scale = params.minRatio + 1 - Math.pow(params.minRatio - zoom.scale + 1, 0.5);\n        gesture.$imageEl.transform(\"translate3d(0,0,0) scale(\".concat(zoom.scale, \")\"));\n    }\n    function onGestureEnd(e) {\n        var device = swiper.device;\n        var support = swiper.support;\n        var params = swiper.params.zoom;\n        var zoom = swiper.zoom;\n        if (!support.gestures) {\n            if (!fakeGestureTouched || !fakeGestureMoved) return;\n            if (e.type !== \"touchend\" || e.type === \"touchend\" && e.changedTouches.length < 2 && !device.android) return;\n            fakeGestureTouched = false;\n            fakeGestureMoved = false;\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n        zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n        gesture.$imageEl.transition(swiper.params.speed).transform(\"translate3d(0,0,0) scale(\".concat(zoom.scale, \")\"));\n        currentScale = zoom.scale;\n        isScaling = false;\n        if (zoom.scale === 1) gesture.$slideEl = undefined;\n    }\n    function onTouchStart(e) {\n        var device = swiper.device;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n        if (image.isTouched) return;\n        if (device.android && e.cancelable) e.preventDefault();\n        image.isTouched = true;\n        image.touchesStart.x = e.type === \"touchstart\" ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesStart.y = e.type === \"touchstart\" ? e.targetTouches[0].pageY : e.pageY;\n    }\n    function onTouchMove(e) {\n        var zoom = swiper.zoom;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n        swiper.allowClick = false;\n        if (!image.isTouched || !gesture.$slideEl) return;\n        if (!image.isMoved) {\n            image.width = gesture.$imageEl[0].offsetWidth;\n            image.height = gesture.$imageEl[0].offsetHeight;\n            image.startX = (0, $1338f5f0d60fe216$export$5ec402b7fcf74398)(gesture.$imageWrapEl[0], \"x\") || 0;\n            image.startY = (0, $1338f5f0d60fe216$export$5ec402b7fcf74398)(gesture.$imageWrapEl[0], \"y\") || 0;\n            gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n            gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n            gesture.$imageWrapEl.transition(0);\n        } // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.touchesCurrent.x = e.type === \"touchmove\" ? e.targetTouches[0].pageX : e.pageX;\n        image.touchesCurrent.y = e.type === \"touchmove\" ? e.targetTouches[0].pageY : e.pageY;\n        if (!image.isMoved && !isScaling) {\n            if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n                image.isTouched = false;\n                return;\n            }\n            if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n                image.isTouched = false;\n                return;\n            }\n        }\n        if (e.cancelable) e.preventDefault();\n        e.stopPropagation();\n        image.isMoved = true;\n        image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n        image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n        if (image.currentX < image.minX) image.currentX = image.minX + 1 - Math.pow(image.minX - image.currentX + 1, 0.8);\n        if (image.currentX > image.maxX) image.currentX = image.maxX - 1 + Math.pow(image.currentX - image.maxX + 1, 0.8);\n        if (image.currentY < image.minY) image.currentY = image.minY + 1 - Math.pow(image.minY - image.currentY + 1, 0.8);\n        if (image.currentY > image.maxY) image.currentY = image.maxY - 1 + Math.pow(image.currentY - image.maxY + 1, 0.8);\n         // Velocity\n        if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n        if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n        if (!velocity.prevTime) velocity.prevTime = Date.now();\n        velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n        velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n        if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n        if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n        velocity.prevPositionX = image.touchesCurrent.x;\n        velocity.prevPositionY = image.touchesCurrent.y;\n        velocity.prevTime = Date.now();\n        gesture.$imageWrapEl.transform(\"translate3d(\".concat(image.currentX, \"px, \").concat(image.currentY, \"px,0)\"));\n    }\n    function onTouchEnd() {\n        var zoom = swiper.zoom;\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n        if (!image.isTouched || !image.isMoved) {\n            image.isTouched = false;\n            image.isMoved = false;\n            return;\n        }\n        image.isTouched = false;\n        image.isMoved = false;\n        var momentumDurationX = 300;\n        var momentumDurationY = 300;\n        var momentumDistanceX = velocity.x * momentumDurationX;\n        var newPositionX = image.currentX + momentumDistanceX;\n        var momentumDistanceY = velocity.y * momentumDurationY;\n        var newPositionY = image.currentY + momentumDistanceY; // Fix duration\n        if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n        if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n        var momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n        image.currentX = newPositionX;\n        image.currentY = newPositionY; // Define if we need image drag\n        var scaledWidth = image.width * zoom.scale;\n        var scaledHeight = image.height * zoom.scale;\n        image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n        image.maxX = -image.minX;\n        image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n        image.maxY = -image.minY;\n        image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n        image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n        gesture.$imageWrapEl.transition(momentumDuration).transform(\"translate3d(\".concat(image.currentX, \"px, \").concat(image.currentY, \"px,0)\"));\n    }\n    function onTransitionEnd() {\n        var zoom = swiper.zoom;\n        if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n            if (gesture.$imageEl) gesture.$imageEl.transform(\"translate3d(0,0,0) scale(1)\");\n            if (gesture.$imageWrapEl) gesture.$imageWrapEl.transform(\"translate3d(0,0,0)\");\n            zoom.scale = 1;\n            currentScale = 1;\n            gesture.$slideEl = undefined;\n            gesture.$imageEl = undefined;\n            gesture.$imageWrapEl = undefined;\n        }\n    }\n    function zoomIn(e) {\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        if (!gesture.$slideEl) {\n            if (e && e.target) gesture.$slideEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(e.target).closest(\".\".concat(swiper.params.slideClass));\n            if (!gesture.$slideEl) {\n                if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.$slideEl = swiper.$wrapperEl.children(\".\".concat(swiper.params.slideActiveClass));\n                else gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n            }\n            gesture.$imageEl = gesture.$slideEl.find(\".\".concat(params.containerClass)).eq(0).find(\"picture, img, svg, canvas, .swiper-zoom-target\").eq(0);\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\".concat(params.containerClass));\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.style.overflow = \"hidden\";\n            swiper.wrapperEl.style.touchAction = \"none\";\n        }\n        gesture.$slideEl.addClass(\"\".concat(params.zoomedSlideClass));\n        var touchX;\n        var touchY;\n        var offsetX;\n        var offsetY;\n        var diffX;\n        var diffY;\n        var translateX;\n        var translateY;\n        var imageWidth;\n        var imageHeight;\n        var scaledWidth;\n        var scaledHeight;\n        var translateMinX;\n        var translateMinY;\n        var translateMaxX;\n        var translateMaxY;\n        var slideWidth;\n        var slideHeight;\n        if (typeof image.touchesStart.x === \"undefined\" && e) {\n            touchX = e.type === \"touchend\" ? e.changedTouches[0].pageX : e.pageX;\n            touchY = e.type === \"touchend\" ? e.changedTouches[0].pageY : e.pageY;\n        } else {\n            touchX = image.touchesStart.x;\n            touchY = image.touchesStart.y;\n        }\n        zoom.scale = gesture.$imageWrapEl.attr(\"data-swiper-zoom\") || params.maxRatio;\n        currentScale = gesture.$imageWrapEl.attr(\"data-swiper-zoom\") || params.maxRatio;\n        if (e) {\n            slideWidth = gesture.$slideEl[0].offsetWidth;\n            slideHeight = gesture.$slideEl[0].offsetHeight;\n            offsetX = gesture.$slideEl.offset().left + window.scrollX;\n            offsetY = gesture.$slideEl.offset().top + window.scrollY;\n            diffX = offsetX + slideWidth / 2 - touchX;\n            diffY = offsetY + slideHeight / 2 - touchY;\n            imageWidth = gesture.$imageEl[0].offsetWidth;\n            imageHeight = gesture.$imageEl[0].offsetHeight;\n            scaledWidth = imageWidth * zoom.scale;\n            scaledHeight = imageHeight * zoom.scale;\n            translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n            translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n            translateMaxX = -translateMinX;\n            translateMaxY = -translateMinY;\n            translateX = diffX * zoom.scale;\n            translateY = diffY * zoom.scale;\n            if (translateX < translateMinX) translateX = translateMinX;\n            if (translateX > translateMaxX) translateX = translateMaxX;\n            if (translateY < translateMinY) translateY = translateMinY;\n            if (translateY > translateMaxY) translateY = translateMaxY;\n        } else {\n            translateX = 0;\n            translateY = 0;\n        }\n        gesture.$imageWrapEl.transition(300).transform(\"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px,0)\"));\n        gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(\".concat(zoom.scale, \")\"));\n    }\n    function zoomOut() {\n        var zoom = swiper.zoom;\n        var params = swiper.params.zoom;\n        if (!gesture.$slideEl) {\n            if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) gesture.$slideEl = swiper.$wrapperEl.children(\".\".concat(swiper.params.slideActiveClass));\n            else gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n            gesture.$imageEl = gesture.$slideEl.find(\".\".concat(params.containerClass)).eq(0).find(\"picture, img, svg, canvas, .swiper-zoom-target\").eq(0);\n            gesture.$imageWrapEl = gesture.$imageEl.parent(\".\".concat(params.containerClass));\n        }\n        if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n        if (swiper.params.cssMode) {\n            swiper.wrapperEl.style.overflow = \"\";\n            swiper.wrapperEl.style.touchAction = \"\";\n        }\n        zoom.scale = 1;\n        currentScale = 1;\n        gesture.$imageWrapEl.transition(300).transform(\"translate3d(0,0,0)\");\n        gesture.$imageEl.transition(300).transform(\"translate3d(0,0,0) scale(1)\");\n        gesture.$slideEl.removeClass(\"\".concat(params.zoomedSlideClass));\n        gesture.$slideEl = undefined;\n    } // Toggle Zoom\n    function zoomToggle(e) {\n        var zoom = swiper.zoom;\n        if (zoom.scale && zoom.scale !== 1) // Zoom Out\n        zoomOut();\n        else // Zoom In\n        zoomIn(e);\n    }\n    function getListeners() {\n        var support = swiper.support;\n        var passiveListener = swiper.touchEvents.start === \"touchstart\" && support.passiveListener && swiper.params.passiveListeners ? {\n            passive: true,\n            capture: false\n        } : false;\n        var activeListenerWithCapture = support.passiveListener ? {\n            passive: false,\n            capture: true\n        } : true;\n        return {\n            passiveListener: passiveListener,\n            activeListenerWithCapture: activeListenerWithCapture\n        };\n    }\n    function getSlideSelector() {\n        return \".\".concat(swiper.params.slideClass);\n    }\n    function toggleGestures(method) {\n        var passiveListener = getListeners().passiveListener;\n        var slideSelector = getSlideSelector();\n        swiper.$wrapperEl[method](\"gesturestart\", slideSelector, onGestureStart, passiveListener);\n        swiper.$wrapperEl[method](\"gesturechange\", slideSelector, onGestureChange, passiveListener);\n        swiper.$wrapperEl[method](\"gestureend\", slideSelector, onGestureEnd, passiveListener);\n    }\n    function enableGestures() {\n        if (gesturesEnabled) return;\n        gesturesEnabled = true;\n        toggleGestures(\"on\");\n    }\n    function disableGestures() {\n        if (!gesturesEnabled) return;\n        gesturesEnabled = false;\n        toggleGestures(\"off\");\n    } // Attach/Detach Events\n    function enable() {\n        var zoom = swiper.zoom;\n        if (zoom.enabled) return;\n        zoom.enabled = true;\n        var support = swiper.support;\n        var _getListeners = getListeners(), passiveListener = _getListeners.passiveListener, activeListenerWithCapture = _getListeners.activeListenerWithCapture;\n        var slideSelector = getSlideSelector(); // Scale image\n        if (support.gestures) {\n            swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n            swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n        } else if (swiper.touchEvents.start === \"touchstart\") {\n            swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n            swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n            swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n            if (swiper.touchEvents.cancel) swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n        } // Move image\n        swiper.$wrapperEl.on(swiper.touchEvents.move, \".\".concat(swiper.params.zoom.containerClass), onTouchMove, activeListenerWithCapture);\n    }\n    function disable() {\n        var zoom = swiper.zoom;\n        if (!zoom.enabled) return;\n        var support = swiper.support;\n        zoom.enabled = false;\n        var _getListeners = getListeners(), passiveListener = _getListeners.passiveListener, activeListenerWithCapture = _getListeners.activeListenerWithCapture;\n        var slideSelector = getSlideSelector(); // Scale image\n        if (support.gestures) {\n            swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n            swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n        } else if (swiper.touchEvents.start === \"touchstart\") {\n            swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n            swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n            swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n            if (swiper.touchEvents.cancel) swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n        } // Move image\n        swiper.$wrapperEl.off(swiper.touchEvents.move, \".\".concat(swiper.params.zoom.containerClass), onTouchMove, activeListenerWithCapture);\n    }\n    on(\"init\", function() {\n        if (swiper.params.zoom.enabled) enable();\n    });\n    on(\"destroy\", function() {\n        disable();\n    });\n    on(\"touchStart\", function(_s, e) {\n        if (!swiper.zoom.enabled) return;\n        onTouchStart(e);\n    });\n    on(\"touchEnd\", function(_s, e) {\n        if (!swiper.zoom.enabled) return;\n        onTouchEnd(e);\n    });\n    on(\"doubleTap\", function(_s, e) {\n        if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) zoomToggle(e);\n    });\n    on(\"transitionEnd\", function() {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled) onTransitionEnd();\n    });\n    on(\"slideChange\", function() {\n        if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) onTransitionEnd();\n    });\n    Object.assign(swiper.zoom, {\n        enable: enable,\n        disable: disable,\n        in: zoomIn,\n        out: zoomOut,\n        toggle: zoomToggle\n    });\n}\n\n\n\n\nfunction $9557980825b2aeb1$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    extendParams({\n        lazy: {\n            checkInView: false,\n            enabled: false,\n            loadPrevNext: false,\n            loadPrevNextAmount: 1,\n            loadOnTransitionStart: false,\n            scrollingElement: \"\",\n            elementClass: \"swiper-lazy\",\n            loadingClass: \"swiper-lazy-loading\",\n            loadedClass: \"swiper-lazy-loaded\",\n            preloaderClass: \"swiper-lazy-preloader\"\n        }\n    });\n    swiper.lazy = {};\n    var scrollHandlerAttached = false;\n    var initialImageLoaded = false;\n    function loadInSlide(index) {\n        var loadInDuplicate = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n        var params = swiper.params.lazy;\n        if (typeof index === \"undefined\") return;\n        if (swiper.slides.length === 0) return;\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var $slideEl = isVirtual ? swiper.$wrapperEl.children(\".\".concat(swiper.params.slideClass, '[data-swiper-slide-index=\"').concat(index, '\"]')) : swiper.slides.eq(index);\n        var $images = $slideEl.find(\".\".concat(params.elementClass, \":not(.\").concat(params.loadedClass, \"):not(.\").concat(params.loadingClass, \")\"));\n        if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) $images.push($slideEl[0]);\n        if ($images.length === 0) return;\n        $images.each(function(imageEl) {\n            var $imageEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(imageEl);\n            $imageEl.addClass(params.loadingClass);\n            var background = $imageEl.attr(\"data-background\");\n            var src = $imageEl.attr(\"data-src\");\n            var srcset = $imageEl.attr(\"data-srcset\");\n            var sizes = $imageEl.attr(\"data-sizes\");\n            var $pictureEl = $imageEl.parent(\"picture\");\n            swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, function() {\n                if (typeof swiper === \"undefined\" || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n                if (background) {\n                    $imageEl.css(\"background-image\", 'url(\"'.concat(background, '\")'));\n                    $imageEl.removeAttr(\"data-background\");\n                } else {\n                    if (srcset) {\n                        $imageEl.attr(\"srcset\", srcset);\n                        $imageEl.removeAttr(\"data-srcset\");\n                    }\n                    if (sizes) {\n                        $imageEl.attr(\"sizes\", sizes);\n                        $imageEl.removeAttr(\"data-sizes\");\n                    }\n                    if ($pictureEl.length) $pictureEl.children(\"source\").each(function(sourceEl) {\n                        var $source = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(sourceEl);\n                        if ($source.attr(\"data-srcset\")) {\n                            $source.attr(\"srcset\", $source.attr(\"data-srcset\"));\n                            $source.removeAttr(\"data-srcset\");\n                        }\n                    });\n                    if (src) {\n                        $imageEl.attr(\"src\", src);\n                        $imageEl.removeAttr(\"data-src\");\n                    }\n                }\n                $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n                $slideEl.find(\".\".concat(params.preloaderClass)).remove();\n                if (swiper.params.loop && loadInDuplicate) {\n                    var slideOriginalIndex = $slideEl.attr(\"data-swiper-slide-index\");\n                    if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n                        var originalSlide = swiper.$wrapperEl.children('[data-swiper-slide-index=\"'.concat(slideOriginalIndex, '\"]:not(.').concat(swiper.params.slideDuplicateClass, \")\"));\n                        loadInSlide(originalSlide.index(), false);\n                    } else {\n                        var duplicatedSlide = swiper.$wrapperEl.children(\".\".concat(swiper.params.slideDuplicateClass, '[data-swiper-slide-index=\"').concat(slideOriginalIndex, '\"]'));\n                        loadInSlide(duplicatedSlide.index(), false);\n                    }\n                }\n                emit(\"lazyImageReady\", $slideEl[0], $imageEl[0]);\n                if (swiper.params.autoHeight) swiper.updateAutoHeight();\n            });\n            emit(\"lazyImageLoad\", $slideEl[0], $imageEl[0]);\n        });\n    }\n    function load() {\n        var $wrapperEl = swiper.$wrapperEl, swiperParams = swiper.params, slides = swiper.slides, activeIndex = swiper.activeIndex;\n        var isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n        var params = swiperParams.lazy;\n        var slidesPerView = swiperParams.slidesPerView;\n        if (slidesPerView === \"auto\") slidesPerView = 0;\n        function slideExist(index) {\n            if (isVirtual) {\n                if ($wrapperEl.children(\".\".concat(swiperParams.slideClass, '[data-swiper-slide-index=\"').concat(index, '\"]')).length) return true;\n            } else if (slides[index]) return true;\n            return false;\n        }\n        function slideIndex(slideEl) {\n            if (isVirtual) return (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl).attr(\"data-swiper-slide-index\");\n            return (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl).index();\n        }\n        if (!initialImageLoaded) initialImageLoaded = true;\n        if (swiper.params.watchSlidesProgress) $wrapperEl.children(\".\".concat(swiperParams.slideVisibleClass)).each(function(slideEl) {\n            var index = isVirtual ? (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl).attr(\"data-swiper-slide-index\") : (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl).index();\n            loadInSlide(index);\n        });\n        else if (slidesPerView > 1) {\n            for(var i = activeIndex; i < activeIndex + slidesPerView; i += 1)if (slideExist(i)) loadInSlide(i);\n        } else loadInSlide(activeIndex);\n        if (params.loadPrevNext) {\n            if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n                var amount = params.loadPrevNextAmount;\n                var spv = Math.ceil(slidesPerView);\n                var maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n                var minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n                for(var i1 = activeIndex + spv; i1 < maxIndex; i1 += 1)if (slideExist(i1)) loadInSlide(i1);\n                 // Prev Slides\n                for(var i2 = minIndex; i2 < activeIndex; i2 += 1)if (slideExist(i2)) loadInSlide(i2);\n            } else {\n                var nextSlide = $wrapperEl.children(\".\".concat(swiperParams.slideNextClass));\n                if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n                var prevSlide = $wrapperEl.children(\".\".concat(swiperParams.slidePrevClass));\n                if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n            }\n        }\n    }\n    function checkInViewOnLoad() {\n        var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n        if (!swiper || swiper.destroyed) return;\n        var $scrollElement = swiper.params.lazy.scrollingElement ? (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(swiper.params.lazy.scrollingElement) : (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(window);\n        var isWindow = $scrollElement[0] === window;\n        var scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n        var scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n        var swiperOffset = swiper.$el.offset();\n        var rtl = swiper.rtlTranslate;\n        var inView = false;\n        if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n        var swiperCoord = [\n            [\n                swiperOffset.left,\n                swiperOffset.top\n            ],\n            [\n                swiperOffset.left + swiper.width,\n                swiperOffset.top\n            ],\n            [\n                swiperOffset.left,\n                swiperOffset.top + swiper.height\n            ],\n            [\n                swiperOffset.left + swiper.width,\n                swiperOffset.top + swiper.height\n            ]\n        ];\n        for(var i = 0; i < swiperCoord.length; i += 1){\n            var point = swiperCoord[i];\n            if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n                if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n                inView = true;\n            }\n        }\n        var passiveListener = swiper.touchEvents.start === \"touchstart\" && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n            passive: true,\n            capture: false\n        } : false;\n        if (inView) {\n            load();\n            $scrollElement.off(\"scroll\", checkInViewOnLoad, passiveListener);\n        } else if (!scrollHandlerAttached) {\n            scrollHandlerAttached = true;\n            $scrollElement.on(\"scroll\", checkInViewOnLoad, passiveListener);\n        }\n    }\n    on(\"beforeInit\", function() {\n        if (swiper.params.lazy.enabled && swiper.params.preloadImages) swiper.params.preloadImages = false;\n    });\n    on(\"init\", function() {\n        if (swiper.params.lazy.enabled) {\n            if (swiper.params.lazy.checkInView) checkInViewOnLoad();\n            else load();\n        }\n    });\n    on(\"scroll\", function() {\n        if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) load();\n    });\n    on(\"scrollbarDragMove resize _freeModeNoMomentumRelease\", function() {\n        if (swiper.params.lazy.enabled) {\n            if (swiper.params.lazy.checkInView) checkInViewOnLoad();\n            else load();\n        }\n    });\n    on(\"transitionStart\", function() {\n        if (swiper.params.lazy.enabled) {\n            if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\n                if (swiper.params.lazy.checkInView) checkInViewOnLoad();\n                else load();\n            }\n        }\n    });\n    on(\"transitionEnd\", function() {\n        if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n            if (swiper.params.lazy.checkInView) checkInViewOnLoad();\n            else load();\n        }\n    });\n    on(\"slideChange\", function() {\n        var _swiper_params = swiper.params, lazy = _swiper_params.lazy, cssMode = _swiper_params.cssMode, watchSlidesProgress = _swiper_params.watchSlidesProgress, touchReleaseOnEdges = _swiper_params.touchReleaseOnEdges, resistanceRatio = _swiper_params.resistanceRatio;\n        if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) load();\n    });\n    on(\"destroy\", function() {\n        if (!swiper.$el) return;\n        swiper.$el.find(\".\".concat(swiper.params.lazy.loadingClass)).removeClass(swiper.params.lazy.loadingClass);\n    });\n    Object.assign(swiper.lazy, {\n        load: load,\n        loadInSlide: loadInSlide\n    });\n}\n\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */ \nfunction $b2e5bd4620659e33$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        controller: {\n            control: undefined,\n            inverse: false,\n            by: \"slide\" // or 'container'\n        }\n    });\n    swiper.controller = {\n        control: undefined\n    };\n    function LinearSpline(x, y) {\n        var binarySearch = function search() {\n            var maxIndex;\n            var minIndex;\n            var guess;\n            return function(array, val) {\n                minIndex = -1;\n                maxIndex = array.length;\n                while(maxIndex - minIndex > 1){\n                    guess = maxIndex + minIndex >> 1;\n                    if (array[guess] <= val) minIndex = guess;\n                    else maxIndex = guess;\n                }\n                return maxIndex;\n            };\n        }();\n        this.x = x;\n        this.y = y;\n        this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n        // (x1,y1) is the known point before given value,\n        // (x3,y3) is the known point after given value.\n        var i1;\n        var i3;\n        this.interpolate = function interpolate(x2) {\n            if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n            i3 = binarySearch(this.x, x2);\n            i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n            // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n            return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n        };\n        return this;\n    } // xxx: for now i will just save one spline function to to\n    function getInterpolateFunction(c) {\n        if (!swiper.controller.spline) swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n    function setTranslate(_t, byController) {\n        var controlled = swiper.controller.control;\n        var multiplier;\n        var controlledTranslate;\n        var Swiper = swiper.constructor;\n        function setControlledTranslate(c) {\n            // this will create an Interpolate function based on the snapGrids\n            // x is the Grid of the scrolled scroller and y will be the controlled scroller\n            // it makes sense to create this only once and recall it for the interpolation\n            // the function does a lot of value caching for performance\n            var translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n            if (swiper.params.controller.by === \"slide\") {\n                getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n                // but it did not work out\n                controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n            }\n            if (!controlledTranslate || swiper.params.controller.by === \"container\") {\n                multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n                controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n            }\n            if (swiper.params.controller.inverse) controlledTranslate = c.maxTranslate() - controlledTranslate;\n            c.updateProgress(controlledTranslate);\n            c.setTranslate(controlledTranslate, swiper);\n            c.updateActiveIndex();\n            c.updateSlidesClasses();\n        }\n        if (Array.isArray(controlled)) {\n            for(var i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTranslate(controlled[i]);\n        } else if (controlled instanceof Swiper && byController !== controlled) setControlledTranslate(controlled);\n    }\n    function setTransition(duration, byController) {\n        var Swiper = swiper.constructor;\n        var controlled = swiper.controller.control;\n        var i;\n        function setControlledTransition(c) {\n            c.setTransition(duration, swiper);\n            if (duration !== 0) {\n                c.transitionStart();\n                if (c.params.autoHeight) (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n                    c.updateAutoHeight();\n                });\n                c.$wrapperEl.transitionEnd(function() {\n                    if (!controlled) return;\n                    if (c.params.loop && swiper.params.controller.by === \"slide\") c.loopFix();\n                    c.transitionEnd();\n                });\n            }\n        }\n        if (Array.isArray(controlled)) {\n            for(i = 0; i < controlled.length; i += 1)if (controlled[i] !== byController && controlled[i] instanceof Swiper) setControlledTransition(controlled[i]);\n        } else if (controlled instanceof Swiper && byController !== controlled) setControlledTransition(controlled);\n    }\n    function removeSpline() {\n        if (!swiper.controller.control) return;\n        if (swiper.controller.spline) {\n            swiper.controller.spline = undefined;\n            delete swiper.controller.spline;\n        }\n    }\n    on(\"beforeInit\", function() {\n        swiper.controller.control = swiper.params.controller.control;\n    });\n    on(\"update\", function() {\n        removeSpline();\n    });\n    on(\"resize\", function() {\n        removeSpline();\n    });\n    on(\"observerUpdate\", function() {\n        removeSpline();\n    });\n    on(\"setTranslate\", function(_s, translate, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTranslate(translate, byController);\n    });\n    on(\"setTransition\", function(_s, duration, byController) {\n        if (!swiper.controller.control) return;\n        swiper.controller.setTransition(duration, byController);\n    });\n    Object.assign(swiper.controller, {\n        setTranslate: setTranslate,\n        setTransition: setTransition\n    });\n}\n\n\n\n\nfunction $00b6fdf3534059fe$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        a11y: {\n            enabled: true,\n            notificationClass: \"swiper-notification\",\n            prevSlideMessage: \"Previous slide\",\n            nextSlideMessage: \"Next slide\",\n            firstSlideMessage: \"This is the first slide\",\n            lastSlideMessage: \"This is the last slide\",\n            paginationBulletMessage: \"Go to slide {{index}}\",\n            slideLabelMessage: \"{{index}} / {{slidesLength}}\",\n            containerMessage: null,\n            containerRoleDescriptionMessage: null,\n            itemRoleDescriptionMessage: null,\n            slideRole: \"group\",\n            id: null\n        }\n    });\n    swiper.a11y = {\n        clicked: false\n    };\n    var liveRegion = null;\n    function notify(message) {\n        var notification = liveRegion;\n        if (notification.length === 0) return;\n        notification.html(\"\");\n        notification.html(message);\n    }\n    function getRandomNumber() {\n        var size = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 16;\n        var randomChar = function() {\n            return Math.round(16 * Math.random()).toString(16);\n        };\n        return \"x\".repeat(size).replace(/x/g, randomChar);\n    }\n    function makeElFocusable($el) {\n        $el.attr(\"tabIndex\", \"0\");\n    }\n    function makeElNotFocusable($el) {\n        $el.attr(\"tabIndex\", \"-1\");\n    }\n    function addElRole($el, role) {\n        $el.attr(\"role\", role);\n    }\n    function addElRoleDescription($el, description) {\n        $el.attr(\"aria-roledescription\", description);\n    }\n    function addElControls($el, controls) {\n        $el.attr(\"aria-controls\", controls);\n    }\n    function addElLabel($el, label) {\n        $el.attr(\"aria-label\", label);\n    }\n    function addElId($el, id) {\n        $el.attr(\"id\", id);\n    }\n    function addElLive($el, live) {\n        $el.attr(\"aria-live\", live);\n    }\n    function disableEl($el) {\n        $el.attr(\"aria-disabled\", true);\n    }\n    function enableEl($el) {\n        $el.attr(\"aria-disabled\", false);\n    }\n    function onEnterOrSpaceKey(e) {\n        if (e.keyCode !== 13 && e.keyCode !== 32) return;\n        var params = swiper.params.a11y;\n        var $targetEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(e.target);\n        if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n            if (!(swiper.isEnd && !swiper.params.loop)) swiper.slideNext();\n            if (swiper.isEnd) notify(params.lastSlideMessage);\n            else notify(params.nextSlideMessage);\n        }\n        if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n            if (!(swiper.isBeginning && !swiper.params.loop)) swiper.slidePrev();\n            if (swiper.isBeginning) notify(params.firstSlideMessage);\n            else notify(params.prevSlideMessage);\n        }\n        if (swiper.pagination && $targetEl.is((0, $73166865f7b54cd7$export$2e2bcd8739ae039)(swiper.params.pagination.bulletClass))) $targetEl[0].click();\n    }\n    function updateNavigation() {\n        if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n        var _swiper_navigation = swiper.navigation, $nextEl = _swiper_navigation.$nextEl, $prevEl = _swiper_navigation.$prevEl;\n        if ($prevEl && $prevEl.length > 0) {\n            if (swiper.isBeginning) {\n                disableEl($prevEl);\n                makeElNotFocusable($prevEl);\n            } else {\n                enableEl($prevEl);\n                makeElFocusable($prevEl);\n            }\n        }\n        if ($nextEl && $nextEl.length > 0) {\n            if (swiper.isEnd) {\n                disableEl($nextEl);\n                makeElNotFocusable($nextEl);\n            } else {\n                enableEl($nextEl);\n                makeElFocusable($nextEl);\n            }\n        }\n    }\n    function hasPagination() {\n        return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n    }\n    function hasClickablePagination() {\n        return hasPagination() && swiper.params.pagination.clickable;\n    }\n    function updatePagination() {\n        var params = swiper.params.a11y;\n        if (!hasPagination()) return;\n        swiper.pagination.bullets.each(function(bulletEl) {\n            var $bulletEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(bulletEl);\n            if (swiper.params.pagination.clickable) {\n                makeElFocusable($bulletEl);\n                if (!swiper.params.pagination.renderBullet) {\n                    addElRole($bulletEl, \"button\");\n                    addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n                }\n            }\n            if ($bulletEl.is(\".\".concat(swiper.params.pagination.bulletActiveClass))) $bulletEl.attr(\"aria-current\", \"true\");\n            else $bulletEl.removeAttr(\"aria-current\");\n        });\n    }\n    var initNavEl = function($el, wrapperId, message) {\n        makeElFocusable($el);\n        if ($el[0].tagName !== \"BUTTON\") {\n            addElRole($el, \"button\");\n            $el.on(\"keydown\", onEnterOrSpaceKey);\n        }\n        addElLabel($el, message);\n        addElControls($el, wrapperId);\n    };\n    var handlePointerDown = function() {\n        swiper.a11y.clicked = true;\n    };\n    var handlePointerUp = function() {\n        requestAnimationFrame(function() {\n            requestAnimationFrame(function() {\n                if (!swiper.destroyed) swiper.a11y.clicked = false;\n            });\n        });\n    };\n    var handleFocus = function(e) {\n        if (swiper.a11y.clicked) return;\n        var slideEl = e.target.closest(\".\".concat(swiper.params.slideClass));\n        if (!slideEl || !swiper.slides.includes(slideEl)) return;\n        var isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n        var isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n        if (isActive || isVisible) return;\n        if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n        if (swiper.isHorizontal()) swiper.el.scrollLeft = 0;\n        else swiper.el.scrollTop = 0;\n        swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n    };\n    var initSlides = function() {\n        var params = swiper.params.a11y;\n        if (params.itemRoleDescriptionMessage) addElRoleDescription((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(swiper.slides), params.itemRoleDescriptionMessage);\n        if (params.slideRole) addElRole((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(swiper.slides), params.slideRole);\n        var slidesLength = swiper.params.loop ? swiper.slides.filter(function(el) {\n            return !el.classList.contains(swiper.params.slideDuplicateClass);\n        }).length : swiper.slides.length;\n        if (params.slideLabelMessage) swiper.slides.each(function(slideEl, index) {\n            var $slideEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl);\n            var slideIndex = swiper.params.loop ? parseInt($slideEl.attr(\"data-swiper-slide-index\"), 10) : index;\n            var ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n            addElLabel($slideEl, ariaLabelMessage);\n        });\n    };\n    var init = function() {\n        var params = swiper.params.a11y;\n        swiper.$el.append(liveRegion); // Container\n        var $containerEl = swiper.$el;\n        if (params.containerRoleDescriptionMessage) addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n        if (params.containerMessage) addElLabel($containerEl, params.containerMessage);\n         // Wrapper\n        var $wrapperEl = swiper.$wrapperEl;\n        var wrapperId = params.id || $wrapperEl.attr(\"id\") || \"swiper-wrapper-\".concat(getRandomNumber(16));\n        var live = swiper.params.autoplay && swiper.params.autoplay.enabled ? \"off\" : \"polite\";\n        addElId($wrapperEl, wrapperId);\n        addElLive($wrapperEl, live); // Slide\n        initSlides(); // Navigation\n        var $nextEl;\n        var $prevEl;\n        if (swiper.navigation && swiper.navigation.$nextEl) $nextEl = swiper.navigation.$nextEl;\n        if (swiper.navigation && swiper.navigation.$prevEl) $prevEl = swiper.navigation.$prevEl;\n        if ($nextEl && $nextEl.length) initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n        if ($prevEl && $prevEl.length) initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n         // Pagination\n        if (hasClickablePagination()) swiper.pagination.$el.on(\"keydown\", (0, $73166865f7b54cd7$export$2e2bcd8739ae039)(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n         // Tab focus\n        swiper.$el.on(\"focus\", handleFocus, true);\n        swiper.$el.on(\"pointerdown\", handlePointerDown, true);\n        swiper.$el.on(\"pointerup\", handlePointerUp, true);\n    };\n    function destroy() {\n        if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n        var $nextEl;\n        var $prevEl;\n        if (swiper.navigation && swiper.navigation.$nextEl) $nextEl = swiper.navigation.$nextEl;\n        if (swiper.navigation && swiper.navigation.$prevEl) $prevEl = swiper.navigation.$prevEl;\n        if ($nextEl) $nextEl.off(\"keydown\", onEnterOrSpaceKey);\n        if ($prevEl) $prevEl.off(\"keydown\", onEnterOrSpaceKey);\n         // Pagination\n        if (hasClickablePagination()) swiper.pagination.$el.off(\"keydown\", (0, $73166865f7b54cd7$export$2e2bcd8739ae039)(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n         // Tab focus\n        swiper.$el.off(\"focus\", handleFocus, true);\n        swiper.$el.off(\"pointerdown\", handlePointerDown, true);\n        swiper.$el.off(\"pointerup\", handlePointerUp, true);\n    }\n    on(\"beforeInit\", function() {\n        liveRegion = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<span class=\"'.concat(swiper.params.a11y.notificationClass, '\" aria-live=\"assertive\" aria-atomic=\"true\"></span>'));\n    });\n    on(\"afterInit\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        init();\n    });\n    on(\"slidesLengthChange snapGridLengthChange slidesGridLengthChange\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        initSlides();\n    });\n    on(\"fromEdge toEdge afterInit lock unlock\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        updateNavigation();\n    });\n    on(\"paginationUpdate\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        updatePagination();\n    });\n    on(\"destroy\", function() {\n        if (!swiper.params.a11y.enabled) return;\n        destroy();\n    });\n}\n\n\n\nfunction $597a308a3fedaecc$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        history: {\n            enabled: false,\n            root: \"\",\n            replaceState: false,\n            key: \"slides\",\n            keepQuery: false\n        }\n    });\n    var initialized = false;\n    var paths = {};\n    var slugify = function(text) {\n        return text.toString().replace(/\\s+/g, \"-\").replace(/[^\\w-]+/g, \"\").replace(/--+/g, \"-\").replace(/^-+/, \"\").replace(/-+$/, \"\");\n    };\n    var getPathValues = function(urlOverride) {\n        var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n        var location;\n        if (urlOverride) location = new URL(urlOverride);\n        else location = window.location;\n        var pathArray = location.pathname.slice(1).split(\"/\").filter(function(part) {\n            return part !== \"\";\n        });\n        var total = pathArray.length;\n        var key = pathArray[total - 2];\n        var value = pathArray[total - 1];\n        return {\n            key: key,\n            value: value\n        };\n    };\n    var setHistory = function(key, index) {\n        var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n        if (!initialized || !swiper.params.history.enabled) return;\n        var location;\n        if (swiper.params.url) location = new URL(swiper.params.url);\n        else location = window.location;\n        var slide = swiper.slides.eq(index);\n        var value = slugify(slide.attr(\"data-history\"));\n        if (swiper.params.history.root.length > 0) {\n            var root = swiper.params.history.root;\n            if (root[root.length - 1] === \"/\") root = root.slice(0, root.length - 1);\n            value = \"\".concat(root, \"/\").concat(key, \"/\").concat(value);\n        } else if (!location.pathname.includes(key)) value = \"\".concat(key, \"/\").concat(value);\n        if (swiper.params.history.keepQuery) value += location.search;\n        var currentState = window.history.state;\n        if (currentState && currentState.value === value) return;\n        if (swiper.params.history.replaceState) window.history.replaceState({\n            value: value\n        }, null, value);\n        else window.history.pushState({\n            value: value\n        }, null, value);\n    };\n    var scrollToSlide = function(speed, value, runCallbacks) {\n        if (value) for(var i = 0, length = swiper.slides.length; i < length; i += 1){\n            var slide = swiper.slides.eq(i);\n            var slideHistory = slugify(slide.attr(\"data-history\"));\n            if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n                var index = slide.index();\n                swiper.slideTo(index, speed, runCallbacks);\n            }\n        }\n        else swiper.slideTo(0, speed, runCallbacks);\n    };\n    var setHistoryPopState = function() {\n        paths = getPathValues(swiper.params.url);\n        scrollToSlide(swiper.params.speed, paths.value, false);\n    };\n    var init = function() {\n        var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n        if (!swiper.params.history) return;\n        if (!window.history || !window.history.pushState) {\n            swiper.params.history.enabled = false;\n            swiper.params.hashNavigation.enabled = true;\n            return;\n        }\n        initialized = true;\n        paths = getPathValues(swiper.params.url);\n        if (!paths.key && !paths.value) return;\n        scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n        if (!swiper.params.history.replaceState) window.addEventListener(\"popstate\", setHistoryPopState);\n    };\n    var destroy = function() {\n        var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n        if (!swiper.params.history.replaceState) window.removeEventListener(\"popstate\", setHistoryPopState);\n    };\n    on(\"init\", function() {\n        if (swiper.params.history.enabled) init();\n    });\n    on(\"destroy\", function() {\n        if (swiper.params.history.enabled) destroy();\n    });\n    on(\"transitionEnd _freeModeNoMomentumRelease\", function() {\n        if (initialized) setHistory(swiper.params.history.key, swiper.activeIndex);\n    });\n    on(\"slideChange\", function() {\n        if (initialized && swiper.params.cssMode) setHistory(swiper.params.history.key, swiper.activeIndex);\n    });\n}\n\n\n\n\nfunction $34bc4d6807295200$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, emit = param.emit, on = param.on;\n    var initialized = false;\n    var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n    var window = (0, $3bd3f193ccd5630c$export$38b2d434cce3ea22)();\n    extendParams({\n        hashNavigation: {\n            enabled: false,\n            replaceState: false,\n            watchState: false\n        }\n    });\n    var onHashChange = function() {\n        emit(\"hashChange\");\n        var newHash = document.location.hash.replace(\"#\", \"\");\n        var activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr(\"data-hash\");\n        if (newHash !== activeSlideHash) {\n            var newIndex = swiper.$wrapperEl.children(\".\".concat(swiper.params.slideClass, '[data-hash=\"').concat(newHash, '\"]')).index();\n            if (typeof newIndex === \"undefined\") return;\n            swiper.slideTo(newIndex);\n        }\n    };\n    var setHash = function() {\n        if (!initialized || !swiper.params.hashNavigation.enabled) return;\n        if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n            window.history.replaceState(null, null, \"#\".concat(swiper.slides.eq(swiper.activeIndex).attr(\"data-hash\")) || \"\");\n            emit(\"hashSet\");\n        } else {\n            var slide = swiper.slides.eq(swiper.activeIndex);\n            var hash = slide.attr(\"data-hash\") || slide.attr(\"data-history\");\n            document.location.hash = hash || \"\";\n            emit(\"hashSet\");\n        }\n    };\n    var init = function() {\n        if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n        initialized = true;\n        var hash = document.location.hash.replace(\"#\", \"\");\n        if (hash) {\n            var speed = 0;\n            for(var i = 0, length = swiper.slides.length; i < length; i += 1){\n                var slide = swiper.slides.eq(i);\n                var slideHash = slide.attr(\"data-hash\") || slide.attr(\"data-history\");\n                if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n                    var index = slide.index();\n                    swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n                }\n            }\n        }\n        if (swiper.params.hashNavigation.watchState) (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(window).on(\"hashchange\", onHashChange);\n    };\n    var destroy = function() {\n        if (swiper.params.hashNavigation.watchState) (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(window).off(\"hashchange\", onHashChange);\n    };\n    on(\"init\", function() {\n        if (swiper.params.hashNavigation.enabled) init();\n    });\n    on(\"destroy\", function() {\n        if (swiper.params.hashNavigation.enabled) destroy();\n    });\n    on(\"transitionEnd _freeModeNoMomentumRelease\", function() {\n        if (initialized) setHash();\n    });\n    on(\"slideChange\", function() {\n        if (initialized && swiper.params.cssMode) setHash();\n    });\n}\n\n\n/* eslint no-underscore-dangle: \"off\" */ /* eslint no-use-before-define: \"off\" */ \n\nfunction $7d4620c4aa49e0e0$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on, emit = param.emit;\n    var timeout;\n    swiper.autoplay = {\n        running: false,\n        paused: false\n    };\n    extendParams({\n        autoplay: {\n            enabled: false,\n            delay: 3000,\n            waitForTransition: true,\n            disableOnInteraction: true,\n            stopOnLastSlide: false,\n            reverseDirection: false,\n            pauseOnMouseEnter: false\n        }\n    });\n    function run() {\n        if (!swiper.size) {\n            swiper.autoplay.running = false;\n            swiper.autoplay.paused = false;\n            return;\n        }\n        var $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n        var delay = swiper.params.autoplay.delay;\n        if ($activeSlideEl.attr(\"data-swiper-autoplay\")) delay = $activeSlideEl.attr(\"data-swiper-autoplay\") || swiper.params.autoplay.delay;\n        clearTimeout(timeout);\n        timeout = (0, $1338f5f0d60fe216$export$bdd553fddd433dcb)(function() {\n            var autoplayResult;\n            if (swiper.params.autoplay.reverseDirection) {\n                if (swiper.params.loop) {\n                    swiper.loopFix();\n                    autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n                    emit(\"autoplay\");\n                } else if (!swiper.isBeginning) {\n                    autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n                    emit(\"autoplay\");\n                } else if (!swiper.params.autoplay.stopOnLastSlide) {\n                    autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n                    emit(\"autoplay\");\n                } else stop();\n            } else if (swiper.params.loop) {\n                swiper.loopFix();\n                autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n                emit(\"autoplay\");\n            } else if (!swiper.isEnd) {\n                autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n                emit(\"autoplay\");\n            } else if (!swiper.params.autoplay.stopOnLastSlide) {\n                autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n                emit(\"autoplay\");\n            } else stop();\n            if (swiper.params.cssMode && swiper.autoplay.running) run();\n            else if (autoplayResult === false) run();\n        }, delay);\n    }\n    function start() {\n        if (typeof timeout !== \"undefined\") return false;\n        if (swiper.autoplay.running) return false;\n        swiper.autoplay.running = true;\n        emit(\"autoplayStart\");\n        run();\n        return true;\n    }\n    function stop() {\n        if (!swiper.autoplay.running) return false;\n        if (typeof timeout === \"undefined\") return false;\n        if (timeout) {\n            clearTimeout(timeout);\n            timeout = undefined;\n        }\n        swiper.autoplay.running = false;\n        emit(\"autoplayStop\");\n        return true;\n    }\n    function pause(speed) {\n        if (!swiper.autoplay.running) return;\n        if (swiper.autoplay.paused) return;\n        if (timeout) clearTimeout(timeout);\n        swiper.autoplay.paused = true;\n        if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n            swiper.autoplay.paused = false;\n            run();\n        } else [\n            \"transitionend\",\n            \"webkitTransitionEnd\"\n        ].forEach(function(event) {\n            swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n        });\n    }\n    function onVisibilityChange() {\n        var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n        if (document.visibilityState === \"hidden\" && swiper.autoplay.running) pause();\n        if (document.visibilityState === \"visible\" && swiper.autoplay.paused) {\n            run();\n            swiper.autoplay.paused = false;\n        }\n    }\n    function onTransitionEnd(e) {\n        if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n        if (e.target !== swiper.$wrapperEl[0]) return;\n        [\n            \"transitionend\",\n            \"webkitTransitionEnd\"\n        ].forEach(function(event) {\n            swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n        });\n        swiper.autoplay.paused = false;\n        if (!swiper.autoplay.running) stop();\n        else run();\n    }\n    function onMouseEnter() {\n        if (swiper.params.autoplay.disableOnInteraction) stop();\n        else {\n            emit(\"autoplayPause\");\n            pause();\n        }\n        [\n            \"transitionend\",\n            \"webkitTransitionEnd\"\n        ].forEach(function(event) {\n            swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n        });\n    }\n    function onMouseLeave() {\n        if (swiper.params.autoplay.disableOnInteraction) return;\n        swiper.autoplay.paused = false;\n        emit(\"autoplayResume\");\n        run();\n    }\n    function attachMouseEvents() {\n        if (swiper.params.autoplay.pauseOnMouseEnter) {\n            swiper.$el.on(\"mouseenter\", onMouseEnter);\n            swiper.$el.on(\"mouseleave\", onMouseLeave);\n        }\n    }\n    function detachMouseEvents() {\n        swiper.$el.off(\"mouseenter\", onMouseEnter);\n        swiper.$el.off(\"mouseleave\", onMouseLeave);\n    }\n    on(\"init\", function() {\n        if (swiper.params.autoplay.enabled) {\n            start();\n            var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n            document.addEventListener(\"visibilitychange\", onVisibilityChange);\n            attachMouseEvents();\n        }\n    });\n    on(\"beforeTransitionStart\", function(_s, speed, internal) {\n        if (swiper.autoplay.running) {\n            if (internal || !swiper.params.autoplay.disableOnInteraction) swiper.autoplay.pause(speed);\n            else stop();\n        }\n    });\n    on(\"sliderFirstMove\", function() {\n        if (swiper.autoplay.running) {\n            if (swiper.params.autoplay.disableOnInteraction) stop();\n            else pause();\n        }\n    });\n    on(\"touchEnd\", function() {\n        if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) run();\n    });\n    on(\"destroy\", function() {\n        detachMouseEvents();\n        if (swiper.autoplay.running) stop();\n        var document = (0, $3bd3f193ccd5630c$export$f65ca476c09acec0)();\n        document.removeEventListener(\"visibilitychange\", onVisibilityChange);\n    });\n    Object.assign(swiper.autoplay, {\n        pause: pause,\n        run: run,\n        start: start,\n        stop: stop\n    });\n}\n\n\n\n\nfunction $8a38eb54cad30271$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        thumbs: {\n            swiper: null,\n            multipleActiveThumbs: true,\n            autoScrollOffset: 0,\n            slideThumbActiveClass: \"swiper-slide-thumb-active\",\n            thumbsContainerClass: \"swiper-thumbs\"\n        }\n    });\n    var initialized = false;\n    var swiperCreated = false;\n    swiper.thumbs = {\n        swiper: null\n    };\n    function onThumbClick() {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        var clickedIndex = thumbsSwiper.clickedIndex;\n        var clickedSlide = thumbsSwiper.clickedSlide;\n        if (clickedSlide && (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n        if (typeof clickedIndex === \"undefined\" || clickedIndex === null) return;\n        var slideToIndex;\n        if (thumbsSwiper.params.loop) slideToIndex = parseInt((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(thumbsSwiper.clickedSlide).attr(\"data-swiper-slide-index\"), 10);\n        else slideToIndex = clickedIndex;\n        if (swiper.params.loop) {\n            var currentIndex = swiper.activeIndex;\n            if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n                swiper.loopFix(); // eslint-disable-next-line\n                swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n                currentIndex = swiper.activeIndex;\n            }\n            var prevIndex = swiper.slides.eq(currentIndex).prevAll('[data-swiper-slide-index=\"'.concat(slideToIndex, '\"]')).eq(0).index();\n            var nextIndex = swiper.slides.eq(currentIndex).nextAll('[data-swiper-slide-index=\"'.concat(slideToIndex, '\"]')).eq(0).index();\n            if (typeof prevIndex === \"undefined\") slideToIndex = nextIndex;\n            else if (typeof nextIndex === \"undefined\") slideToIndex = prevIndex;\n            else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n            else slideToIndex = prevIndex;\n        }\n        swiper.slideTo(slideToIndex);\n    }\n    function init() {\n        var _swiper_params = swiper.params, thumbsParams = _swiper_params.thumbs;\n        if (initialized) return false;\n        initialized = true;\n        var SwiperClass = swiper.constructor;\n        if (thumbsParams.swiper instanceof SwiperClass) {\n            swiper.thumbs.swiper = thumbsParams.swiper;\n            Object.assign(swiper.thumbs.swiper.originalParams, {\n                watchSlidesProgress: true,\n                slideToClickedSlide: false\n            });\n            Object.assign(swiper.thumbs.swiper.params, {\n                watchSlidesProgress: true,\n                slideToClickedSlide: false\n            });\n        } else if ((0, $1338f5f0d60fe216$export$a6cdc56e425d0d0a)(thumbsParams.swiper)) {\n            var thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n            Object.assign(thumbsSwiperParams, {\n                watchSlidesProgress: true,\n                slideToClickedSlide: false\n            });\n            swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n            swiperCreated = true;\n        }\n        swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n        swiper.thumbs.swiper.on(\"tap\", onThumbClick);\n        return true;\n    }\n    function update(initial) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        var slidesPerView = thumbsSwiper.params.slidesPerView === \"auto\" ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs\n        var thumbsToActivate = 1;\n        var thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n        if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) thumbsToActivate = swiper.params.slidesPerView;\n        if (!swiper.params.thumbs.multipleActiveThumbs) thumbsToActivate = 1;\n        thumbsToActivate = Math.floor(thumbsToActivate);\n        thumbsSwiper.slides.removeClass(thumbActiveClass);\n        if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) for(var i = 0; i < thumbsToActivate; i += 1)thumbsSwiper.$wrapperEl.children('[data-swiper-slide-index=\"'.concat(swiper.realIndex + i, '\"]')).addClass(thumbActiveClass);\n        else for(var i1 = 0; i1 < thumbsToActivate; i1 += 1)thumbsSwiper.slides.eq(swiper.realIndex + i1).addClass(thumbActiveClass);\n        var autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n        var useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n        if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n            var currentThumbsIndex = thumbsSwiper.activeIndex;\n            var newThumbsIndex;\n            var direction;\n            if (thumbsSwiper.params.loop) {\n                if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n                    thumbsSwiper.loopFix(); // eslint-disable-next-line\n                    thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n                    currentThumbsIndex = thumbsSwiper.activeIndex;\n                } // Find actual thumbs index to slide to\n                var prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll('[data-swiper-slide-index=\"'.concat(swiper.realIndex, '\"]')).eq(0).index();\n                var nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll('[data-swiper-slide-index=\"'.concat(swiper.realIndex, '\"]')).eq(0).index();\n                if (typeof prevThumbsIndex === \"undefined\") newThumbsIndex = nextThumbsIndex;\n                else if (typeof nextThumbsIndex === \"undefined\") newThumbsIndex = prevThumbsIndex;\n                else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n                else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n                else newThumbsIndex = prevThumbsIndex;\n                direction = swiper.activeIndex > swiper.previousIndex ? \"next\" : \"prev\";\n            } else {\n                newThumbsIndex = swiper.realIndex;\n                direction = newThumbsIndex > swiper.previousIndex ? \"next\" : \"prev\";\n            }\n            if (useOffset) newThumbsIndex += direction === \"next\" ? autoScrollOffset : -1 * autoScrollOffset;\n            if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n                if (thumbsSwiper.params.centeredSlides) {\n                    if (newThumbsIndex > currentThumbsIndex) newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n                    else newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n                } else newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup;\n                thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n            }\n        }\n    }\n    on(\"beforeInit\", function() {\n        var thumbs = swiper.params.thumbs;\n        if (!thumbs || !thumbs.swiper) return;\n        init();\n        update(true);\n    });\n    on(\"slideChange update resize observerUpdate\", function() {\n        update();\n    });\n    on(\"setTransition\", function(_s, duration) {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        thumbsSwiper.setTransition(duration);\n    });\n    on(\"beforeDestroy\", function() {\n        var thumbsSwiper = swiper.thumbs.swiper;\n        if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n        if (swiperCreated) thumbsSwiper.destroy();\n    });\n    Object.assign(swiper.thumbs, {\n        init: init,\n        update: update\n    });\n}\n\n\n\nfunction $af4c18a3e248131c$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, emit = param.emit, once = param.once;\n    extendParams({\n        freeMode: {\n            enabled: false,\n            momentum: true,\n            momentumRatio: 1,\n            momentumBounce: true,\n            momentumBounceRatio: 1,\n            momentumVelocityRatio: 1,\n            sticky: false,\n            minimumVelocity: 0.02\n        }\n    });\n    function onTouchStart() {\n        var translate = swiper.getTranslate();\n        swiper.setTranslate(translate);\n        swiper.setTransition(0);\n        swiper.touchEventsData.velocities.length = 0;\n        swiper.freeMode.onTouchEnd({\n            currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n        });\n    }\n    function onTouchMove() {\n        var data = swiper.touchEventsData, touches = swiper.touches; // Velocity\n        if (data.velocities.length === 0) data.velocities.push({\n            position: touches[swiper.isHorizontal() ? \"startX\" : \"startY\"],\n            time: data.touchStartTime\n        });\n        data.velocities.push({\n            position: touches[swiper.isHorizontal() ? \"currentX\" : \"currentY\"],\n            time: (0, $1338f5f0d60fe216$export$461939dd4422153)()\n        });\n    }\n    function onTouchEnd(param) {\n        var currentPos = param.currentPos;\n        var params = swiper.params, $wrapperEl = swiper.$wrapperEl, rtl = swiper.rtlTranslate, snapGrid = swiper.snapGrid, data = swiper.touchEventsData; // Time diff\n        var touchEndTime = (0, $1338f5f0d60fe216$export$461939dd4422153)();\n        var timeDiff = touchEndTime - data.touchStartTime;\n        if (currentPos < -swiper.minTranslate()) {\n            swiper.slideTo(swiper.activeIndex);\n            return;\n        }\n        if (currentPos > -swiper.maxTranslate()) {\n            if (swiper.slides.length < snapGrid.length) swiper.slideTo(snapGrid.length - 1);\n            else swiper.slideTo(swiper.slides.length - 1);\n            return;\n        }\n        if (params.freeMode.momentum) {\n            if (data.velocities.length > 1) {\n                var lastMoveEvent = data.velocities.pop();\n                var velocityEvent = data.velocities.pop();\n                var distance = lastMoveEvent.position - velocityEvent.position;\n                var time = lastMoveEvent.time - velocityEvent.time;\n                swiper.velocity = distance / time;\n                swiper.velocity /= 2;\n                if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) swiper.velocity = 0;\n                 // this implies that the user stopped moving a finger then released.\n                // There would be no events with distance zero, so the last event is stale.\n                if (time > 150 || (0, $1338f5f0d60fe216$export$461939dd4422153)() - lastMoveEvent.time > 300) swiper.velocity = 0;\n            } else swiper.velocity = 0;\n            swiper.velocity *= params.freeMode.momentumVelocityRatio;\n            data.velocities.length = 0;\n            var momentumDuration = 1000 * params.freeMode.momentumRatio;\n            var momentumDistance = swiper.velocity * momentumDuration;\n            var newPosition = swiper.translate + momentumDistance;\n            if (rtl) newPosition = -newPosition;\n            var doBounce = false;\n            var afterBouncePosition;\n            var bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n            var needsLoopFix;\n            if (newPosition < swiper.maxTranslate()) {\n                if (params.freeMode.momentumBounce) {\n                    if (newPosition + swiper.maxTranslate() < -bounceAmount) newPosition = swiper.maxTranslate() - bounceAmount;\n                    afterBouncePosition = swiper.maxTranslate();\n                    doBounce = true;\n                    data.allowMomentumBounce = true;\n                } else newPosition = swiper.maxTranslate();\n                if (params.loop && params.centeredSlides) needsLoopFix = true;\n            } else if (newPosition > swiper.minTranslate()) {\n                if (params.freeMode.momentumBounce) {\n                    if (newPosition - swiper.minTranslate() > bounceAmount) newPosition = swiper.minTranslate() + bounceAmount;\n                    afterBouncePosition = swiper.minTranslate();\n                    doBounce = true;\n                    data.allowMomentumBounce = true;\n                } else newPosition = swiper.minTranslate();\n                if (params.loop && params.centeredSlides) needsLoopFix = true;\n            } else if (params.freeMode.sticky) {\n                var nextSlide;\n                for(var j = 0; j < snapGrid.length; j += 1)if (snapGrid[j] > -newPosition) {\n                    nextSlide = j;\n                    break;\n                }\n                if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === \"next\") newPosition = snapGrid[nextSlide];\n                else newPosition = snapGrid[nextSlide - 1];\n                newPosition = -newPosition;\n            }\n            if (needsLoopFix) once(\"transitionEnd\", function() {\n                swiper.loopFix();\n            });\n             // Fix duration\n            if (swiper.velocity !== 0) {\n                if (rtl) momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n                else momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n                if (params.freeMode.sticky) {\n                    // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n                    // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n                    // It's easy to see this when simulating touch with mouse events. To fix this,\n                    // limit single-slide swipes to the default slide duration. This also has the\n                    // nice side effect of matching slide speed if the user stopped moving before\n                    // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n                    // For faster swipes, also apply limits (albeit higher ones).\n                    var moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n                    var currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n                    if (moveDistance < currentSlideSize) momentumDuration = params.speed;\n                    else if (moveDistance < 2 * currentSlideSize) momentumDuration = params.speed * 1.5;\n                    else momentumDuration = params.speed * 2.5;\n                }\n            } else if (params.freeMode.sticky) {\n                swiper.slideToClosest();\n                return;\n            }\n            if (params.freeMode.momentumBounce && doBounce) {\n                swiper.updateProgress(afterBouncePosition);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                swiper.animating = true;\n                $wrapperEl.transitionEnd(function() {\n                    if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n                    emit(\"momentumBounce\");\n                    swiper.setTransition(params.speed);\n                    setTimeout(function() {\n                        swiper.setTranslate(afterBouncePosition);\n                        $wrapperEl.transitionEnd(function() {\n                            if (!swiper || swiper.destroyed) return;\n                            swiper.transitionEnd();\n                        });\n                    }, 0);\n                });\n            } else if (swiper.velocity) {\n                emit(\"_freeModeNoMomentumRelease\");\n                swiper.updateProgress(newPosition);\n                swiper.setTransition(momentumDuration);\n                swiper.setTranslate(newPosition);\n                swiper.transitionStart(true, swiper.swipeDirection);\n                if (!swiper.animating) {\n                    swiper.animating = true;\n                    $wrapperEl.transitionEnd(function() {\n                        if (!swiper || swiper.destroyed) return;\n                        swiper.transitionEnd();\n                    });\n                }\n            } else swiper.updateProgress(newPosition);\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        } else if (params.freeMode.sticky) {\n            swiper.slideToClosest();\n            return;\n        } else if (params.freeMode) emit(\"_freeModeNoMomentumRelease\");\n        if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n            swiper.updateProgress();\n            swiper.updateActiveIndex();\n            swiper.updateSlidesClasses();\n        }\n    }\n    Object.assign(swiper, {\n        freeMode: {\n            onTouchStart: onTouchStart,\n            onTouchMove: onTouchMove,\n            onTouchEnd: onTouchEnd\n        }\n    });\n}\n\n\n\n\nfunction $77fa60978fb4db69$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams;\n    extendParams({\n        grid: {\n            rows: 1,\n            fill: \"column\"\n        }\n    });\n    var slidesNumberEvenToRows;\n    var slidesPerRow;\n    var numFullColumns;\n    var initSlides = function(slidesLength) {\n        var slidesPerView = swiper.params.slidesPerView;\n        var _swiper_params_grid = swiper.params.grid, rows = _swiper_params_grid.rows, fill = _swiper_params_grid.fill;\n        slidesPerRow = slidesNumberEvenToRows / rows;\n        numFullColumns = Math.floor(slidesLength / rows);\n        if (Math.floor(slidesLength / rows) === slidesLength / rows) slidesNumberEvenToRows = slidesLength;\n        else slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n        if (slidesPerView !== \"auto\" && fill === \"row\") slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    };\n    var updateSlide = function(i, slide, slidesLength, getDirectionLabel) {\n        var _swiper_params = swiper.params, slidesPerGroup = _swiper_params.slidesPerGroup, spaceBetween = _swiper_params.spaceBetween;\n        var _swiper_params_grid = swiper.params.grid, rows = _swiper_params_grid.rows, fill = _swiper_params_grid.fill; // Set slides order\n        var newSlideOrderIndex;\n        var column;\n        var row;\n        if (fill === \"row\" && slidesPerGroup > 1) {\n            var groupIndex = Math.floor(i / (slidesPerGroup * rows));\n            var slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n            var columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n            row = Math.floor(slideIndexInGroup / columnsInGroup);\n            column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n            newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n            slide.css({\n                \"-webkit-order\": newSlideOrderIndex,\n                order: newSlideOrderIndex\n            });\n        } else if (fill === \"column\") {\n            column = Math.floor(i / rows);\n            row = i - column * rows;\n            if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n                row += 1;\n                if (row >= rows) {\n                    row = 0;\n                    column += 1;\n                }\n            }\n        } else {\n            row = Math.floor(i / slidesPerRow);\n            column = i - row * slidesPerRow;\n        }\n        slide.css(getDirectionLabel(\"margin-top\"), row !== 0 ? spaceBetween && \"\".concat(spaceBetween, \"px\") : \"\");\n    };\n    var updateWrapperSize = function(slideSize, snapGrid, getDirectionLabel) {\n        var _swiper_params = swiper.params, spaceBetween = _swiper_params.spaceBetween, centeredSlides = _swiper_params.centeredSlides, roundLengths = _swiper_params.roundLengths;\n        var rows = swiper.params.grid.rows;\n        swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n        swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n        swiper.$wrapperEl.css((0, $a568c0d5880c90ba$export$1e71eb4bef00f6b0)({}, getDirectionLabel(\"width\"), \"\".concat(swiper.virtualSize + spaceBetween, \"px\")));\n        if (centeredSlides) {\n            var _snapGrid;\n            snapGrid.splice(0, snapGrid.length);\n            var newSlidesGrid = [];\n            for(var i = 0; i < snapGrid.length; i += 1){\n                var slidesGridItem = snapGrid[i];\n                if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n                if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n            }\n            (_snapGrid = snapGrid).push.apply(_snapGrid, (0, $7fed984c591c61d1$export$1b5e630bc3aea29f)(newSlidesGrid));\n        }\n    };\n    swiper.grid = {\n        initSlides: initSlides,\n        updateSlide: updateSlide,\n        updateWrapperSize: updateWrapperSize\n    };\n}\n\n\nfunction $f4c91b3b7f316ab7$export$2e2bcd8739ae039(slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params;\n    if (params.loop) swiper.loopDestroy();\n    if (typeof slides === \"object\" && \"length\" in slides) {\n        for(var i = 0; i < slides.length; i += 1)if (slides[i]) $wrapperEl.append(slides[i]);\n    } else $wrapperEl.append(slides);\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer) swiper.update();\n}\n\n\nfunction $2813cfd83c41305e$export$2e2bcd8739ae039(slides) {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n    if (params.loop) swiper.loopDestroy();\n    var newActiveIndex = activeIndex + 1;\n    if (typeof slides === \"object\" && \"length\" in slides) {\n        for(var i = 0; i < slides.length; i += 1)if (slides[i]) $wrapperEl.prepend(slides[i]);\n        newActiveIndex = activeIndex + slides.length;\n    } else $wrapperEl.prepend(slides);\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer) swiper.update();\n    swiper.slideTo(newActiveIndex, 0, false);\n}\n\n\nfunction $18636735d4558718$export$2e2bcd8739ae039(index, slides) {\n    var swiper = this;\n    var $wrapperEl = swiper.$wrapperEl, params = swiper.params, activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\".concat(params.slideClass));\n    }\n    var baseLength = swiper.slides.length;\n    if (index <= 0) {\n        swiper.prependSlide(slides);\n        return;\n    }\n    if (index >= baseLength) {\n        swiper.appendSlide(slides);\n        return;\n    }\n    var newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n    var slidesBuffer = [];\n    for(var i = baseLength - 1; i >= index; i -= 1){\n        var currentSlide = swiper.slides.eq(i);\n        currentSlide.remove();\n        slidesBuffer.unshift(currentSlide);\n    }\n    if (typeof slides === \"object\" && \"length\" in slides) {\n        for(var i1 = 0; i1 < slides.length; i1 += 1)if (slides[i1]) $wrapperEl.append(slides[i1]);\n        newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n    } else $wrapperEl.append(slides);\n    for(var i2 = 0; i2 < slidesBuffer.length; i2 += 1)$wrapperEl.append(slidesBuffer[i2]);\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer) swiper.update();\n    if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    else swiper.slideTo(newActiveIndex, 0, false);\n}\n\n\nfunction $716dd64e8af94877$export$2e2bcd8739ae039(slidesIndexes) {\n    var swiper = this;\n    var params = swiper.params, $wrapperEl = swiper.$wrapperEl, activeIndex = swiper.activeIndex;\n    var activeIndexBuffer = activeIndex;\n    if (params.loop) {\n        activeIndexBuffer -= swiper.loopedSlides;\n        swiper.loopDestroy();\n        swiper.slides = $wrapperEl.children(\".\".concat(params.slideClass));\n    }\n    var newActiveIndex = activeIndexBuffer;\n    var indexToRemove;\n    if (typeof slidesIndexes === \"object\" && \"length\" in slidesIndexes) {\n        for(var i = 0; i < slidesIndexes.length; i += 1){\n            indexToRemove = slidesIndexes[i];\n            if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n            if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        }\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    } else {\n        indexToRemove = slidesIndexes;\n        if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n        if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n        newActiveIndex = Math.max(newActiveIndex, 0);\n    }\n    if (params.loop) swiper.loopCreate();\n    if (!params.observer) swiper.update();\n    if (params.loop) swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n    else swiper.slideTo(newActiveIndex, 0, false);\n}\n\n\nfunction $09cd9ab98ba19d8c$export$2e2bcd8739ae039() {\n    var swiper = this;\n    var slidesIndexes = [];\n    for(var i = 0; i < swiper.slides.length; i += 1)slidesIndexes.push(i);\n    swiper.removeSlide(slidesIndexes);\n}\n\n\nfunction $8eb9175b35adb905$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper;\n    Object.assign(swiper, {\n        appendSlide: (0, $f4c91b3b7f316ab7$export$2e2bcd8739ae039).bind(swiper),\n        prependSlide: (0, $2813cfd83c41305e$export$2e2bcd8739ae039).bind(swiper),\n        addSlide: (0, $18636735d4558718$export$2e2bcd8739ae039).bind(swiper),\n        removeSlide: (0, $716dd64e8af94877$export$2e2bcd8739ae039).bind(swiper),\n        removeAllSlides: (0, $09cd9ab98ba19d8c$export$2e2bcd8739ae039).bind(swiper)\n    });\n}\n\n\nfunction $972bb72b4792baa3$export$2e2bcd8739ae039(params) {\n    var effect = params.effect, swiper = params.swiper, on = params.on, setTranslate = params.setTranslate, setTransition = params.setTransition, overwriteParams = params.overwriteParams, perspective = params.perspective, recreateShadows = params.recreateShadows, getEffectParams = params.getEffectParams;\n    on(\"beforeInit\", function() {\n        if (swiper.params.effect !== effect) return;\n        swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass).concat(effect));\n        if (perspective && perspective()) swiper.classNames.push(\"\".concat(swiper.params.containerModifierClass, \"3d\"));\n        var overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n        Object.assign(swiper.params, overwriteParamsResult);\n        Object.assign(swiper.originalParams, overwriteParamsResult);\n    });\n    on(\"setTranslate\", function() {\n        if (swiper.params.effect !== effect) return;\n        setTranslate();\n    });\n    on(\"setTransition\", function(_s, duration) {\n        if (swiper.params.effect !== effect) return;\n        setTransition(duration);\n    });\n    on(\"transitionEnd\", function() {\n        if (swiper.params.effect !== effect) return;\n        if (recreateShadows) {\n            if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows\n            swiper.slides.each(function(slideEl) {\n                var $slideEl = swiper.$(slideEl);\n                $slideEl.find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").remove();\n            }); // create new one\n            recreateShadows();\n        }\n    });\n    var requireUpdateOnVirtual;\n    on(\"virtualUpdate\", function() {\n        if (swiper.params.effect !== effect) return;\n        if (!swiper.slides.length) requireUpdateOnVirtual = true;\n        requestAnimationFrame(function() {\n            if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n                setTranslate();\n                requireUpdateOnVirtual = false;\n            }\n        });\n    });\n}\n\n\nfunction $a3fe64242580cf29$export$2e2bcd8739ae039(effectParams, $slideEl) {\n    if (effectParams.transformEl) return $slideEl.find(effectParams.transformEl).css({\n        \"backface-visibility\": \"hidden\",\n        \"-webkit-backface-visibility\": \"hidden\"\n    });\n    return $slideEl;\n}\n\n\nfunction $32bf8419d687a016$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, duration = param.duration, transformEl = param.transformEl, allSlides = param.allSlides;\n    var slides = swiper.slides, activeIndex = swiper.activeIndex, $wrapperEl = swiper.$wrapperEl;\n    if (swiper.params.virtualTranslate && duration !== 0) {\n        var eventTriggered = false;\n        var $transitionEndTarget;\n        if (allSlides) $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n        else $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\n        $transitionEndTarget.transitionEnd(function() {\n            if (eventTriggered) return;\n            if (!swiper || swiper.destroyed) return;\n            eventTriggered = true;\n            swiper.animating = false;\n            var triggerEvents = [\n                \"webkitTransitionEnd\",\n                \"transitionend\"\n            ];\n            for(var i = 0; i < triggerEvents.length; i += 1)$wrapperEl.trigger(triggerEvents[i]);\n        });\n    }\n}\n\n\nfunction $c350e93cde64b627$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        fadeEffect: {\n            crossFade: false,\n            transformEl: null\n        }\n    });\n    var setTranslate = function() {\n        var slides = swiper.slides;\n        var params = swiper.params.fadeEffect;\n        for(var i = 0; i < slides.length; i += 1){\n            var $slideEl = swiper.slides.eq(i);\n            var offset = $slideEl[0].swiperSlideOffset;\n            var tx = -offset;\n            if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n            var ty = 0;\n            if (!swiper.isHorizontal()) {\n                ty = tx;\n                tx = 0;\n            }\n            var slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n            var $targetEl = (0, $a3fe64242580cf29$export$2e2bcd8739ae039)(params, $slideEl);\n            $targetEl.css({\n                opacity: slideOpacity\n            }).transform(\"translate3d(\".concat(tx, \"px, \").concat(ty, \"px, 0px)\"));\n        }\n    };\n    var setTransition = function(duration) {\n        var transformEl = swiper.params.fadeEffect.transformEl;\n        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration);\n        (0, $32bf8419d687a016$export$2e2bcd8739ae039)({\n            swiper: swiper,\n            duration: duration,\n            transformEl: transformEl,\n            allSlides: true\n        });\n    };\n    (0, $972bb72b4792baa3$export$2e2bcd8739ae039)({\n        effect: \"fade\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        overwriteParams: function() {\n            return {\n                slidesPerView: 1,\n                slidesPerGroup: 1,\n                watchSlidesProgress: true,\n                spaceBetween: 0,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\nfunction $91a47f6635ab6e34$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        cubeEffect: {\n            slideShadows: true,\n            shadow: true,\n            shadowOffset: 20,\n            shadowScale: 0.94\n        }\n    });\n    var createSlideShadows = function($slideEl, progress, isHorizontal) {\n        var shadowBefore = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n        var shadowAfter = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n        if (shadowBefore.length === 0) {\n            shadowBefore = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<div class=\"swiper-slide-shadow-'.concat(isHorizontal ? \"left\" : \"top\", '\"></div>'));\n            $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n            shadowAfter = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<div class=\"swiper-slide-shadow-'.concat(isHorizontal ? \"right\" : \"bottom\", '\"></div>'));\n            $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n    };\n    var recreateShadows = function() {\n        // create new ones\n        var isHorizontal = swiper.isHorizontal();\n        swiper.slides.each(function(slideEl) {\n            var progress = Math.max(Math.min(slideEl.progress, 1), -1);\n            createSlideShadows((0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl), progress, isHorizontal);\n        });\n    };\n    var setTranslate = function() {\n        var $el = swiper.$el, $wrapperEl = swiper.$wrapperEl, slides = swiper.slides, swiperWidth = swiper.width, swiperHeight = swiper.height, rtl = swiper.rtlTranslate, swiperSize = swiper.size, browser = swiper.browser;\n        var params = swiper.params.cubeEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n        var wrapperRotate = 0;\n        var $cubeShadowEl;\n        if (params.shadow) {\n            if (isHorizontal) {\n                $cubeShadowEl = $wrapperEl.find(\".swiper-cube-shadow\");\n                if ($cubeShadowEl.length === 0) {\n                    $cubeShadowEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<div class=\"swiper-cube-shadow\"></div>');\n                    $wrapperEl.append($cubeShadowEl);\n                }\n                $cubeShadowEl.css({\n                    height: \"\".concat(swiperWidth, \"px\")\n                });\n            } else {\n                $cubeShadowEl = $el.find(\".swiper-cube-shadow\");\n                if ($cubeShadowEl.length === 0) {\n                    $cubeShadowEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<div class=\"swiper-cube-shadow\"></div>');\n                    $el.append($cubeShadowEl);\n                }\n            }\n        }\n        for(var i = 0; i < slides.length; i += 1){\n            var $slideEl = slides.eq(i);\n            var slideIndex = i;\n            if (isVirtual) slideIndex = parseInt($slideEl.attr(\"data-swiper-slide-index\"), 10);\n            var slideAngle = slideIndex * 90;\n            var round = Math.floor(slideAngle / 360);\n            if (rtl) {\n                slideAngle = -slideAngle;\n                round = Math.floor(-slideAngle / 360);\n            }\n            var progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n            var tx = 0;\n            var ty = 0;\n            var tz = 0;\n            if (slideIndex % 4 === 0) {\n                tx = -round * 4 * swiperSize;\n                tz = 0;\n            } else if ((slideIndex - 1) % 4 === 0) {\n                tx = 0;\n                tz = -round * 4 * swiperSize;\n            } else if ((slideIndex - 2) % 4 === 0) {\n                tx = swiperSize + round * 4 * swiperSize;\n                tz = swiperSize;\n            } else if ((slideIndex - 3) % 4 === 0) {\n                tx = -swiperSize;\n                tz = 3 * swiperSize + swiperSize * 4 * round;\n            }\n            if (rtl) tx = -tx;\n            if (!isHorizontal) {\n                ty = tx;\n                tx = 0;\n            }\n            var transform = \"rotateX(\".concat(isHorizontal ? 0 : -slideAngle, \"deg) rotateY(\").concat(isHorizontal ? slideAngle : 0, \"deg) translate3d(\").concat(tx, \"px, \").concat(ty, \"px, \").concat(tz, \"px)\");\n            if (progress <= 1 && progress > -1) {\n                wrapperRotate = slideIndex * 90 + progress * 90;\n                if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n            }\n            $slideEl.transform(transform);\n            if (params.slideShadows) createSlideShadows($slideEl, progress, isHorizontal);\n        }\n        $wrapperEl.css({\n            \"-webkit-transform-origin\": \"50% 50% -\".concat(swiperSize / 2, \"px\"),\n            \"transform-origin\": \"50% 50% -\".concat(swiperSize / 2, \"px\")\n        });\n        if (params.shadow) {\n            if (isHorizontal) $cubeShadowEl.transform(\"translate3d(0px, \".concat(swiperWidth / 2 + params.shadowOffset, \"px, \").concat(-swiperWidth / 2, \"px) rotateX(90deg) rotateZ(0deg) scale(\").concat(params.shadowScale, \")\"));\n            else {\n                var shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n                var multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n                var scale1 = params.shadowScale;\n                var scale2 = params.shadowScale / multiplier;\n                var offset = params.shadowOffset;\n                $cubeShadowEl.transform(\"scale3d(\".concat(scale1, \", 1, \").concat(scale2, \") translate3d(0px, \").concat(swiperHeight / 2 + offset, \"px, \").concat(-swiperHeight / 2 / scale2, \"px) rotateX(-90deg)\"));\n            }\n        }\n        var zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n        $wrapperEl.transform(\"translate3d(0px,0,\".concat(zFactor, \"px) rotateX(\").concat(swiper.isHorizontal() ? 0 : wrapperRotate, \"deg) rotateY(\").concat(swiper.isHorizontal() ? -wrapperRotate : 0, \"deg)\"));\n        $wrapperEl[0].style.setProperty(\"--swiper-cube-translate-z\", \"\".concat(zFactor, \"px\"));\n    };\n    var setTransition = function(duration) {\n        var $el = swiper.$el, slides = swiper.slides;\n        slides.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n        if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) $el.find(\".swiper-cube-shadow\").transition(duration);\n    };\n    (0, $972bb72b4792baa3$export$2e2bcd8739ae039)({\n        effect: \"cube\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        recreateShadows: recreateShadows,\n        getEffectParams: function() {\n            return swiper.params.cubeEffect;\n        },\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                slidesPerView: 1,\n                slidesPerGroup: 1,\n                watchSlidesProgress: true,\n                resistanceRatio: 0,\n                spaceBetween: 0,\n                centeredSlides: false,\n                virtualTranslate: true\n            };\n        }\n    });\n}\n\n\n\n\nfunction $aa588c71d5569b8d$export$2e2bcd8739ae039(params, $slideEl, side) {\n    var shadowClass = \"swiper-slide-shadow\".concat(side ? \"-\".concat(side) : \"\");\n    var $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n    var $shadowEl = $shadowContainer.children(\".\".concat(shadowClass));\n    if (!$shadowEl.length) {\n        $shadowEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)('<div class=\"swiper-slide-shadow'.concat(side ? \"-\".concat(side) : \"\", '\"></div>'));\n        $shadowContainer.append($shadowEl);\n    }\n    return $shadowEl;\n}\n\n\n\n\n\nfunction $39c9ac1e5fc0a929$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        flipEffect: {\n            slideShadows: true,\n            limitRotation: true,\n            transformEl: null\n        }\n    });\n    var createSlideShadows = function($slideEl, progress, params) {\n        var shadowBefore = swiper.isHorizontal() ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n        var shadowAfter = swiper.isHorizontal() ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n        if (shadowBefore.length === 0) shadowBefore = (0, $aa588c71d5569b8d$export$2e2bcd8739ae039)(params, $slideEl, swiper.isHorizontal() ? \"left\" : \"top\");\n        if (shadowAfter.length === 0) shadowAfter = (0, $aa588c71d5569b8d$export$2e2bcd8739ae039)(params, $slideEl, swiper.isHorizontal() ? \"right\" : \"bottom\");\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n    };\n    var recreateShadows = function() {\n        // Set shadows\n        var params = swiper.params.flipEffect;\n        swiper.slides.each(function(slideEl) {\n            var $slideEl = (0, $181e7e5b06640d28$export$2e2bcd8739ae039)(slideEl);\n            var progress = $slideEl[0].progress;\n            if (swiper.params.flipEffect.limitRotation) progress = Math.max(Math.min(slideEl.progress, 1), -1);\n            createSlideShadows($slideEl, progress, params);\n        });\n    };\n    var setTranslate = function() {\n        var slides = swiper.slides, rtl = swiper.rtlTranslate;\n        var params = swiper.params.flipEffect;\n        for(var i = 0; i < slides.length; i += 1){\n            var $slideEl = slides.eq(i);\n            var progress = $slideEl[0].progress;\n            if (swiper.params.flipEffect.limitRotation) progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n            var offset = $slideEl[0].swiperSlideOffset;\n            var rotate = -180 * progress;\n            var rotateY = rotate;\n            var rotateX = 0;\n            var tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n            var ty = 0;\n            if (!swiper.isHorizontal()) {\n                ty = tx;\n                tx = 0;\n                rotateX = -rotateY;\n                rotateY = 0;\n            } else if (rtl) rotateY = -rotateY;\n            $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n            if (params.slideShadows) createSlideShadows($slideEl, progress, params);\n            var transform = \"translate3d(\".concat(tx, \"px, \").concat(ty, \"px, 0px) rotateX(\").concat(rotateX, \"deg) rotateY(\").concat(rotateY, \"deg)\");\n            var $targetEl = (0, $a3fe64242580cf29$export$2e2bcd8739ae039)(params, $slideEl);\n            $targetEl.transform(transform);\n        }\n    };\n    var setTransition = function(duration) {\n        var transformEl = swiper.params.flipEffect.transformEl;\n        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n        (0, $32bf8419d687a016$export$2e2bcd8739ae039)({\n            swiper: swiper,\n            duration: duration,\n            transformEl: transformEl\n        });\n    };\n    (0, $972bb72b4792baa3$export$2e2bcd8739ae039)({\n        effect: \"flip\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        recreateShadows: recreateShadows,\n        getEffectParams: function() {\n            return swiper.params.flipEffect;\n        },\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                slidesPerView: 1,\n                slidesPerGroup: 1,\n                watchSlidesProgress: true,\n                spaceBetween: 0,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\n\nfunction $b8935e0ef97f22e7$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        coverflowEffect: {\n            rotate: 50,\n            stretch: 0,\n            depth: 100,\n            scale: 1,\n            modifier: 1,\n            slideShadows: true,\n            transformEl: null\n        }\n    });\n    var setTranslate = function() {\n        var swiperWidth = swiper.width, swiperHeight = swiper.height, slides = swiper.slides, slidesSizesGrid = swiper.slidesSizesGrid;\n        var params = swiper.params.coverflowEffect;\n        var isHorizontal = swiper.isHorizontal();\n        var transform = swiper.translate;\n        var center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n        var rotate = isHorizontal ? params.rotate : -params.rotate;\n        var translate = params.depth; // Each slide offset from center\n        for(var i = 0, length = slides.length; i < length; i += 1){\n            var $slideEl = slides.eq(i);\n            var slideSize = slidesSizesGrid[i];\n            var slideOffset = $slideEl[0].swiperSlideOffset;\n            var centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n            var offsetMultiplier = typeof params.modifier === \"function\" ? params.modifier(centerOffset) : centerOffset * params.modifier;\n            var rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n            var rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n            var translateZ = -translate * Math.abs(offsetMultiplier);\n            var stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n            if (typeof stretch === \"string\" && stretch.indexOf(\"%\") !== -1) stretch = parseFloat(params.stretch) / 100 * slideSize;\n            var translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n            var translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n            var scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n            if (Math.abs(translateX) < 0.001) translateX = 0;\n            if (Math.abs(translateY) < 0.001) translateY = 0;\n            if (Math.abs(translateZ) < 0.001) translateZ = 0;\n            if (Math.abs(rotateY) < 0.001) rotateY = 0;\n            if (Math.abs(rotateX) < 0.001) rotateX = 0;\n            if (Math.abs(scale) < 0.001) scale = 0;\n            var slideTransform = \"translate3d(\".concat(translateX, \"px,\").concat(translateY, \"px,\").concat(translateZ, \"px)  rotateX(\").concat(rotateX, \"deg) rotateY(\").concat(rotateY, \"deg) scale(\").concat(scale, \")\");\n            var $targetEl = (0, $a3fe64242580cf29$export$2e2bcd8739ae039)(params, $slideEl);\n            $targetEl.transform(slideTransform);\n            $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n            if (params.slideShadows) {\n                // Set shadows\n                var $shadowBeforeEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-left\") : $slideEl.find(\".swiper-slide-shadow-top\");\n                var $shadowAfterEl = isHorizontal ? $slideEl.find(\".swiper-slide-shadow-right\") : $slideEl.find(\".swiper-slide-shadow-bottom\");\n                if ($shadowBeforeEl.length === 0) $shadowBeforeEl = (0, $aa588c71d5569b8d$export$2e2bcd8739ae039)(params, $slideEl, isHorizontal ? \"left\" : \"top\");\n                if ($shadowAfterEl.length === 0) $shadowAfterEl = (0, $aa588c71d5569b8d$export$2e2bcd8739ae039)(params, $slideEl, isHorizontal ? \"right\" : \"bottom\");\n                if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n                if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n            }\n        }\n    };\n    var setTransition = function(duration) {\n        var transformEl = swiper.params.coverflowEffect.transformEl;\n        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find(\".swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left\").transition(duration);\n    };\n    (0, $972bb72b4792baa3$export$2e2bcd8739ae039)({\n        effect: \"coverflow\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                watchSlidesProgress: true\n            };\n        }\n    });\n}\n\n\n\n\n\n\nfunction $ea0016d2f975bd19$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        creativeEffect: {\n            transformEl: null,\n            limitProgress: 1,\n            shadowPerProgress: false,\n            progressMultiplier: 1,\n            perspective: true,\n            prev: {\n                translate: [\n                    0,\n                    0,\n                    0\n                ],\n                rotate: [\n                    0,\n                    0,\n                    0\n                ],\n                opacity: 1,\n                scale: 1\n            },\n            next: {\n                translate: [\n                    0,\n                    0,\n                    0\n                ],\n                rotate: [\n                    0,\n                    0,\n                    0\n                ],\n                opacity: 1,\n                scale: 1\n            }\n        }\n    });\n    var getTranslateValue = function(value) {\n        if (typeof value === \"string\") return value;\n        return \"\".concat(value, \"px\");\n    };\n    var setTranslate = function() {\n        var _loop = function(i) {\n            var $slideEl = slides.eq(i);\n            var slideProgress = $slideEl[0].progress;\n            var progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n            var originalProgress = progress;\n            if (!isCenteredSlides) originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n            var offset = $slideEl[0].swiperSlideOffset;\n            var t = [\n                swiper.params.cssMode ? -offset - swiper.translate : -offset,\n                0,\n                0\n            ];\n            var r = [\n                0,\n                0,\n                0\n            ];\n            var custom = false;\n            if (!swiper.isHorizontal()) {\n                t[1] = t[0];\n                t[0] = 0;\n            }\n            var data = {\n                translate: [\n                    0,\n                    0,\n                    0\n                ],\n                rotate: [\n                    0,\n                    0,\n                    0\n                ],\n                scale: 1,\n                opacity: 1\n            };\n            if (progress < 0) {\n                data = params.next;\n                custom = true;\n            } else if (progress > 0) {\n                data = params.prev;\n                custom = true;\n            } // set translate\n            t.forEach(function(value, index) {\n                t[index] = \"calc(\".concat(value, \"px + (\").concat(getTranslateValue(data.translate[index]), \" * \").concat(Math.abs(progress * multiplier), \"))\");\n            }); // set rotates\n            r.forEach(function(value, index) {\n                r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n            });\n            $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n            var translateString = t.join(\", \");\n            var rotateString = \"rotateX(\".concat(r[0], \"deg) rotateY(\").concat(r[1], \"deg) rotateZ(\").concat(r[2], \"deg)\");\n            var scaleString = originalProgress < 0 ? \"scale(\".concat(1 + (1 - data.scale) * originalProgress * multiplier, \")\") : \"scale(\".concat(1 - (1 - data.scale) * originalProgress * multiplier, \")\");\n            var opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n            var transform = \"translate3d(\".concat(translateString, \") \").concat(rotateString, \" \").concat(scaleString); // Set shadows\n            if (custom && data.shadow || !custom) {\n                var $shadowEl = $slideEl.children(\".swiper-slide-shadow\");\n                if ($shadowEl.length === 0 && data.shadow) $shadowEl = (0, $aa588c71d5569b8d$export$2e2bcd8739ae039)(params, $slideEl);\n                if ($shadowEl.length) {\n                    var shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n                    $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n                }\n            }\n            var $targetEl = (0, $a3fe64242580cf29$export$2e2bcd8739ae039)(params, $slideEl);\n            $targetEl.transform(transform).css({\n                opacity: opacityString\n            });\n            if (data.origin) $targetEl.css(\"transform-origin\", data.origin);\n        };\n        var slides = swiper.slides, $wrapperEl = swiper.$wrapperEl, slidesSizesGrid = swiper.slidesSizesGrid;\n        var params = swiper.params.creativeEffect;\n        var multiplier = params.progressMultiplier;\n        var isCenteredSlides = swiper.params.centeredSlides;\n        if (isCenteredSlides) {\n            var margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n            $wrapperEl.transform(\"translateX(calc(50% - \".concat(margin, \"px))\"));\n        }\n        for(var i = 0; i < slides.length; i += 1)_loop(i);\n    };\n    var setTransition = function(duration) {\n        var transformEl = swiper.params.creativeEffect.transformEl;\n        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find(\".swiper-slide-shadow\").transition(duration);\n        (0, $32bf8419d687a016$export$2e2bcd8739ae039)({\n            swiper: swiper,\n            duration: duration,\n            transformEl: transformEl,\n            allSlides: true\n        });\n    };\n    (0, $972bb72b4792baa3$export$2e2bcd8739ae039)({\n        effect: \"creative\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        perspective: function() {\n            return swiper.params.creativeEffect.perspective;\n        },\n        overwriteParams: function() {\n            return {\n                watchSlidesProgress: true,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\n\n\nfunction $972f243acdc28125$export$2e2bcd8739ae039(param) {\n    var swiper = param.swiper, extendParams = param.extendParams, on = param.on;\n    extendParams({\n        cardsEffect: {\n            slideShadows: true,\n            transformEl: null,\n            rotate: true,\n            perSlideRotate: 2,\n            perSlideOffset: 8\n        }\n    });\n    var setTranslate = function() {\n        var slides = swiper.slides, activeIndex = swiper.activeIndex;\n        var params = swiper.params.cardsEffect;\n        var _swiper_touchEventsData = swiper.touchEventsData, startTranslate = _swiper_touchEventsData.startTranslate, isTouched = _swiper_touchEventsData.isTouched;\n        var currentTranslate = swiper.translate;\n        for(var i = 0; i < slides.length; i += 1){\n            var $slideEl = slides.eq(i);\n            var slideProgress = $slideEl[0].progress;\n            var progress = Math.min(Math.max(slideProgress, -4), 4);\n            var offset = $slideEl[0].swiperSlideOffset;\n            if (swiper.params.centeredSlides && !swiper.params.cssMode) swiper.$wrapperEl.transform(\"translateX(\".concat(swiper.minTranslate(), \"px)\"));\n            if (swiper.params.centeredSlides && swiper.params.cssMode) offset -= slides[0].swiperSlideOffset;\n            var tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n            var tY = 0;\n            var tZ = -100 * Math.abs(progress);\n            var scale = 1;\n            var rotate = -params.perSlideRotate * progress;\n            var tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n            var slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n            var isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n            var isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n            if (isSwipeToNext || isSwipeToPrev) {\n                var subProgress = Math.pow(1 - Math.abs((Math.abs(progress) - 0.5) / 0.5), 0.5);\n                rotate += -28 * progress * subProgress;\n                scale += -0.5 * subProgress;\n                tXAdd += 96 * subProgress;\n                tY = \"\".concat(-25 * subProgress * Math.abs(progress), \"%\");\n            }\n            if (progress < 0) // next\n            tX = \"calc(\".concat(tX, \"px + (\").concat(tXAdd * Math.abs(progress), \"%))\");\n            else if (progress > 0) // prev\n            tX = \"calc(\".concat(tX, \"px + (-\").concat(tXAdd * Math.abs(progress), \"%))\");\n            else tX = \"\".concat(tX, \"px\");\n            if (!swiper.isHorizontal()) {\n                var prevY = tY;\n                tY = tX;\n                tX = prevY;\n            }\n            var scaleString = progress < 0 ? \"\".concat(1 + (1 - scale) * progress) : \"\".concat(1 - (1 - scale) * progress);\n            var transform = \"\\n        translate3d(\".concat(tX, \", \").concat(tY, \", \").concat(tZ, \"px)\\n        rotateZ(\").concat(params.rotate ? rotate : 0, \"deg)\\n        scale(\").concat(scaleString, \")\\n      \");\n            if (params.slideShadows) {\n                // Set shadows\n                var $shadowEl = $slideEl.find(\".swiper-slide-shadow\");\n                if ($shadowEl.length === 0) $shadowEl = (0, $aa588c71d5569b8d$export$2e2bcd8739ae039)(params, $slideEl);\n                if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n            }\n            $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n            var $targetEl = (0, $a3fe64242580cf29$export$2e2bcd8739ae039)(params, $slideEl);\n            $targetEl.transform(transform);\n        }\n    };\n    var setTransition = function(duration) {\n        var transformEl = swiper.params.cardsEffect.transformEl;\n        var $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n        $transitionElements.transition(duration).find(\".swiper-slide-shadow\").transition(duration);\n        (0, $32bf8419d687a016$export$2e2bcd8739ae039)({\n            swiper: swiper,\n            duration: duration,\n            transformEl: transformEl\n        });\n    };\n    (0, $972bb72b4792baa3$export$2e2bcd8739ae039)({\n        effect: \"cards\",\n        swiper: swiper,\n        on: on,\n        setTranslate: setTranslate,\n        setTransition: setTransition,\n        perspective: function() {\n            return true;\n        },\n        overwriteParams: function() {\n            return {\n                watchSlidesProgress: true,\n                virtualTranslate: !swiper.params.cssMode\n            };\n        }\n    });\n}\n\n\n\n\nvar $a6329c5cb4925ffd$var$items = document.querySelectorAll(\".faq__item\");\ndocument.addEventListener(\"click\", function(evt) {\n    var target = evt.target;\n    if (target.className !== \"faq__button\") return;\n    var item = event.target.closest(\".faq__item\");\n    item.classList.toggle(\"hide\");\n});\n\n\n(function() {\n    var menuBtnRef = document.querySelector(\"[data-menu-button]\");\n    var mobileMenuRef = document.querySelector(\"[data-menu]\");\n    menuBtnRef.addEventListener(\"click\", function() {\n        var expanded = menuBtnRef.getAttribute(\"aria-expanded\") === \"true\" || false;\n        menuBtnRef.classList.toggle(\"is-open\");\n        menuBtnRef.setAttribute(\"aria-expanded\", !expanded);\n        mobileMenuRef.classList.toggle(\"is-open\");\n    });\n})();\n\n\nfunction $4971557da444be9d$var$initializeModal(openModalBtnSelector, backdropSelector, modalSelector, closeModalBtnSelector) {\n    var openModalBtns = document.querySelectorAll(openModalBtnSelector);\n    var backdrop = document.querySelector(backdropSelector);\n    var modal = document.querySelector(modalSelector);\n    var closeModalBtn = document.querySelector(closeModalBtnSelector);\n    function closeModal() {\n        modal.classList.add(\"is-hidden\");\n        backdrop.classList.add(\"is-hidden\");\n        document.removeEventListener(\"keydown\", onEscKeyDown);\n        backdrop.removeEventListener(\"click\", onBackdropClick);\n        modal.removeEventListener(\"click\", onModalClick);\n    }\n    function onEscKeyDown(event) {\n        if (event.key === \"Escape\") closeModal();\n    }\n    function onBackdropClick(event) {\n        if (event.target === backdrop && !modal.contains(event.target)) closeModal();\n    }\n    function onModalClick(event) {\n        if (!event.target.closest(\".modal-stores__body, .modal-payment__body\")) closeModal();\n    }\n    openModalBtns.forEach(function(openModalBtn) {\n        openModalBtn.addEventListener(\"click\", function() {\n            modal.classList.remove(\"is-hidden\");\n            backdrop.classList.remove(\"is-hidden\");\n            document.addEventListener(\"keydown\", onEscKeyDown);\n            backdrop.addEventListener(\"click\", onBackdropClick);\n            modal.addEventListener(\"click\", onModalClick);\n        });\n    });\n    closeModalBtn.addEventListener(\"click\", function() {\n        closeModal();\n    });\n}\n$4971557da444be9d$var$initializeModal(\"[openmodal-stores]\", \".backdrop-stores\", \".modal-stores\", \".modal-stores__close\");\n$4971557da444be9d$var$initializeModal(\"[openmodal-payment]\", \".backdrop-payment\", \".modal-payment\", \".modal-payment__close\");\n\n\n(function() {\n    var refs = {\n        openModalBtns: document.querySelectorAll(\"[modal-open]\"),\n        closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n        modal: document.querySelector(\"[data-modal]\")\n    };\n    refs.openModalBtns.forEach(function(btn) {\n        btn.addEventListener(\"click\", toggleModal);\n    });\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n    function toggleModal() {\n        refs.modal.classList.toggle(\"is-hidden\");\n        document.body.classList.toggle(\"scroll-lock\");\n    }\n})();\n\n\nvar $b8f9b7833fa37166$var$swiper = new (0, $1c280aeb2839a22d$export$2e2bcd8739ae039)(\".slider-reviews\", {\n    pagination: {\n        el: \".swiper-pagination\",\n        clickable: true,\n        renderBullet: function renderBullet(index, className) {\n            return '<span class=\"' + className + '\">' + \"0\" + (index + 1) + \"</span>\";\n        }\n    }\n});\n\n})();\n//# sourceMappingURL=index.1cc0fa7d.js.map\n","import Swiper from 'swiper';\n\nimport './js/content.js';\nimport './js/menu.js';\nimport './js/modalBose.js';\nimport './js/modalOrder.js';\n\nconst swiper = new Swiper('.slider-reviews', {\n  pagination: {\n    el: '.swiper-pagination',\n    clickable: true,\n    renderBullet: function (index, className) {\n      return '<span class=\"' + className + '\">' + '0' + (index + 1) + '</span>';\n    },\n  },\n});\n","/**\n * Swiper 8.4.7\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: January 30, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Lazy } from './modules/lazy/lazy.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport $ from '../shared/dom.js';\nimport { extend, now, deleteProps } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport images from './images/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images\n};\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    if (params.el && $(params.el).length > 1) {\n      const swipers = [];\n      $(params.el).each(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      }); // eslint-disable-next-line no-constructor-return\n\n      return swipers;\n    } // Swiper Instance\n\n\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    }); // Extend defaults with modules params\n\n    const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params); // add event listeners\n\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    } // Save Dom lib\n\n\n    swiper.$ = $; // Extend Swiper\n\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEvents: function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3]\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2]\n        };\n        return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper'); // Init\n\n    if (swiper.params.init) {\n      swiper.init();\n    } // Return app instance\n    // eslint-disable-next-line no-constructor-return\n\n\n    return swiper;\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.each(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    let translated;\n\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (!translated) {\n        setTranslate();\n      }\n    }\n\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n\n    swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.each(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n\n    if (swiper.rtl) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n\n    swiper.update();\n  }\n\n  mount(el) {\n    const swiper = this;\n    if (swiper.mounted) return true; // Find el\n\n    const $el = $(el || swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n        res.children = options => $el.children(options);\n\n        return res;\n      }\n\n      if (!$el.children) {\n        return $($el).children(getWrapperSelector());\n      }\n\n      return $el.children(getWrapperSelector());\n    }; // Find Wrapper\n\n\n    let $wrapperEl = getWrapper();\n\n    if ($wrapperEl.length === 0 && swiper.params.createElements) {\n      const document = getDocument();\n      const wrapper = document.createElement('div');\n      $wrapperEl = $(wrapper);\n      wrapper.className = swiper.params.wrapperClass;\n      $el.append(wrapper);\n      $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\n        $wrapperEl.append(slideEl);\n      });\n    }\n\n    Object.assign(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n    });\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit'); // Set breakpoint\n\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Add Classes\n\n\n    swiper.addClasses(); // Create loop\n\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    } // Update size\n\n\n    swiper.updateSize(); // Update slides\n\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    } // Set Grab Cursor\n\n\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    } // Slide To Initial Slide\n\n\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    } // Attach events\n\n\n    swiper.attachEvents(); // Init Flag\n\n    swiper.initialized = true; // Emit\n\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      $el,\n      $wrapperEl,\n      slides\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy'); // Init Flag\n\n    swiper.initialized = false; // Detach events\n\n    swiper.detachEvents(); // Destroy loop\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    } // Cleanup styles\n\n\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n\n      if (slides && slides.length) {\n        slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy'); // Detach emitter events\n\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      deleteProps(swiper);\n    }\n\n    swiper.destroyed = true;\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n\n    Swiper.installModule(module);\n    return Swiper;\n  }\n\n}\n\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, styles, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove } from 'dom7';\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove\n};\nObject.keys(Methods).forEach(methodName => {\n  Object.defineProperty($.fn, methodName, {\n    value: Methods[methodName],\n    writable: true\n  });\n});\nexport default $;","/**\n * Dom7 4.0.4\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2022, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: January 11, 2022\n */\nimport { getWindow, getDocument } from 'ssr-window';\n\n/* eslint-disable no-proto */\nfunction makeReactive(obj) {\n  const proto = obj.__proto__;\n  Object.defineProperty(obj, '__proto__', {\n    get() {\n      return proto;\n    },\n\n    set(value) {\n      proto.__proto__ = value;\n    }\n\n  });\n}\n\nclass Dom7 extends Array {\n  constructor(items) {\n    if (typeof items === 'number') {\n      super(items);\n    } else {\n      super(...(items || []));\n      makeReactive(this);\n    }\n  }\n\n}\n\nfunction arrayFlat(arr = []) {\n  const res = [];\n  arr.forEach(el => {\n    if (Array.isArray(el)) {\n      res.push(...arrayFlat(el));\n    } else {\n      res.push(el);\n    }\n  });\n  return res;\n}\nfunction arrayFilter(arr, callback) {\n  return Array.prototype.filter.call(arr, callback);\n}\nfunction arrayUnique(arr) {\n  const uniqueArray = [];\n\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group) => group.toUpperCase());\n}\n\n// eslint-disable-next-line\n\nfunction qsa(selector, context) {\n  if (typeof selector !== 'string') {\n    return [selector];\n  }\n\n  const a = [];\n  const res = context.querySelectorAll(selector);\n\n  for (let i = 0; i < res.length; i += 1) {\n    a.push(res[i]);\n  }\n\n  return a;\n}\n\nfunction $(selector, context) {\n  const window = getWindow();\n  const document = getDocument();\n  let arr = [];\n\n  if (!context && selector instanceof Dom7) {\n    return selector;\n  }\n\n  if (!selector) {\n    return new Dom7(arr);\n  }\n\n  if (typeof selector === 'string') {\n    const html = selector.trim();\n\n    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n      let toCreate = 'div';\n      if (html.indexOf('<li') === 0) toCreate = 'ul';\n      if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n      if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n      if (html.indexOf('<tbody') === 0) toCreate = 'table';\n      if (html.indexOf('<option') === 0) toCreate = 'select';\n      const tempParent = document.createElement(toCreate);\n      tempParent.innerHTML = html;\n\n      for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n        arr.push(tempParent.childNodes[i]);\n      }\n    } else {\n      arr = qsa(selector.trim(), context || document);\n    } // arr = qsa(selector, document);\n\n  } else if (selector.nodeType || selector === window || selector === document) {\n    arr.push(selector);\n  } else if (Array.isArray(selector)) {\n    if (selector instanceof Dom7) return selector;\n    arr = selector;\n  }\n\n  return new Dom7(arrayUnique(arr));\n}\n\n$.fn = Dom7.prototype;\n\n// eslint-disable-next-line\n\nfunction addClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.add(...classNames);\n  });\n  return this;\n}\n\nfunction removeClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.remove(...classNames);\n  });\n  return this;\n}\n\nfunction toggleClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    classNames.forEach(className => {\n      el.classList.toggle(className);\n    });\n  });\n}\n\nfunction hasClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  return arrayFilter(this, el => {\n    return classNames.filter(className => el.classList.contains(className)).length > 0;\n  }).length > 0;\n}\n\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  } // Set attrs\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n\n  return this;\n}\n\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction data(key, value) {\n  let el;\n\n  if (typeof value === 'undefined') {\n    el = this[0];\n    if (!el) return undefined; // Get value\n\n    if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n      return el.dom7ElementDataStorage[key];\n    }\n\n    const dataKey = el.getAttribute(`data-${key}`);\n\n    if (dataKey) {\n      return dataKey;\n    }\n\n    return undefined;\n  } // Set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n\n  return this;\n}\n\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\n\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n\n  if (el.dataset) {\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      const attr = el.attributes[i];\n\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n\n  return dataset;\n}\n\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    // get value\n    const el = this[0];\n    if (!el) return undefined;\n\n    if (el.multiple && el.nodeName.toLowerCase() === 'select') {\n      const values = [];\n\n      for (let i = 0; i < el.selectedOptions.length; i += 1) {\n        values.push(el.selectedOptions[i].value);\n      }\n\n      return values;\n    }\n\n    return el.value;\n  } // set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n\n  return this;\n}\n\nfunction value(value) {\n  return this.val(value);\n}\n\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transform = transform;\n  }\n\n  return this;\n}\n\nfunction transition(duration) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n  }\n\n  return this;\n}\n\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n      const parents = $(target).parents(); // eslint-disable-line\n\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    listener.apply(this, eventData);\n  }\n\n  const events = eventType.split(' ');\n  let j;\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n  const events = eventType.split(' ');\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\n\nfunction trigger(...args) {\n  const window = getWindow();\n  const events = args[0].split(' ');\n  const eventData = args[1];\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n\n      if (window.CustomEvent) {\n        const evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true\n        });\n        el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction transitionEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction animationEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('animationend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('animationend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction width() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\n\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n\n    return this[0].offsetWidth;\n  }\n\n  return null;\n}\n\nfunction height() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\n\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n\n    return this[0].offsetHeight;\n  }\n\n  return null;\n}\n\nfunction offset() {\n  if (this.length > 0) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: box.top + scrollTop - clientTop,\n      left: box.left + scrollLeft - clientLeft\n    };\n  }\n\n  return null;\n}\n\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n\n  return this;\n}\n\nfunction show() {\n  const window = getWindow();\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n\n  return this;\n}\n\nfunction styles() {\n  const window = getWindow();\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\n\nfunction css(props, value) {\n  const window = getWindow();\n  let i;\n\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      // .css('width')\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      // .css({ width: '100px' })\n      for (i = 0; i < this.length; i += 1) {\n        for (const prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n\n      return this;\n    }\n  }\n\n  if (arguments.length === 2 && typeof props === 'string') {\n    // .css('width', '100px')\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction each(callback) {\n  if (!callback) return this;\n  this.forEach((el, index) => {\n    callback.apply(el, [el, index]);\n  });\n  return this;\n}\n\nfunction filter(callback) {\n  const result = arrayFilter(this, callback);\n  return $(result);\n}\n\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n\n  return this;\n}\n\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    return this[0] ? this[0].textContent.trim() : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n\n  return this;\n}\n\nfunction is(selector) {\n  const window = getWindow();\n  const document = getDocument();\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n    compareWith = $(selector);\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  if (selector === document) {\n    return el === document;\n  }\n\n  if (selector === window) {\n    return el === window;\n  }\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nfunction index() {\n  let child = this[0];\n  let i;\n\n  if (child) {\n    i = 0; // eslint-disable-next-line\n\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n\n    return i;\n  }\n\n  return undefined;\n}\n\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n\n  if (index > length - 1) {\n    return $([]);\n  }\n\n  if (index < 0) {\n    const returnIndex = length + index;\n    if (returnIndex < 0) return $([]);\n    return $([this[returnIndex]]);\n  }\n\n  return $([this[index]]);\n}\n\nfunction append(...els) {\n  let newChild;\n  const document = getDocument();\n\n  for (let k = 0; k < els.length; k += 1) {\n    newChild = els[k];\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\n\nfunction prepend(newChild) {\n  const document = getDocument();\n  let i;\n  let j;\n\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n\n  return this;\n}\n\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\n\nfunction insertBefore(selector) {\n  const before = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\n\nfunction insertAfter(selector) {\n  const after = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\n\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return $([this[0].nextElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n\n    el = next;\n  }\n\n  return $(nextEls);\n}\n\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return $([el.previousElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (el.previousElementSibling) return $([el.previousElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n\n    el = prev;\n  }\n\n  return $(prevEls);\n}\n\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\n\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n\n  return $(parents);\n}\n\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n\n      parent = parent.parentNode;\n    }\n  }\n\n  return $(parents);\n}\n\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n\n  if (typeof selector === 'undefined') {\n    return $([]);\n  }\n\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n\n  return closest;\n}\n\nfunction find(selector) {\n  const foundElements = [];\n\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n\n  return $(foundElements);\n}\n\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].children;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector || $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n\n  return $(children);\n}\n\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n\n  return this;\n}\n\nfunction detach() {\n  return this.remove();\n}\n\nfunction add(...els) {\n  const dom = this;\n  let i;\n  let j;\n\n  for (i = 0; i < els.length; i += 1) {\n    const toAdd = $(els[i]);\n\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom.push(toAdd[j]);\n    }\n  }\n\n  return dom;\n}\n\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n\n      el.textContent = '';\n    }\n  }\n\n  return this;\n}\n\n// eslint-disable-next-line\n\nfunction scrollTo(...args) {\n  const window = getWindow();\n  let [left, top, duration, easing, callback] = args;\n\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n\n  if (typeof easing === 'undefined') easing = 'swing';\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n\n    let scrollLeft; // eslint-disable-line\n\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n\n    if (animateTop) {\n      currentTop = el.scrollTop;\n\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n\n    if (!duration) return;\n\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n      let done;\n      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n  });\n} // scrollTop(top, duration, easing, callback) {\n\n\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\n\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\n// eslint-disable-next-line\n\nfunction animate(initialProps, initialParams) {\n  const window = getWindow();\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing' // or 'linear'\n\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n\n    }, initialParams),\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - Math.cos(progress * Math.PI) / 2;\n      }\n\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n\n      return progress;\n    },\n\n    stop() {\n      if (a.frameId) {\n        window.cancelAnimationFrame(a.frameId);\n      }\n\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n\n    done(complete) {\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n\n      const elements = []; // Define & Cache Initials & Units\n\n      a.elements.each((el, index) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n        elements[index] = {\n          container: el\n        };\n        Object.keys(props).forEach(prop => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue\n          };\n        });\n      });\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress; // let el;\n\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n        }\n\n        elements.forEach(element => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach(prop => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const {\n              initialValue,\n              finalValue,\n              unit\n            } = el[prop];\n            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n            const currentValue = el[prop].currentValue;\n\n            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return; // Then call\n\n        a.frameId = window.requestAnimationFrame(render);\n      }\n\n      a.frameId = window.requestAnimationFrame(render);\n      return a;\n    }\n\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = 'resize scroll'.split(' ');\n\nfunction shortcut(name) {\n  function eventHandler(...args) {\n    if (typeof args[0] === 'undefined') {\n      for (let i = 0; i < this.length; i += 1) {\n        if (noTrigger.indexOf(name) < 0) {\n          if (name in this[i]) this[i][name]();else {\n            $(this[i]).trigger(name);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    return this.on(name, ...args);\n  }\n\n  return eventHandler;\n}\n\nconst click = shortcut('click');\nconst blur = shortcut('blur');\nconst focus = shortcut('focus');\nconst focusin = shortcut('focusin');\nconst focusout = shortcut('focusout');\nconst keyup = shortcut('keyup');\nconst keydown = shortcut('keydown');\nconst keypress = shortcut('keypress');\nconst submit = shortcut('submit');\nconst change = shortcut('change');\nconst mousedown = shortcut('mousedown');\nconst mousemove = shortcut('mousemove');\nconst mouseup = shortcut('mouseup');\nconst mouseenter = shortcut('mouseenter');\nconst mouseleave = shortcut('mouseleave');\nconst mouseout = shortcut('mouseout');\nconst mouseover = shortcut('mouseover');\nconst touchstart = shortcut('touchstart');\nconst touchend = shortcut('touchend');\nconst touchmove = shortcut('touchmove');\nconst resize = shortcut('resize');\nconst scroll = shortcut('scroll');\n\nexport default $;\nexport { $, add, addClass, animate, animationEnd, append, appendTo, attr, blur, change, children, click, closest, css, data, dataset, detach, each, empty, eq, filter, find, focus, focusin, focusout, hasClass, height, hide, html, index, insertAfter, insertBefore, is, keydown, keypress, keyup, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, next, nextAll, off, offset, on, once, outerHeight, outerWidth, parent, parents, prepend, prependTo, prev, prevAll, prop, remove, removeAttr, removeClass, removeData, resize, scroll, scrollLeft, scrollTo, scrollTop, show, siblings, stop, styles, submit, text, toggleClass, touchend, touchmove, touchstart, transform, transition, transitionEnd, trigger, val, value, width };\n","export function _assert_this_initialized(self) {\n    if (self === void 0) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n\n    return self;\n}\nexport { _assert_this_initialized as _ };\n","import { _set_prototype_of } from \"./_set_prototype_of.js\";\n\nexport function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });\n\n    if (superClass) _set_prototype_of(subClass, superClass);\n}\nexport { _inherits as _ };\n","export function _set_prototype_of(o, p) {\n    _set_prototype_of = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n        o.__proto__ = p;\n\n        return o;\n    };\n\n    return _set_prototype_of(o, p);\n}\nexport { _set_prototype_of as _ };\n","import { _assert_this_initialized } from \"./_assert_this_initialized.js\";\nimport { _type_of } from \"./_type_of.js\";\n\nexport function _possible_constructor_return(self, call) {\n    if (call && (_type_of(call) === \"object\" || typeof call === \"function\")) return call;\n\n    return _assert_this_initialized(self);\n}\nexport { _possible_constructor_return as _ };\n","export function _type_of(obj) {\n    \"@swc/helpers - typeof\";\n\n    return obj && typeof Symbol !== \"undefined\" && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\nexport { _type_of as _ };\n","import { _construct } from \"./_construct.js\";\nimport { _get_prototype_of } from \"./_get_prototype_of.js\";\nimport { _is_native_function } from \"./_is_native_function.js\";\nimport { _set_prototype_of } from \"./_set_prototype_of.js\";\n\nexport function _wrap_native_super(Class) {\n    var _cache = typeof Map === \"function\" ? new Map() : undefined;\n    _wrap_native_super = function(Class) {\n        if (Class === null || !_is_native_function(Class)) return Class;\n        if (typeof Class !== \"function\") throw new TypeError(\"Super expression must either be null or a function\");\n        if (typeof _cache !== \"undefined\") {\n            if (_cache.has(Class)) return _cache.get(Class);\n            _cache.set(Class, Wrapper);\n        }\n\n        function Wrapper() {\n            return _construct(Class, arguments, _get_prototype_of(this).constructor);\n        }\n        Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } });\n\n        return _set_prototype_of(Wrapper, Class);\n    };\n\n    return _wrap_native_super(Class);\n}\nexport { _wrap_native_super as _ };\n","import { _is_native_reflect_construct } from \"./_is_native_reflect_construct.js\";\nimport { _set_prototype_of } from \"./_set_prototype_of.js\";\nexport function _construct(Parent, args, Class) {\n    if (_is_native_reflect_construct()) _construct = Reflect.construct;\n    else {\n        _construct = function construct(Parent, args, Class) {\n            var a = [null];\n            a.push.apply(a, args);\n            var Constructor = Function.bind.apply(Parent, a);\n            var instance = new Constructor();\n\n            if (Class) _set_prototype_of(instance, Class.prototype);\n\n            return instance;\n        };\n    }\n\n    return _construct.apply(null, arguments);\n}\nexport { _construct as _ };\n","export function _is_native_reflect_construct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}));\n\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\nexport { _is_native_reflect_construct as _ };\n","export function _get_prototype_of(o) {\n    _get_prototype_of = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n    };\n\n    return _get_prototype_of(o);\n}\nexport { _get_prototype_of as _ };\n","export function _is_native_function(fn) {\n    return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\nexport { _is_native_function as _ };\n","import { _get_prototype_of } from \"./_get_prototype_of.js\";\nimport { _is_native_reflect_construct } from \"./_is_native_reflect_construct.js\";\nimport { _possible_constructor_return } from \"./_possible_constructor_return.js\";\n\nexport function _create_super(Derived) {\n    var hasNativeReflectConstruct = _is_native_reflect_construct();\n\n    return function _createSuperInternal() {\n        var Super = _get_prototype_of(Derived), result;\n\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _get_prototype_of(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n\n        return _possible_constructor_return(this, result);\n    };\n}\nexport { _create_super as _ };\n","import { getWindow } from 'ssr-window';\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {// no getter for object\n    }\n\n    try {\n      delete object[key];\n    } catch (e) {// something got wrong\n    }\n  });\n}\n\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\n\nfunction now() {\n  return Date.now();\n}\n\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n\n  if (!style) {\n    style = el.style;\n  }\n\n  return style;\n}\n\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    } // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n\n\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n\n  return curTransform || 0;\n}\n\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\n\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\n\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n\n  return to;\n}\n\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\n\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n\n  const animate = () => {\n    time = new Date().getTime();\n\n    if (startTime === null) {\n      startTime = time;\n    }\n\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n\n  animate();\n}\n\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty };","export function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\n\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n    passiveListener: function checkPassiveListener() {\n      let supportsPassive = false;\n\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          }\n\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {// No support\n      }\n\n      return supportsPassive;\n    }(),\n    gestures: function checkGestures() {\n      return 'ongesturestart' in window;\n    }()\n  };\n}\n\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n\n  return support;\n}\n\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\n\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n\n  return deviceCached;\n}\n\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\n\nfunction calcBrowser() {\n  const window = getWindow();\n\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n\n  return {\n    isSafari: isSafari(),\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\n\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n\n  return browser;\n}\n\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  const init = () => {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  };\n\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n\n      handler.apply(self, args);\n    }\n\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","export default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  } // Subtract paddings\n\n\n  width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n  height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  const params = swiper.params;\n  const {\n    $wrapperEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginBottom: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: '',\n    marginTop: ''\n  }); // reset cssMode offsets\n\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n  }\n\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  } // Calc slides\n\n\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n\n      const slideStyles = getComputedStyle(slide[0]);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide[0];\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (params.setWrapperSize) {\n    $wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }).css({\n      [key]: `${spaceBetween}px`\n    });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);\n\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.$el.addClass(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.$el.removeClass(backFaceHiddenClass);\n    }\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n    }\n\n    return swiper.slides.eq(index)[0];\n  }; // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || $([])).each(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate; // Visible Slides\n\n  slides.removeClass(params.slideVisibleClass);\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides.eq(i).addClass(params.slideVisibleClass);\n    }\n\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}","export default function updateProgress(translate) {\n  const swiper = this;\n\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n\n  Object.assign(swiper, {\n    progress,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}","export default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    $wrapperEl,\n    activeIndex,\n    realIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n  let activeSlide;\n\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  } // Active classes\n\n\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    }\n  } // Next Slide\n\n\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  } // Prev Slide\n\n\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    }\n\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    }\n  }\n\n  swiper.emitSlidesClasses();\n}","export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  let slideIndex;\n\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    $wrapperEl\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    $wrapperEl,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n\n  swiper.emit(`transition${step}`);\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n\n    swiper.emit(`slideChangeTransition${step}`);\n\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index !== 'number' && typeof index !== 'string') {\n    throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\n  }\n\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex]; // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  } // Update progress\n\n\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._swiperImmediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n\n    swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n    swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n  }\n\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let newIndex = index;\n\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    animating,\n    enabled,\n    params\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    animating,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n\n  let prevIndex = 0;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loopCreate() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    $wrapperEl\n  } = swiper; // Remove duplicated slides\n\n  const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\n  $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  let slides = $selector.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $selector.append(blankNode);\n      }\n\n      slides = $selector.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n\n  if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((el, index) => {\n    const slide = $(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n\n  for (let i = 0; i < swiper.loopedSlides; i += 1) {\n    const index = i - Math.floor(i / slides.length) * slides.length;\n    appendSlides.push(slides.eq(index)[0]);\n    prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);\n  }\n\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}","export default function loopFix() {\n  const swiper = this;\n  swiper.emit('beforeLoopFix');\n  const {\n    activeIndex,\n    slides,\n    loopedSlides,\n    allowSlidePrev,\n    allowSlideNext,\n    snapGrid,\n    rtlTranslate: rtl\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n  if (activeIndex < loopedSlides) {\n    newIndex = slides.length - loopedSlides * 3 + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params,\n    slides\n  } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n\n  if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nlet dummyEventAttached = false;\n\nfunction dummyEventListener() {}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    touchEvents,\n    el,\n    wrapperEl,\n    device,\n    support\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method; // Touch Events\n\n  if (!support.touch) {\n    el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n    document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n    document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n    el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n      passive: false,\n      capture\n    } : capture);\n    el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n    if (touchEvents.cancel) {\n      el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n    }\n  } // Prevent Links Clicks\n\n\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  } // Resize handler\n\n\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    support\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  if (support.touch && !dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n\n  events(swiper, 'on');\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\n\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js'; // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n\n    return found || __closestFrom(el.getRootNode().host);\n  }\n\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ''; // eslint-disable-next-line\n\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    $targetEl = $(eventPath[0]);\n  }\n\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n\n    if ($targetEl.is(data.focusableElements)) {\n      preventDefault = false;\n\n      if ($targetEl[0].nodeName === 'SELECT') {\n        data.isTouched = false;\n      }\n    }\n\n    if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n      e.preventDefault();\n    }\n  }\n\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && e.type !== 'touchmove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n\n  if (!swiper.allowTouchMove) {\n    if (!$(e.target).is(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n\n  if (!data.startMoving) {\n    return;\n  }\n\n  swiper.allowClick = false;\n\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop && !params.cssMode) {\n      swiper.loopFix();\n    }\n\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n\n    data.allowMomentumBounce = false; // Grab Cursor\n\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n\n    swiper.emit('sliderFirstMove', e);\n  }\n\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n\n  if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  } // Directions locks\n\n\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  } // Threshold\n\n\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  } // Update progress\n\n\n  swiper.updateProgress(data.currentTranslate); // Update translate\n\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  } // Find current slide size\n\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return; // Breakpoints\n\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  } // Save locks\n\n\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper; // Disable locks on resize\n\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  } // Return locks after resize\n\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  } // eslint-disable-next-line\n\n\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    $el,\n    device,\n    support\n  } = swiper; // prettier-ignore\n\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'pointer-events': !support.touch\n  }, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  $el.addClass([...classNames].join(' '));\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    $el,\n    classNames\n  } = swiper;\n  $el.removeClass(classNames.join(' '));\n  swiper.emitContainerClasses();\n}","import loadImage from './loadImage.js';\nimport preloadImages from './preloadImages.js';\nexport default {\n  loadImage,\n  preloadImages\n};","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n  const window = getWindow();\n  let image;\n\n  function onReady() {\n    if (callback) callback();\n  }\n\n  const isPicture = $(imageEl).parent('picture')[0];\n\n  if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n\n      if (sizes) {\n        image.sizes = sizes;\n      }\n\n      if (srcset) {\n        image.srcset = srcset;\n      }\n\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}","export default function preloadImages() {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n  }\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\n\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopedSlidesLimit: true,\n  loopFillGroupWithBlank: false,\n  loopPreventsSlide: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import $ from '../../shared/dom.js';\nimport { setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n\n    const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  }\n\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = slidesPerGroup + addSlidesBefore;\n    }\n\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n\n      emit('virtualUpdate');\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n\n          return slidesToRender;\n        }()\n      });\n\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n\n      return;\n    }\n\n    const prependIndexes = [];\n    const appendIndexes = [];\n\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n\n    appendIndexes.forEach(index => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach(index => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  }\n\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n\n    update(true);\n  }\n\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    swiper.virtual.slides = swiper.params.virtual.slides;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40; // Directions locks\n\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false; // Check that swiper should be inside of visible area of window\n\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n\n      const $el = swiper.$el;\n      const swiperWidth = $el[0].clientWidth;\n      const swiperHeight = $el[0].clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      if (!inView) return undefined;\n    }\n\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n\n    emit('keyPress', kc);\n    return undefined;\n  }\n\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n    // Legacy\n\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    } // side scrolling on FF with DOMMouseScroll\n\n\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    } // Fall-back if spin cannot be determined\n\n\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    } // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n\n\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    } // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n\n\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    } // If you got here is because an animation has been triggered so store the current time\n\n\n    lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n    return false;\n  }\n\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n\n    return false;\n  }\n\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta; // Get the scroll positions\n\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      }; // Keep the most recent events\n\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      } // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n\n\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        } // Emit event\n\n\n        if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\n\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n\n  function events(method) {\n    let target = swiper.$el;\n\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n\n    target[method]('mouseenter', handleMouseEnter);\n    target[method]('mouseleave', handleMouseLeave);\n    target[method]('wheel', handle);\n  }\n\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n\n    if (swiper.mousewheel.enabled) return false;\n    events('on');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n\n    if (!swiper.mousewheel.enabled) return false;\n    events('off');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport $ from '../../shared/dom.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    $nextEl: null,\n    prevEl: null,\n    $prevEl: null\n  };\n\n  function getEl(el) {\n    let $el;\n\n    if (el) {\n      $el = $(el);\n\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\n        $el = swiper.$el.find(el);\n      }\n    }\n\n    return $el;\n  }\n\n  function toggleEl($el, disabled) {\n    const params = swiper.params.navigation;\n\n    if ($el && $el.length > 0) {\n      $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n  }\n\n  function update() {\n    // Update Navigation Buttons\n    if (swiper.params.loop) return;\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    const $nextEl = getEl(params.nextEl);\n    const $prevEl = getEl(params.prevEl);\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', onNextClick);\n    }\n\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', onPrevClick);\n    }\n\n    Object.assign(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0]\n    });\n\n    if (!swiper.enabled) {\n      if ($nextEl) $nextEl.addClass(params.lockClass);\n      if ($prevEl) $prevEl.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl) {\n      $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n\n    if ($prevEl) {\n      $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n  });\n  on('click', (_s, e) => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    const targetEl = e.target;\n\n    if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n\n      if ($nextEl) {\n        isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n      } else if ($prevEl) {\n        isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n\n      if ($nextEl) {\n        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if ($prevEl) {\n        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);\n    init();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);\n    destroy();\n  };\n\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { getDocument } from 'ssr-window';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  const document = getDocument();\n\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n\n        if (!element) {\n          element = document.createElement('div');\n          element.className = checkProps[key];\n          swiper.$el.append(element);\n        }\n\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n\n  return params;\n}","import $ from '../../shared/dom.js';\nimport classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    $el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n  }\n\n  function setSideBullets($bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\n  }\n\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el; // Current/Total\n\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n      if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n        current -= slidesLength - swiper.loopedSlides * 2;\n      }\n\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    } // Types\n\n\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n\n      if (params.dynamicBullets) {\n        bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\n\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\n\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n\n      bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\n\n      if ($el.length > 1) {\n        bullets.each(bullet => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n\n            if (bulletIndex === firstIndex) {\n              setSideBullets($bullet, 'prev');\n            }\n\n            if (bulletIndex === lastIndex) {\n              setSideBullets($bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              setSideBullets($firstDisplayedBullet, 'prev');\n              setSideBullets($lastDisplayedBullet, 'next');\n            }\n          } else {\n            setSideBullets($firstDisplayedBullet, 'prev');\n            setSideBullets($lastDisplayedBullet, 'next');\n          }\n        }\n      }\n\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n\n    if (params.type === 'fraction') {\n      $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n      $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n    }\n\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n\n      $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      emit('paginationRender', $el[0]);\n    } else {\n      emit('paginationUpdate', $el[0]);\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  }\n\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n    }\n\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type !== 'custom') {\n      emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  }\n\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n      $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n\n      if ($el.length > 1) {\n        $el = $el.filter(el => {\n          if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n          return true;\n        });\n      }\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n    $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      dynamicBulletIndex = 0;\n\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Object.assign(swiper.pagination, {\n      $el,\n      el: $el[0]\n    });\n\n    if (!swiper.enabled) {\n      $el.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const $el = swiper.pagination.$el;\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n    if (params.clickable) {\n      $el.off('click', classesToSelector(params.bulletClass));\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (swiper.params.loop) {\n      update();\n    } else if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    if (!swiper.params.loop) {\n      update();\n    }\n  });\n  on('slidesLengthChange', () => {\n    if (swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('snapGridLengthChange', () => {\n    if (!swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $el\n    } = swiper.pagination;\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const {\n      $el\n    } = swiper.pagination;\n\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n\n      $el.toggleClass(swiper.params.pagination.hiddenClass);\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    init();\n    render();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    destroy();\n  };\n\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null,\n    $el: null,\n    $dragEl: null\n  };\n\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl,\n      progress\n    } = swiper;\n    const {\n      $dragEl,\n      $el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n\n    if (rtl) {\n      newPos = -newPos;\n\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n\n    if (params.hide) {\n      clearTimeout(timeout);\n      $el[0].style.opacity = 1;\n      timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  }\n\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  }\n\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      $dragEl,\n      $el\n    } = scrollbar;\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    }\n  }\n\n  function getPointerPosition(e) {\n    if (swiper.isHorizontal()) {\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n    }\n\n    return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n  }\n\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      $el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el,\n      $dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    $el.transition(0);\n\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n\n    emit('scrollbarDragStart', e);\n  }\n\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el,\n      $dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    emit('scrollbarDragMove', e);\n  }\n\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n\n    emit('scrollbarDragEnd', e);\n\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n\n  function events(method) {\n    const {\n      scrollbar,\n      touchEventsTouch,\n      touchEventsDesktop,\n      params,\n      support\n    } = swiper;\n    const $el = scrollbar.$el;\n    if (!$el) return;\n    const target = $el[0];\n    const activeListener = support.passiveListener && params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n\n    if (!support.touch) {\n      target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n      document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n      document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n    } else {\n      target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n      target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n      target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n    }\n  }\n\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n\n  function init() {\n    const {\n      scrollbar,\n      $el: $swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let $el = $(params.el);\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Object.assign(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0]\n    });\n\n    if (params.draggable) {\n      enableDraggable();\n    }\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  }\n\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const $el = swiper.scrollbar.$el;\n\n    if ($el) {\n      $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n\n    disableDraggable();\n  }\n\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      $el\n    } = swiper.scrollbar;\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n\n    if (swiper.scrollbar.$el) {\n      swiper.scrollbar.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n\n    init();\n    updateSize();\n    setTranslate();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n\n    if (swiper.scrollbar.$el) {\n      swiper.scrollbar.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n\n    destroy();\n  };\n\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import $ from '../../shared/dom.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n      setTransform(el, progress);\n    });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, slideProgress);\n      });\n    });\n  };\n\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      $el\n    } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n      const $parallaxEl = $(parallaxEl);\n      let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      $parallaxEl.transition(parallaxDuration);\n    });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let gesturesEnabled;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const gesture = {\n    $slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    $imageEl: undefined,\n    $imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n        const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n\n      scale = value;\n    }\n\n  });\n\n  function getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  } // Events\n\n\n  function onGestureStart(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureTouched = true;\n      gesture.scaleStart = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n\n    isScaling = true;\n  }\n\n  function onGestureChange(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureMoved = true;\n      gesture.scaleMove = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n      if (e.type === 'gesturechange') onGestureStart(e);\n      return;\n    }\n\n    if (support.gestures) {\n      zoom.scale = e.scale * currentScale;\n    } else {\n      zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    }\n\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function onGestureEnd(e) {\n    const device = swiper.device;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (!fakeGestureTouched || !fakeGestureMoved) {\n        return;\n      }\n\n      if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n        return;\n      }\n\n      fakeGestureTouched = false;\n      fakeGestureMoved = false;\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  }\n\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  }\n\n  function onTouchMove(e) {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n    } // Define if we need image drag\n\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n\n    e.stopPropagation();\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    } // Velocity\n\n\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY; // Define if we need image drag\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  }\n\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (e && e.target) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      }\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left + window.scrollX;\n      offsetY = gesture.$slideEl.offset().top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  } // Toggle Zoom\n\n\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n\n  function getListeners() {\n    const support = swiper.support;\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = support.passiveListener ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  function getSlideSelector() {\n    return `.${swiper.params.slideClass}`;\n  }\n\n  function toggleGestures(method) {\n    const {\n      passiveListener\n    } = getListeners();\n    const slideSelector = getSlideSelector();\n    swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n    swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n    swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n  }\n\n  function enableGestures() {\n    if (gesturesEnabled) return;\n    gesturesEnabled = true;\n    toggleGestures('on');\n  }\n\n  function disableGestures() {\n    if (!gesturesEnabled) return;\n    gesturesEnabled = false;\n    toggleGestures('off');\n  } // Attach/Detach Events\n\n\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const support = swiper.support;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    const support = swiper.support;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function Lazy({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    lazy: {\n      checkInView: false,\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n      scrollingElement: '',\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader'\n    }\n  });\n  swiper.lazy = {};\n  let scrollHandlerAttached = false;\n  let initialImageLoaded = false;\n\n  function loadInSlide(index, loadInDuplicate = true) {\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\n    const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images.push($slideEl[0]);\n    }\n\n    if ($images.length === 0) return;\n    $images.each(imageEl => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n      const $pictureEl = $imageEl.parent('picture');\n      swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n\n          if ($pictureEl.length) {\n            $pictureEl.children('source').each(sourceEl => {\n              const $source = $(sourceEl);\n\n              if ($source.attr('data-srcset')) {\n                $source.attr('srcset', $source.attr('data-srcset'));\n                $source.removeAttr('data-srcset');\n              }\n            });\n          }\n\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n\n        emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n      emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  }\n\n  function load() {\n    const {\n      $wrapperEl,\n      params: swiperParams,\n      slides,\n      activeIndex\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n    let slidesPerView = swiperParams.slidesPerView;\n\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n\n      return false;\n    }\n\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n\n      return $(slideEl).index();\n    }\n\n    if (!initialImageLoaded) initialImageLoaded = true;\n\n    if (swiper.params.watchSlidesProgress) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) loadInSlide(i);\n      }\n    } else {\n      loadInSlide(activeIndex);\n    }\n\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n        const amount = params.loadPrevNextAmount;\n        const spv = Math.ceil(slidesPerView);\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n        for (let i = activeIndex + spv; i < maxIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        } // Prev Slides\n\n\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  }\n\n  function checkInViewOnLoad() {\n    const window = getWindow();\n    if (!swiper || swiper.destroyed) return;\n    const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n    const isWindow = $scrollElement[0] === window;\n    const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n    const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n    const swiperOffset = swiper.$el.offset();\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let inView = false;\n    if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n    const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n    for (let i = 0; i < swiperCoord.length; i += 1) {\n      const point = swiperCoord[i];\n\n      if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n        if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n        inView = true;\n      }\n    }\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n\n    if (inView) {\n      load();\n      $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\n    } else if (!scrollHandlerAttached) {\n      scrollHandlerAttached = true;\n      $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\n    }\n  }\n\n  on('beforeInit', () => {\n    if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n      swiper.params.preloadImages = false;\n    }\n  });\n  on('init', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('scroll', () => {\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\n      load();\n    }\n  });\n  on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('transitionStart', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('slideChange', () => {\n    const {\n      lazy,\n      cssMode,\n      watchSlidesProgress,\n      touchReleaseOnEdges,\n      resistanceRatio\n    } = swiper.params;\n\n    if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\n      load();\n    }\n  });\n  on('destroy', () => {\n    if (!swiper.$el) return;\n    swiper.$el.find(`.${swiper.params.lazy.loadingClass}`).removeClass(swiper.params.lazy.loadingClass);\n  });\n  Object.assign(swiper.lazy, {\n    load,\n    loadInSlide\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n\n    }\n  });\n  swiper.controller = {\n    control: undefined\n  };\n\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n\n        return maxIndex;\n      };\n    }();\n\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n\n    return this;\n  } // xxx: for now i will just save one spline function to to\n\n\n  function getInterpolateFunction(c) {\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  }\n\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n\n      if (duration !== 0) {\n        c.transitionStart();\n\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n\n          c.transitionEnd();\n        });\n      }\n    }\n\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n\n  on('beforeInit', () => {\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport $ from '../../shared/dom.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  }\n\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n\n  function makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n  }\n\n  function makeElNotFocusable($el) {\n    $el.attr('tabIndex', '-1');\n  }\n\n  function addElRole($el, role) {\n    $el.attr('role', role);\n  }\n\n  function addElRoleDescription($el, description) {\n    $el.attr('aria-roledescription', description);\n  }\n\n  function addElControls($el, controls) {\n    $el.attr('aria-controls', controls);\n  }\n\n  function addElLabel($el, label) {\n    $el.attr('aria-label', label);\n  }\n\n  function addElId($el, id) {\n    $el.attr('id', id);\n  }\n\n  function addElLive($el, live) {\n    $el.attr('aria-live', live);\n  }\n\n  function disableEl($el) {\n    $el.attr('aria-disabled', true);\n  }\n\n  function enableEl($el) {\n    $el.attr('aria-disabled', false);\n  }\n\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const $targetEl = $(e.target);\n\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n\n    if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n      $targetEl[0].click();\n    }\n  }\n\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        disableEl($prevEl);\n        makeElNotFocusable($prevEl);\n      } else {\n        enableEl($prevEl);\n        makeElFocusable($prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        disableEl($nextEl);\n        makeElNotFocusable($nextEl);\n      } else {\n        enableEl($nextEl);\n        makeElFocusable($nextEl);\n      }\n    }\n  }\n\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.each(bulletEl => {\n      const $bulletEl = $(bulletEl);\n\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable($bulletEl);\n\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole($bulletEl, 'button');\n          addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n        }\n      }\n\n      if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) {\n        $bulletEl.attr('aria-current', 'true');\n      } else {\n        $bulletEl.removeAttr('aria-current');\n      }\n    });\n  }\n\n  const initNavEl = ($el, wrapperId, message) => {\n    makeElFocusable($el);\n\n    if ($el[0].tagName !== 'BUTTON') {\n      addElRole($el, 'button');\n      $el.on('keydown', onEnterOrSpaceKey);\n    }\n\n    addElLabel($el, message);\n    addElControls($el, wrapperId);\n  };\n\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n    }\n\n    if (params.slideRole) {\n      addElRole($(swiper.slides), params.slideRole);\n    }\n\n    const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\n\n    if (params.slideLabelMessage) {\n      swiper.slides.each((slideEl, index) => {\n        const $slideEl = $(slideEl);\n        const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel($slideEl, ariaLabelMessage);\n      });\n    }\n  };\n\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.$el.append(liveRegion); // Container\n\n    const $containerEl = swiper.$el;\n\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n    }\n\n    if (params.containerMessage) {\n      addElLabel($containerEl, params.containerMessage);\n    } // Wrapper\n\n\n    const $wrapperEl = swiper.$wrapperEl;\n    const wrapperId = params.id || $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId($wrapperEl, wrapperId);\n    addElLive($wrapperEl, live); // Slide\n\n    initSlides(); // Navigation\n\n    let $nextEl;\n    let $prevEl;\n\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl && $nextEl.length) {\n      initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n    } // Pagination\n\n\n    if (hasClickablePagination()) {\n      swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n    } // Tab focus\n\n\n    swiper.$el.on('focus', handleFocus, true);\n    swiper.$el.on('pointerdown', handlePointerDown, true);\n    swiper.$el.on('pointerup', handlePointerUp, true);\n  };\n\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let $nextEl;\n    let $prevEl;\n\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl) {\n      $nextEl.off('keydown', onEnterOrSpaceKey);\n    }\n\n    if ($prevEl) {\n      $prevEl.off('keydown', onEnterOrSpaceKey);\n    } // Pagination\n\n\n    if (hasClickablePagination()) {\n      swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n    } // Tab focus\n\n\n    swiper.$el.off('focus', handleFocus, true);\n    swiper.$el.off('pointerdown', handlePointerDown, true);\n    swiper.$el.off('pointerup', handlePointerUp, true);\n  }\n\n  on('beforeInit', () => {\n    liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    const slide = swiper.slides.eq(index);\n    let value = slugify(slide.attr('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n\n    const currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = slugify(slide.attr('data-history'));\n\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  const destroy = () => {\n    const window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false\n    }\n  });\n\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n\n    if (hash) {\n      const speed = 0;\n\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', onHashChange);\n    }\n  };\n\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', onHashChange);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { nextTick } from '../../shared/utils.js';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  let timeout;\n  swiper.autoplay = {\n    running: false,\n    paused: false\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n\n  function run() {\n    if (!swiper.size) {\n      swiper.autoplay.running = false;\n      swiper.autoplay.paused = false;\n      return;\n    }\n\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n\n    clearTimeout(timeout);\n    timeout = nextTick(() => {\n      let autoplayResult;\n\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          emit('autoplay');\n        } else {\n          stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.isEnd) {\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n        emit('autoplay');\n      } else {\n        stop();\n      }\n\n      if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\n        run();\n      }\n    }, delay);\n  }\n\n  function start() {\n    if (typeof timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    emit('autoplayStart');\n    run();\n    return true;\n  }\n\n  function stop() {\n    if (!swiper.autoplay.running) return false;\n    if (typeof timeout === 'undefined') return false;\n\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = undefined;\n    }\n\n    swiper.autoplay.running = false;\n    emit('autoplayStop');\n    return true;\n  }\n\n  function pause(speed) {\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (timeout) clearTimeout(timeout);\n    swiper.autoplay.paused = true;\n\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      run();\n    } else {\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n      });\n    }\n  }\n\n  function onVisibilityChange() {\n    const document = getDocument();\n\n    if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n      pause();\n    }\n\n    if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n      run();\n      swiper.autoplay.paused = false;\n    }\n  }\n\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n    if (e.target !== swiper.$wrapperEl[0]) return;\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n    swiper.autoplay.paused = false;\n\n    if (!swiper.autoplay.running) {\n      stop();\n    } else {\n      run();\n    }\n  }\n\n  function onMouseEnter() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n    } else {\n      emit('autoplayPause');\n      pause();\n    }\n\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n  }\n\n  function onMouseLeave() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      return;\n    }\n\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n    run();\n  }\n\n  function attachMouseEvents() {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.$el.on('mouseenter', onMouseEnter);\n      swiper.$el.on('mouseleave', onMouseLeave);\n    }\n  }\n\n  function detachMouseEvents() {\n    swiper.$el.off('mouseenter', onMouseEnter);\n    swiper.$el.off('mouseleave', onMouseLeave);\n  }\n\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      start();\n      const document = getDocument();\n      document.addEventListener('visibilitychange', onVisibilityChange);\n      attachMouseEvents();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.autoplay.running) {\n      if (internal || !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.pause(speed);\n      } else {\n        stop();\n      }\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.autoplay.running) {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        stop();\n      } else {\n        pause();\n      }\n    }\n  });\n  on('touchEnd', () => {\n    if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n      run();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n\n    if (swiper.autoplay.running) {\n      stop();\n    }\n\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  });\n  Object.assign(swiper.autoplay, {\n    pause,\n    run,\n    start,\n    stop\n  });\n}","import { isObject } from '../../shared/utils.js';\nimport $ from '../../shared/dom.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n    }\n\n    swiper.slideTo(slideToIndex);\n  }\n\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs\n\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        } // Find actual thumbs index to slide to\n\n\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n\n        if (typeof prevThumbsIndex === 'undefined') {\n          newThumbsIndex = nextThumbsIndex;\n        } else if (typeof nextThumbsIndex === 'undefined') {\n          newThumbsIndex = prevThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = nextThumbsIndex;\n        } else {\n          newThumbsIndex = prevThumbsIndex;\n        }\n\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {// newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    init();\n    update(true);\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper; // Velocity\n\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      $wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper; // Time diff\n\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n\n      return;\n    }\n\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n\n        newPosition = -newPosition;\n      }\n\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid; // Set slides order\n\n    let newSlideOrderIndex;\n    let column;\n    let row;\n\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.css({\n        '-webkit-order': newSlideOrderIndex,\n        order: newSlideOrderIndex\n      });\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n\n    slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');\n  };\n\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.$wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`\n    });\n\n    if (centeredSlides) {\n      snapGrid.splice(0, snapGrid.length);\n      const newSlidesGrid = [];\n\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  let newActiveIndex = activeIndex + 1;\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  const baseLength = swiper.slides.length;\n\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.css({\n        opacity: slideOpacity\n      }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.fadeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows\n\n      swiper.slides.each(slideEl => {\n        const $slideEl = swiper.$(slideEl);\n        $slideEl.find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').remove();\n      }); // create new one\n\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","export default function effectTarget(effectParams, $slideEl) {\n  if (effectParams.transformEl) {\n    return $slideEl.find(effectParams.transformEl).css({\n      'backface-visibility': 'hidden',\n      '-webkit-backface-visibility': 'hidden'\n    });\n  }\n\n  return $slideEl;\n}","export default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformEl,\n  allSlides\n}) {\n  const {\n    slides,\n    activeIndex,\n    $wrapperEl\n  } = swiper;\n\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let $transitionEndTarget;\n\n    if (allSlides) {\n      $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n    } else {\n      $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\n    }\n\n    $transitionEndTarget.transitionEnd(() => {\n      if (eventTriggered) return;\n      if (!swiper || swiper.destroyed) return;\n      eventTriggered = true;\n      swiper.animating = false;\n      const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n      for (let i = 0; i < triggerEvents.length; i += 1) {\n        $wrapperEl.trigger(triggerEvents[i]);\n      }\n    });\n  }\n}","import $ from '../../shared/dom.js';\nimport effectInit from '../../shared/effect-init.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n      $slideEl.append(shadowBefore);\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n      $slideEl.append(shadowAfter);\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.each(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows($(slideEl), progress, isHorizontal);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n\n        $cubeShadowEl.css({\n          height: `${swiperWidth}px`\n        });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n\n      $slideEl.transform(transform);\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, isHorizontal);\n      }\n    }\n\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n    $wrapperEl[0].style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n\n  const setTransition = duration => {\n    const {\n      $el,\n      slides\n    } = swiper;\n    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  };\n\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import $ from '../../shared/dom.js';\nimport createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.each(slideEl => {\n      const $slideEl = $(slideEl);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n\n      createSlideShadows($slideEl, progress, params);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, params);\n      }\n\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import $ from './dom.js';\nexport default function createShadow(params, $slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n  let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\n\n  if (!$shadowEl.length) {\n    $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\n    $shadowContainer.append($shadowEl);\n  }\n\n  return $shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth; // Each slide offset from center\n\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n        }\n\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.coverflowEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n  };\n\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      transformEl: null,\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      $wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      } // set translate\n\n\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      }); // set rotates\n\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n      if (custom && data.shadow || !custom) {\n        let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0 && data.shadow) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform).css({\n        opacity: opacityString\n      });\n\n      if (data.origin) {\n        $targetEl.css('transform-origin', data.origin);\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.creativeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","const items = document.querySelectorAll('.faq__item');\n\ndocument.addEventListener('click', function (evt) {\n  const target = evt.target;\n  if (target.className !== 'faq__button') return;\n\n  let item = event.target.closest('.faq__item');\n  item.classList.toggle('hide');\n});\n","(() => {\n   const menuBtnRef = document.querySelector(\"[data-menu-button]\");\n   const mobileMenuRef = document.querySelector(\"[data-menu]\");\n \n   menuBtnRef.addEventListener(\"click\", () => {\n     const expanded =\n       menuBtnRef.getAttribute(\"aria-expanded\") === \"true\" || false;\n \n     menuBtnRef.classList.toggle(\"is-open\");\n     menuBtnRef.setAttribute(\"aria-expanded\", !expanded);\n \n     mobileMenuRef.classList.toggle(\"is-open\");\n   });\n })();","function initializeModal(openModalBtnSelector, backdropSelector, modalSelector, closeModalBtnSelector) {\n  const openModalBtns = document.querySelectorAll(openModalBtnSelector);\n  const backdrop = document.querySelector(backdropSelector);\n  const modal = document.querySelector(modalSelector);\n  const closeModalBtn = document.querySelector(closeModalBtnSelector);\n\n  function closeModal() {\n    modal.classList.add('is-hidden');\n    backdrop.classList.add('is-hidden');\n    document.removeEventListener('keydown', onEscKeyDown);\n    backdrop.removeEventListener('click', onBackdropClick);\n    modal.removeEventListener('click', onModalClick);\n  }\n\n  function onEscKeyDown(event) {\n    if (event.key === 'Escape') {\n      closeModal();\n    }\n  }\n\n  function onBackdropClick(event) {\n    if (event.target === backdrop && !modal.contains(event.target)) {\n      closeModal();\n    }\n  }\n\n  function onModalClick(event) {\n    if (!event.target.closest('.modal-stores__body, .modal-payment__body')) {\n      closeModal();\n    }\n  }\n\n  openModalBtns.forEach((openModalBtn) => {\n    openModalBtn.addEventListener('click', () => {\n      modal.classList.remove('is-hidden');\n      backdrop.classList.remove('is-hidden');\n      document.addEventListener('keydown', onEscKeyDown);\n      backdrop.addEventListener('click', onBackdropClick);\n      modal.addEventListener('click', onModalClick);\n    });\n  });\n\n  closeModalBtn.addEventListener('click', () => {\n    closeModal();\n  });\n}\n\ninitializeModal('[openmodal-stores]', '.backdrop-stores', '.modal-stores', '.modal-stores__close');\ninitializeModal('[openmodal-payment]', '.backdrop-payment', '.modal-payment', '.modal-payment__close');\n","(() => {\n  const refs = {\n    openModalBtns: document.querySelectorAll(\"[modal-open]\"),\n    closeModalBtn: document.querySelector(\"[data-modal-close]\"),\n    modal: document.querySelector(\"[data-modal]\"),\n  };\n\n  refs.openModalBtns.forEach((btn) => {\n    btn.addEventListener(\"click\", toggleModal);\n  });\n\n  refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n\n  function toggleModal() {\n    refs.modal.classList.toggle(\"is-hidden\");\n    document.body.classList.toggle(\"scroll-lock\");\n  }\n})();\n"],"names":["$e3055412a69a0bec$export$2996f80ef42b8419","instance","Constructor","TypeError","$89767be5ae191d10$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c35227b66bb73462$export$79e617b1955a2616","arr","len","arr2","Array","$7a656066cb9fb4bf$export$a5be06335b3a083c","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","$b6c37a1b08cb752d$export$fdf2a89c76341bbf","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","value","err","$7fed984c591c61d1$export$1b5e630bc3aea29f","iter","$3bd3f193ccd5630c$var$isObject","obj","$3bd3f193ccd5630c$export$8b58be045bf06082","arguments","src","keys","forEach","menuBtnRef","mobileMenuRef","$f745992e8d1b1180$var$support","$33c7356d035118c5$var$deviceCached","$f7ea505fdac53fb2$var$browser","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","document","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","callback","cancelAnimationFrame","id","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","window","$90bf9ee1e0f0ea97$export$f3b8ed2e4a5d10b8","self","ReferenceError","$29ba11907b394831$export$c2c98ac76e997b63","p","setPrototypeOf","__proto__","$47e0aa82139bfe16$export$5f0017c582d45a2d","$3feb72aea5525294$export$ef97c660ca164e52","$68d2f7aa73fd860f$export$685354647fba1516","Reflect","construct","sham","Proxy","Boolean","valueOf","e","$2537243cab6b0016$export$2d841144c5f8c4ab","Parent","args","Class","a","apply","Function","bind","$40cae3b32ee7ab1c$export$f09211a7d3c496a1","getPrototypeOf","$c96ca6cb05cc1798$export$2466d533fda16e33","_cache","Map","undefined","indexOf","has","get","set","Wrapper","create","$be50936c4ecb1713$var$Dom7","Array1","subClass","superClass","Dom7","hasNativeReflectConstruct","_super","result","Super","NewTarget","items","_this","proto","concat","$be50936c4ecb1713$var$arrayFlat","res","el","$be50936c4ecb1713$var$arrayFilter","filter","$be50936c4ecb1713$export$3d8c2f653ac9d0b9","selector","context","html","trim","toCreate","tempParent","innerHTML","$be50936c4ecb1713$var$qsa","nodeType","$be50936c4ecb1713$var$arrayUnique","uniqueArray","fn","$be50936c4ecb1713$var$noTrigger","split","$be50936c4ecb1713$var$shortcut","_len","_key","trigger","on","$181e7e5b06640d28$var$Methods","addClass","classes","classNames","map","c","_el_classList","classList","add","removeClass","remove","hasClass","className","contains","toggleClass","toggle","attr","attrs","getAttribute","attrName","removeAttr","removeAttribute","transform","transition","duration","transitionDuration","ref","j","_args","eventType","targetSelector","listener","capture","handleLiveEvent","eventData","dom7EventData","unshift","is","parents","k","handleEvent","events","event1","dom7LiveListeners","proxyListener","event","dom7Listeners","off","handlers","handler","splice","dom7proxy","evt","detail","bubbles","cancelable","data","dataIndex","dispatchEvent","transitionEnd","dom","fireCallBack","outerWidth","includeMargins","styles","offsetWidth","parseFloat","outerHeight","offsetHeight","offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","prop","each","index","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","child","previousSibling","eq","returnIndex","append","newChild","els","tempDiv","firstChild","appendChild","prepend","insertBefore","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","parent","parentNode","closest","find","foundElements","found","removeChild","$a568c0d5880c90ba$export$1e71eb4bef00f6b0","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$export$8b58be045bf06082","to","noExtend","_loop","nextSource","HTMLElement","node","keysArray","nextIndex","nextKey","desc","getOwnPropertyDescriptor","__swiper__","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","param","time","swiper","targetPosition","side","window1","startPosition","translate","startTime","params","speed","wrapperEl","scrollSnapType","cssModeFrameID","dir","isOutOfBound","current","animate","getTime","currentPosition","easeProgress","Math","cos","progress","max","min","PI","scrollTo","overflow","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","passiveListener","supportsPassive","opts","gestures","$309f9b76d4fd47ea$export$2e2bcd8739ae039","runCallbacks","direction","step","activeIndex","previousIndex","emit","$6a43b17d59f348c6$export$2e2bcd8739ae039","touchEventsData","touches","enabled","animating","preventInteractionOnTransition","cssMode","loop","loopFix","originalEvent","$targetEl","touchEventsTarget","isTouchEvent","type","which","button","isTouched","isMoved","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","shadowRoot","noSwipingSelector","isTargetShadow","noSwiping","$6a43b17d59f348c6$var$closestElement","base","__closestFrom","assignedSlot","getRootNode","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","assign","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","updateSize","swipeDirection","threshold","allowThresholdMove","focusableElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","freeMode","onTouchStart","$02baf1653270db8e$export$2e2bcd8739ae039","touchAngle","rtl","rtlTranslate","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","isVertical","maxTranslate","minTranslate","diffX","diffY","sqrt","pow","isHorizontal","atan2","abs","touchMoveStopPropagation","nested","stopPropagation","startTranslate","getTranslate","setTransition","$wrapperEl","allowMomentumBounce","grabCursor","allowSlideNext","allowSlidePrev","setGrabCursor","diff","touchRatio","currentTranslate","disableParentSwiper","resistanceRatio","resistance","followFinger","watchSlidesProgress","updateActiveIndex","updateSlidesClasses","onTouchMove","updateProgress","setTranslate","$15353fd53fa0afb1$export$2e2bcd8739ae039","currentPos","slidesGrid","touchEndTime","timeDiff","pathTree","updateClickedSlide","lastClickTime","destroyed","onTouchEnd","stopIndex","groupSize","slidesSizesGrid","slidesPerGroupSkip","slidesPerGroup","increment","rewindFirstIndex","rewindLastIndex","rewind","isBeginning","virtual","slides","isEnd","ratio","increment1","longSwipesMs","longSwipes","slideTo","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$f43968ae768025a8$export$2e2bcd8739ae039","breakpoints","setBreakpoint","snapGrid","updateSlides","slidesPerView","centeredSlides","autoplay","running","paused","run","watchOverflow","checkOverflow","$23ec95d99b99a94a$export$2e2bcd8739ae039","preventClicks","preventClicksPropagation","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","previousTranslate","translatesDiff","methodName","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","method","touchEvents","device","support","domMethod","start","passiveListeners","passive","move","end","cancel","onClick","onScroll","updateOnWindowResize","ios","android","$881af1db6e44c2b5$var$isGridEnabled","grid","rows","$69cbdaf801d551aa$export$2e2bcd8739ae039","init","initialSlide","resizeObserver","createElements","width","height","url","autoHeight","setWrapperSize","virtualTranslate","effect","breakpointsBase","spaceBetween","slidesPerGroupAuto","centeredSlidesBounds","slidesOffsetBefore","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","roundLengths","simulateTouch","uniqueNavElements","slideToClickedSlide","preloadImages","updateOnImagesReady","loopAdditionalSlides","loopedSlides","loopedSlidesLimit","loopFillGroupWithBlank","loopPreventsSlide","maxBackfaceHiddenSlides","containerModifierClass","slideClass","slideBlankClass","slideActiveClass","slideDuplicateActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slideDuplicateNextClass","slidePrevClass","slideDuplicatePrevClass","wrapperClass","runCallbacksOnInit","_emitClasses","$1c280aeb2839a22d$var$prototypes","eventsEmitter","priority","eventsListeners","once","onceHandler","__emitterProxy","onAny","eventsAnyListeners","offAny","eventHandler","eventsArray","update","$el","clientWidth","clientHeight","parseInt","Number","isNaN","size","slideSize","getDirectionLabel","property","getDirectionPropertyValue","label","swiperSize","wrongRTL","isVirtual","previousSlidesLength","slidesLength","offsetBefore","offsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","replace","virtualSize","marginLeft","marginBottom","marginTop","marginRight","gridEnabled","initSlides","shouldResetSlideSize","slide","updateSlide","slideStyles","currentTransform","currentWebKitTransform","webkitTransform","paddingLeft","paddingRight","boxSizing","_slide_","floor","swiperSlideSize","updateWrapperSize","newSlidesGrid","i1","slidesGridItem","_","slideIndex","allSlidesSize","slideSizeValue","maxSnap","snap","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","updateSlidesOffset","backFaceHiddenClass","hasClassBackfaceClassAdded","updateAutoHeight","activeSlides","newHeight","getSlideByIndex","visibleSlides","ceil","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","originalProgress","multiplier","wasBeginning","wasEnd","activeSlide","realIndex","nextSlide","prevSlide","emitSlidesClasses","newActiveIndex","previousRealIndex","previousSnapIndex","skip","initialized","slideFound","clickedSlide","clickedIndex","axis","matrix","curTransform","transformMatrix","curStyle","currentStyle","WebKitCSSMatrix","join","MozTransform","OTransform","MsTransform","msTransform","m41","m42","byController","x","y","translateTo","translateBounds","internal","newTranslate","_obj","isH","onTranslateToWrapperTransitionEnd","transitionStart","initial","Error","indexAsNumber","isFinite","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_swiperImmediateVirtual","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","slideNext","perGroup","slidesPerViewDynamic","_clientLeft","slidePrev","prevSnapIndex","normalize","val","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","slideReset","slideToClosest","currentSnap","nextSnap","currentSnap1","slideToIndex","loopCreate","$selector","blankSlidesNum","blankNode","prependSlides","appendSlides","i2","cloneNode","i3","snapTranslate","loopDestroy","moving","isLocked","cursor","unsetGrabCursor","attachEvents","detachEvents","_swiper_loopedSlides","breakpoint","getBreakpoint","currentBreakpoint","breakpointParams","breakpointOnlyParams","originalParams","wasMultiRow","isMultiRow","wasEnabled","emitContainerClasses","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","containerEl","currentHeight","innerHeight","points","point","substr","sort","b","_points_i","wasLocked","lastSlideIndex","lastSlideRightEdge","addClasses","entries","prefix","resultClasses","suffixes","item","removeClasses","images","loadImage","imageEl","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","imagesLoaded","imagesToLoad","currentSrc","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","protoProps","staticProps","Swiper","_swiper_modules","swipers","newParams","overrides","$33c7356d035118c5$var$calcDevice","platform","ua","screenWidth","screenHeight","match","ipad","ipod","iphone","macos","iPadScreens","os","browser","isSafari","toLowerCase","isWebView","modules","__modules__","allModulesParams","mod","extendParams","moduleParamName","moduleParams","auto","swiperParams","passedParams","eventName","$","velocity","touchEventsTouch","touchEventsDesktop","clickTimeout","velocities","cls","slideEl","updates","getSlideClasses","view","exact","spv","breakLoop","newDirection","needUpdate","currentDirection","mounted","getWrapperSelector","getWrapper","options","wrapper","mount","deleteInstance","cleanStyles","object","newDefaults","module","m","installModule","$4971557da444be9d$var$initializeModal","openModalBtnSelector","backdropSelector","modalSelector","closeModalBtnSelector","openModalBtns","backdrop","modal","closeModalBtn","closeModal","onEscKeyDown","onBackdropClick","onModalClick","openModalBtn","prototypeGroup","protoMethod","use","observer","animationFrame","resizeHandler","createObserver","ResizeObserver","newWidth","contentBoxSize","contentRect","inlineSize","blockSize","observe","removeObserver","unobserve","orientationChangeHandler","observers","attach","MutationObserver","WebkitMutationObserver","mutations","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","disconnect","expanded","refs","toggleModal","btn","pagination","clickable","renderBullet"],"version":3,"file":"index.1cc0fa7d.js.map"}